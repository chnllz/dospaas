<template>
  <div>
    <a-form :form="form">
      <a-form-item :label="$t('流水规则')" :labelCol="labelCol" :wrapperCol="wrapperCol">
        <a-dropdown>
          <a-button>
            <a-icon type="menu" />
            {{ $t('添加') }}
          </a-button>
          <a-menu slot="overlay">
            <a-menu-item @click="addRule('date')">
              <a>{{ $t('日期时间') }}</a>
            </a-menu-item>
            <a-menu-item @click="addRule('string')">
              <a>{{ $t('固定字符') }}</a>
            </a-menu-item>
            <a-menu-item @click="addRule('form')">
              <a>{{ $t('动态生成') }}</a>
            </a-menu-item>
          </a-menu>
        </a-dropdown>
      </a-form-item>
      <a-row>
        <a-col :span="4"></a-col>
        <a-col :span="20">
          <draggable v-model="serial" animation="200" handle=".handle" @start="drag = true" @end="drag = false">
            <div v-for="(value, key) in serial" :key="key" class="list-item">
              <a-row>
                <a-col :span="2" class="handle">
                  <a-icon type="drag" />
                </a-col>
                <a-col :span="3" style="margin-right: 10px">
                  <a-input
                    size="small"
                    :read-only="true"
                    :value="value.name"
                    style="background-color: #f5f5f5; color: #62b1fb"
                  />
                </a-col>
                <a-col :span="6">
                  <a-row v-if="value.type === 'automatic'" type="flex" align="middle">
                    <a-col flex="60px">{{ $t('计数位数') }}</a-col>
                    <a-col flex="auto">
                      <a-input-number v-model="value.countNumber" size="small" :min="2" :max="12" />
                    </a-col>
                  </a-row>
                  <a-select v-if="value.type === 'date'" v-model="value.format" size="small">
                    <a-select-option v-for="(item, index) in Dateformat" :key="index" :value="item.type">
                      {{ item.value }}
                    </a-select-option>
                  </a-select>
                  <a-form-item v-if="value.type === 'string'" class="string">
                    <a-input
                      v-decorator="[
                        'string' + '_' + key,
                        {
                          initialValue: value.string,
                          rules: [{ required: true, message: $t('请输入动态生成内容') }, { validator: checkRequired }]
                        }
                      ]"
                      size="small"
                      @change="
                        (e) => {
                          value.string = e.target.value
                        }
                      "
                    />
                  </a-form-item>
                  <a-input
                    v-if="value.type === 'form'"
                    size="small"
                    :read-only="true"
                    :value="$t('动态生成')"
                    style="background-color: #f5f5f5"
                  />
                </a-col>
                <a-col v-if="value.type === 'automatic'" :span="6" class="text">
                  <a-row type="flex" align="middle">
                    <a-col flex="60px">{{ $t('计数方式') }}</a-col>
                    <a-col flex="auto">
                      <a-select v-model="value.countWay" size="small">
                        <a-select-option v-for="(item, index) in resetPeriod" :key="index" :value="item.value">
                          {{ item.type }}
                        </a-select-option>
                      </a-select>
                    </a-col>
                  </a-row>
                </a-col>
                <a-col v-if="value.type === 'form'" :span="1" style="padding: 2px 0 0 15px">
                  <a-icon :style="{ fontSize: '16px' }" type="setting" @click="setRule(value, key)" />
                </a-col>
                <a-col :span="1" style="padding: 2px 0 0 15px">
                  <a-popconfirm
                    v-if="value.type !== 'automatic'"
                    :title="$t('您确定要删除该记录吗？')"
                    :ok-text="$t('确认')"
                    :cancel-text="$t('取消')"
                    @confirm="serial.splice(key, 1)"
                  >
                    <a-icon
                      :style="{ fontSize: '18px', color: '#ff4d4f', cursor: 'pointer' }"
                      type="minus-square"
                      theme="filled"
                    />
                  </a-popconfirm>
                </a-col>
              </a-row>
            </div>
          </draggable>
        </a-col>
      </a-row>
      <a-drawer :title="$t('动态生成设置')" :width="800" :visible="visible" @close="visible = !visible">
        <a-spin :spinning="loading">
          <div>
            <a-button block type="dashed" @click="addData">
              <a-icon type="plus" />
              {{ $t('新增动态生成设置') }}
            </a-button>
            <div style="margin-top: 10px">
              <a-form :form="formDrawer">
                <a-collapse
                  v-model="activeKey"
                  defaultActiveKey="0"
                  @change="activeKey = Array.from(new Set(activeKey))"
                >
                  <a-collapse-panel
                    v-for="(item, key) in dynamicData"
                    :key="String(key + 1)"
                    :header="$t('动态生成设置-') + (key + 1)"
                  >
                    <a-divider orientation="left" style="font-size: 14px">{{ $t('当：满足以下条件') }}</a-divider>
                    <div>
                      <div>
                        <span style="margin-left: 15px">{{ $t('以下条件组合方式') }}</span>
                        <a-select v-model="item.logic" style="width: 80px; margin-left: 15px" size="small">
                          <a-select-option value="and">{{ $t('且(and)') }}</a-select-option>
                          <a-select-option value="or">{{ $t('或(or)') }}</a-select-option>
                        </a-select>
                        <a-card
                          v-if="item.conditions && item.conditions.length > 0"
                          size="small"
                          style="margin-top: 10px"
                        >
                          <a-row
                            v-for="(simpleItem, simpleIndex) in item.conditions"
                            :key="simpleIndex"
                            type="flex"
                            align="middle"
                            :gutter="10"
                          >
                            <a-col :span="3">
                              <a-select
                                v-model="simpleItem.fieldUser"
                                size="small"
                                @change="
                                  (value) => {
                                    if (value === 'field') {
                                      simpleItem.condition = [
                                        {
                                          include: '',
                                          value: ''
                                        }
                                      ]
                                    } else {
                                      simpleItem.condition = [
                                        {
                                          include: '',
                                          value: []
                                        }
                                      ]
                                    }
                                  }
                                "
                              >
                                <a-select-option value="field">{{ $t('字段') }}</a-select-option>
                                <a-select-option value="else">{{ $t('else条件') }}</a-select-option>
                                <a-select-option value="custom" @click="simpleItem.ruleModel = '1'">
                                  {{ $t('自定义') }}
                                </a-select-option>
                              </a-select>
                            </a-col>
                            <a-col v-if="simpleItem.fieldUser === 'field'" :span="4">
                              <a-select
                                v-if="simpleItem.fieldUser === 'field'"
                                v-model="simpleItem.field"
                                size="small"
                                show-search
                                :allowClear="true"
                                option-filter-prop="children"
                                @change="
                                  (value) => {
                                    simpleItem.condition = [
                                      {
                                        include: '',
                                        value: ''
                                      }
                                    ]
                                    fieldArr.forEach((item1) => {
                                      if (item1.alias === value) {
                                        item1.settings = JSON.parse(item1.setting)
                                        // 判断是否有数据字典
                                        simpleItem.src = item1.settings.form.src ? item1.settings.form.src : ''
                                        simpleItem.formType = item1.formType
                                        simpleItem.fieldId = item1.fieldId
                                        simpleItem.fieldType = item1.fieldType
                                        if (simpleItem.src && item1.formType === 'treeselect') {
                                          getTreeOption(simpleItem, item1)
                                        } else if (simpleItem.src) {
                                          getOption(simpleItem)
                                        } else if (item1.formType === 'treeselect') {
                                          simpleItem.dataSource = item1.settings.attribute.dataSource
                                          getTreeOption(simpleItem, item1)
                                        } else {
                                          simpleItem.option = []
                                        }
                                        simpleItem.form = item1.settings.form
                                        // 根据字段，给出相应条件
                                        if (['text', 'textarea', 'associated'].indexOf(item1.formType) !== -1) {
                                          simpleItem.conditionArr = [
                                            { enName: 'eq', cnName: $t('等于') },
                                            { enName: 'ne', cnName: $t('不等于') },
                                            { enName: 'cn', cnName: $t('包含') },
                                            { enName: 'nc', cnName: $t('不包含') },
                                            { enName: 'bw', cnName: $t('开始于') },
                                            { enName: 'ew', cnName: $t('结束于') },
                                            { enName: 'em', cnName: $t('为空') },
                                            { enName: 'nem', cnName: $t('不为空') }
                                          ]
                                        } else if (
                                          ['radio', 'switch', 'checkbox', 'combobox'].indexOf(item1.formType) !== -1
                                        ) {
                                          simpleItem.conditionArr = [
                                            { enName: 'eq', cnName: $t('等于') },
                                            { enName: 'ne', cnName: $t('不等于') },
                                            { enName: 'em', cnName: $t('为空') },
                                            { enName: 'nem', cnName: $t('不为空') }
                                          ]
                                        } else if (['number', 'datetime'].indexOf(item1.formType) !== -1) {
                                          simpleItem.conditionArr = [
                                            { enName: 'eq', cnName: $t('等于') },
                                            { enName: 'ne', cnName: $t('不等于') },
                                            { enName: 'gt', cnName: $t('大于') },
                                            { enName: 'ge', cnName: $t('大于等于') },
                                            { enName: 'lt', cnName: $t('小于') },
                                            { enName: 'le', cnName: $t('小于等于') },
                                            { enName: 'em', cnName: $t('为空') },
                                            { enName: 'nem', cnName: $t('不为空') }
                                          ]
                                        } else if (
                                          ['cascader', 'address', 'treeselect'].indexOf(item1.formType) !== -1
                                        ) {
                                          simpleItem.conditionArr = [
                                            { enName: 'cn', cnName: $t('包含') },
                                            { enName: 'nc', cnName: $t('不包含') }
                                          ]
                                        }
                                      }
                                    })
                                  }
                                "
                              >
                                <a-select-option
                                  v-for="(fieldItem, fieldIndex) in fieldArr"
                                  :key="fieldIndex"
                                  :value="fieldItem.alias"
                                >
                                  {{ fieldItem.name }}
                                </a-select-option>
                              </a-select>
                            </a-col>
                            <a-col
                              v-if="simpleItem.fieldUser === 'field'"
                              :span="12"
                              style="border: 1px solid #e8e8e8; margin-bottom: 4px"
                            >
                              <a-row
                                v-for="(includeItem, includeIndex) in simpleItem.condition"
                                :key="includeIndex"
                                type="flex"
                                align="middle"
                                style="margin: 10px 0"
                                :gutter="5"
                              >
                                <a-col v-if="simpleItem.fieldUser === 'field'" :span="6">
                                  <a-select
                                    v-model="includeItem.include"
                                    size="small"
                                    :dropdownMatchSelectWidth="false"
                                    @change="
                                      (value) => {
                                        choiceInclude(value, includeItem)
                                      }
                                    "
                                  >
                                    <a-select-option
                                      v-for="(crItem, crIndex) in simpleItem.conditionArr"
                                      :key="crIndex"
                                      option-filter-prop="children"
                                      :value="crItem.enName"
                                    >
                                      {{ crItem.cnName }}
                                    </a-select-option>
                                  </a-select>
                                </a-col>
                                <a-col v-if="simpleItem.fieldUser === 'field'" :span="14">
                                  <template v-if="!includeItem.type">
                                    <!-- 日期 -->
                                    <a-date-picker
                                      v-if="simpleItem.formType === 'datetime' && simpleItem.fieldType === 'DATETIME'"
                                      size="small"
                                      style="width: 100%"
                                      :defaultValue="
                                        includeItem.value ? moment(includeItem.value, 'YYYY-MM-DD HH:mm:ss') : null
                                      "
                                      format="YYYY-MM-DD HH:mm:ss"
                                      @change="
                                        (dates, dateStrings) => {
                                          includeItem.value = dateStrings
                                        }
                                      "
                                    ></a-date-picker>
                                    <a-date-picker
                                      v-else-if="simpleItem.formType === 'datetime' && simpleItem.fieldType === 'DATE'"
                                      size="small"
                                      style="width: 100%"
                                      :defaultValue="includeItem.value ? moment(includeItem.value, 'YYYY-MM-DD') : null"
                                      format="YYYY-MM-DD"
                                      @change="
                                        (dates, dateStrings) => {
                                          includeItem.value = dateStrings
                                        }
                                      "
                                    ></a-date-picker>
                                    <a-time-picker
                                      v-else-if="simpleItem.formType === 'datetime' && simpleItem.fieldType === 'TIME'"
                                      size="small"
                                      style="width: 100%"
                                      :defaultValue="includeItem.value ? moment(includeItem.value, 'HH:mm:ss') : null"
                                      format="HH:mm:ss"
                                      @change="
                                        (dates, dateStrings) => {
                                          includeItem.value = dateStrings
                                        }
                                      "
                                    ></a-time-picker>
                                    <!-- 树选择 -->
                                    <div v-else-if="simpleItem.formType === 'treeselect'">
                                      <a-tree-select
                                        v-if="simpleItem.dataSource && simpleItem.dataSource === 'addressBook'"
                                        v-model="includeItem.value"
                                        style="width: 100%"
                                        size="small"
                                        :placeholder="$t('请选择')"
                                        :treeDefaultExpandedKeys="includeItem.value ? includeItem.value.split(',') : []"
                                        :dropdown-style="{ maxHeight: '400px', overflow: 'auto' }"
                                        :tree-data="simpleItem.option"
                                        :load-data="
                                          (data) => {
                                            return onLoadData(data, simpleItem, includeItem)
                                          }
                                        "
                                      ></a-tree-select>
                                      <a-tree-select
                                        v-else
                                        v-model="includeItem.value"
                                        style="width: 100%"
                                        size="small"
                                        :placeholder="$t('请选择')"
                                        :dropdown-style="{ maxHeight: '400px', overflow: 'auto' }"
                                        :tree-data="simpleItem.option"
                                        :load-data="
                                          (data) => {
                                            return onLoadData(data, simpleItem, includeItem)
                                          }
                                        "
                                        :treeDefaultExpandedKeys="includeItem.value ? includeItem.value.split(',') : []"
                                      ></a-tree-select>
                                    </div>
                                    <!-- 地址 -->
                                    <div v-else-if="simpleItem.formType === 'address'">
                                      <address-select
                                        size="small"
                                        :defaultValue="includeItem.value"
                                        fieldType="field"
                                        :series="simpleItem.form.showSeries"
                                        @send="
                                          (display, val, alias, allValue) => {
                                            includeItem.value = val
                                            includeItem.allValue = allValue
                                          }
                                        "
                                      />
                                    </div>
                                    <a-input v-else-if="!simpleItem.src" v-model="includeItem.value" size="small" />
                                    <a-select
                                      v-else-if="simpleItem.src && simpleItem.formType === 'combobox'"
                                      size="small"
                                      :placeholder="$t('请选择')"
                                      :defaultValue="includeItem.value ? includeItem.value : undefined"
                                      changeOnSelect
                                      @change="
                                        (value) => {
                                          includeItem.value = value
                                        }
                                      "
                                    >
                                      <a-select-option
                                        v-for="(fieldItem, fieldKey) in simpleItem.option"
                                        :key="fieldKey"
                                        :value="fieldItem.value"
                                      >
                                        {{ fieldItem.label }}
                                      </a-select-option>
                                    </a-select>
                                    <!-- 级联选择 -->
                                    <div v-else-if="simpleItem.formType === 'cascader'">
                                      <tabs-select
                                        :defaultValue="includeItem.value"
                                        :valueKey="simpleItem.form.src || ''"
                                        action="edit"
                                        size="small"
                                        :display="includeItem.display"
                                        :field="includeItem"
                                        :writeBack="simpleItem.form.writeBack"
                                        fieldType="search"
                                        @send="
                                          (val, alias, display, status, allValue) => {
                                            includeItem.value = val
                                            includeItem.display = display
                                            includeItem.allValue = allValue
                                          }
                                        "
                                      />
                                    </div>
                                    <a-select
                                      v-else-if="simpleItem.option && simpleItem.option.length > 0"
                                      size="small"
                                      :placeholder="$t('请选择')"
                                      :defaultValue="includeItem.value ? includeItem.value : []"
                                      @change="
                                        (value) => {
                                          includeItem.value = value
                                        }
                                      "
                                    >
                                      <a-select-option
                                        v-for="(optItem, optIndex) in simpleItem.option"
                                        :key="optIndex"
                                        :value="optItem.value"
                                      >
                                        {{ optItem.label }}
                                      </a-select-option>
                                    </a-select>
                                  </template>
                                  <template v-else>
                                    <a-input type="text" disabled size="small" />
                                  </template>
                                </a-col>
                                <a-col :span="4" style="padding-top: 2px">
                                  <a-icon
                                    :style="{ fontSize: '20px', color: '#52c41a' }"
                                    type="plus-square"
                                    theme="filled"
                                    @click="
                                      simpleItem.condition.splice(includeIndex + 1, 0, { include: '', value: '' })
                                    "
                                  />
                                  <a-icon
                                    :style="{
                                      fontSize: '20px',
                                      color: simpleItem.condition.length === 1 ? '#bfbfbf' : '#ff4d4f',
                                      'padding-left': '5px'
                                    }"
                                    type="minus-square"
                                    theme="filled"
                                    @click="
                                      simpleItem.condition.length === 1
                                        ? ''
                                        : simpleItem.condition.splice(includeIndex, 1)
                                    "
                                  />
                                </a-col>
                              </a-row>
                            </a-col>
                            <a-col v-if="simpleItem.fieldUser === 'else'" :span="16" style="margin-bottom: 4px"></a-col>
                            <a-col :span="3">
                              <a-select v-model="simpleItem.logic" style="width: 80px; margin-left: 5px" size="small">
                                <a-select-option value="and">{{ $t('且(and)') }}</a-select-option>
                                <a-select-option value="or">{{ $t('或(or)') }}</a-select-option>
                              </a-select>
                            </a-col>
                            <a-col :span="2" style="padding-top: 2px">
                              <a-icon
                                :style="{ fontSize: '20px', color: '#52c41a' }"
                                type="plus-square"
                                theme="filled"
                                @click="
                                  item.conditions.splice(simpleIndex + 1, 0, {
                                    fieldUser: 'field',
                                    condition: [
                                      {
                                        include: '',
                                        value: ''
                                      }
                                    ],
                                    logic: 'and'
                                  })
                                "
                              />
                              <a-icon
                                :style="{
                                  fontSize: '20px',
                                  color: item.conditions.length === 1 ? '#bfbfbf' : '#ff4d4f',
                                  'padding-left': '5px'
                                }"
                                type="minus-square"
                                theme="filled"
                                @click="item.conditions.length === 1 ? '' : item.conditions.splice(simpleIndex, 1)"
                              />
                            </a-col>
                          </a-row>
                        </a-card>
                      </div>
                      <a-divider orientation="left" style="font-size: 14px">{{ $t('那么：动态生成内容为') }}</a-divider>
                      <a-form-item :label="$t('动态生成内容')" :labelCol="labelCol" :wrapperCol="wrapperCol">
                        <a-input
                          v-decorator="[
                            'content' + '_' + key,
                            {
                              initialValue: item.string,
                              rules: [
                                { required: true, message: $t('请输入动态生成内容') },
                                { validator: checkRequired }
                              ]
                            }
                          ]"
                        />
                      </a-form-item>
                    </div>
                    <div slot="extra">
                      <a-icon
                        style="margin-right: 10px"
                        type="plus"
                        @click.stop="
                          () => {
                            dynamicData.splice(key + 1, 0, {
                              conditions: [
                                {
                                  fieldUser: 'field',
                                  condition: [
                                    {
                                      include: '',
                                      value: ''
                                    }
                                  ],
                                  logic: 'and'
                                }
                              ],
                              logic: 'and'
                            })
                            activeKey.push(String(key + 2))
                          }
                        "
                      />
                      <a-icon type="delete" @click.stop="handleDelete" />
                    </div>
                  </a-collapse-panel>
                </a-collapse>
              </a-form>
            </div>
          </div>
          <div class="bbar">
            <a-button type="primary" @click="handleSubmitRule">{{ $t('保存') }}</a-button>
            <a-button @click="visible = !visible">{{ $t('关闭') }}</a-button>
          </div>
        </a-spin>
      </a-drawer>
    </a-form>
  </div>
</template>
<script>
import { Collapse } from 'ant-design-vue'
import Vue from 'vue'
Vue.use(Collapse)
export default {
  i18n: window.lang('admin'),
  components: {
    draggable: () => import('vuedraggable'),
    TabsSelect: () => import('@/views/admin/Field/TabsSelect'),
    AddressSelect: () => import('@/views/admin/Field/AddressSelect')
  },
  props: {
    setting: {
      type: Object,
      default: () => { }
    },
    config: {
      type: Object,
      default: () => { }
    }
  },
  data () {
    return {
      visible: false,
      loading: false,
      activeKey: ['1'],
      labelCol: { span: 4 },
      wrapperCol: { span: 20 },
      form: this.$form.createForm(this),
      formDrawer: this.$form.createForm(this),
      dateShow: true,
      fieldArr: [],
      data: {},
      ruleKey: '',
      dynamicData: [],
      serial: [{
        name: this.$t('自动计数'),
        type: 'automatic',
        countNumber: '5',
        value: '',
        countWay: ''
      }],
      resetPeriod: [{
        type: this.$t('一直累加'),
        value: ''
      }, {
        type: this.$t('每日重置'),
        value: 'day'
      }, {
        type: this.$t('每周重置'),
        value: 'week'
      }, {
        type: this.$t('每月重置'),
        value: 'month'
      }, {
        type: this.$t('每年重置'),
        value: 'year'
      }],
      Dateformat: [{
        type: 'year4',
        value: this.$t('年(全4位)')
      }, {
        type: 'year2',
        value: this.$t('年(后2位)')
      }, {
        type: 'month',
        value: this.$t('月(2位)')
      }, {
        type: 'day',
        value: this.$t('日(2位)')
      }, {
        type: 'hour',
        value: this.$t('时(2位)')
      }, {
        type: 'minute',
        value: this.$t('分(2位)')
      }, {
        type: 'seconds',
        value: this.$t('秒(2位)')
      }]
    }
  },
  watch: {
    setting: {
      handler (newVal) {
        this.data = JSON.parse(JSON.stringify(newVal))
        this.serial = newVal.form.serialRule || [{
          name: this.$t('自动计数'),
          type: 'automatic',
          countNumber: '5',
          value: '',
          countWay: ''
        }]
      },
      immediate: true
    }
  },
  methods: {
    addRule (type) {
      if (type === 'date') {
        this.serial.push({
          name: this.$t('日期时间'),
          type: 'date',
          format: 'year4'
        })
      } else if (type === 'string') {
        this.serial.push({
          name: this.$t('固定字符'),
          type: 'string'
        })
      } else if (type === 'form') {
        this.serial.push({
          name: this.$t('动态生成'),
          type: 'form'
        })
      }
    },
    setRule (data, index) {
      this.ruleKey = index
      this.dynamicData = data.generateRules || [{
        conditions: [{
          fieldUser: 'field',
          condition: [{
            include: '',
            value: ''
          }],
          logic: 'and'
        }],
        logic: 'and'
      }]
      this.axios({
        url: '/admin/field/init',
        data: {
          pageNo: 1,
          pageSize: 999,
          sortField: 'listOrder',
          sortOrder: 'ascend',
          tableId: this.config.tableId
        }
      }).then(res => {
        this.fieldArr = res.result.data.filter(item => {
          return ['text', 'radio', 'switch', 'checkbox', 'combobox', 'cascader'].indexOf(item.formType) !== -1
        })
        // 遍历规则
        this.dynamicData.forEach((dataItem, dataIndex) => {
          dataItem.conditions.forEach((simpleItem, simpleIndex) => {
            if (!simpleItem.field) {
              simpleItem.conditionArr = [{ enName: 'eq', cnName: this.$t('等于') }]
            } else {
              this.fieldArr.forEach((fieldItem, fieldIndex) => {
                if (simpleItem.field === fieldItem.alias) {
                  fieldItem.settings = JSON.parse(fieldItem.setting)
                  simpleItem.src = fieldItem.settings.form.src ? fieldItem.settings.form.src : ''
                  simpleItem.formType = fieldItem.formType
                  simpleItem.fieldId = fieldItem.fieldId
                  if (simpleItem.src && fieldItem.formType === 'treeselect') {
                    this.getTreeOption(simpleItem, fieldItem)
                  } else if (simpleItem.src) {
                    this.getOption(simpleItem)
                  } else if (fieldItem.formType === 'treeselect') {
                    simpleItem.dataSource = fieldItem.settings.attribute.dataSource
                    this.getTreeOption(simpleItem, fieldItem)
                  } else {
                    simpleItem.option = []
                  }
                  // 根据字段，给出相应条件
                  if (['text', 'textarea', 'associated'].indexOf(fieldItem.formType) !== -1) {
                    simpleItem.conditionArr = [
                      { enName: 'eq', cnName: this.$t('等于') },
                      { enName: 'ne', cnName: this.$t('不等于') },
                      { enName: 'cn', cnName: this.$t('包含') },
                      { enName: 'nc', cnName: this.$t('不包含') },
                      { enName: 'bw', cnName: this.$t('开始于') },
                      { enName: 'ew', cnName: this.$t('结束于') },
                      { enName: 'em', cnName: this.$t('为空') },
                      { enName: 'nem', cnName: this.$t('不为空') }]
                  } else if (['radio', 'switch', 'checkbox', 'combobox'].indexOf(fieldItem.formType) !== -1) {
                    simpleItem.conditionArr = [
                      { enName: 'eq', cnName: this.$t('等于') },
                      { enName: 'ne', cnName: this.$t('不等于') },
                      { enName: 'em', cnName: this.$t('为空') },
                      { enName: 'nem', cnName: this.$t('不为空') }]
                  } else if (['number', 'datetime'].indexOf(fieldItem.formType) !== -1) {
                    simpleItem.conditionArr = [
                      { enName: 'eq', cnName: this.$t('等于') },
                      { enName: 'ne', cnName: this.$t('不等于') },
                      { enName: 'gt', cnName: this.$t('大于') },
                      { enName: 'ge', cnName: this.$t('大于等于') },
                      { enName: 'lt', cnName: this.$t('小于') },
                      { enName: 'le', cnName: this.$t('小于等于') },
                      { enName: 'em', cnName: this.$t('为空') },
                      { enName: 'nem', cnName: this.$t('不为空') }]
                  } else if (['cascader', 'address', 'treeselect'].indexOf(fieldItem.formType) !== -1) {
                    simpleItem.conditionArr = [
                      { enName: 'cn', cnName: this.$t('包含') },
                      { enName: 'nc', cnName: this.$t('不包含') }]
                  }
                }
              })
            }
          })
        })
      })
      this.visible = true
    },
    addData () {
      this.dynamicData.push({
        conditions: [{
          fieldUser: 'field',
          condition: [{
            include: '',
            value: ''
          }],
          logic: 'and'
        }],
        logic: 'and'
      })
      this.activeKey.push(String(this.dynamicData.length))
    },
    // 选择关系
    choiceInclude (value, includeItem) {
      includeItem.value = ''
      if (value === 'em' || value === 'nem') {
        includeItem.type = 'empty'
      } else {
        includeItem.type = undefined
      }
    },
    getOption (item) {
      this.axios({
        url: '/admin/search/dictSearch',
        data: { dictCategoryNumber: item.src }
      }).then(res => {
        this.$set(item, 'option', res.result)
      })
    },
    getTreeOption (simpleItem, item) {
      this.axios({
        url: '/admin/general/getFieldForm',
        data: { fieldId: item.fieldId, value: simpleItem.value }
      }).then(res => {
        this.$set(simpleItem, 'option', res.result.option)
      })
    },
    onLoadData (treeNode, item, includeItem) {
      const { value } = treeNode.dataRef
      if (item.dataSource === 'addressBook') {
        return new Promise((resolve) => {
          this.axios({
            url: '/admin/address/getAddressChildren',
            data: { parentNumber: value }
          }).then(res => {
            item.option.forEach(item => {
              if (item.value === value && !item.children) {
                const arr = []
                res.result.forEach(arrItem => {
                  const obj = { label: arrItem.name, value: arrItem.number }
                  arr.push(obj)
                })
                this.$set(item, 'children', arr)
              } else if (item.children) {
                item.children.forEach(childItem => {
                  if (childItem.value === value && !childItem.children) {
                    const arr = []
                    res.result.forEach(arrItem => {
                      const obj = { label: arrItem.name, value: arrItem.number }
                      arr.push(obj)
                    })
                    this.$set(childItem, 'children', arr)
                  } else if (childItem.children) {
                    childItem.children.forEach(childrenItem => {
                      if (childrenItem.value === value && !childrenItem.children) {
                        const arr = []
                        res.result.forEach(arrItem => {
                          const obj = { label: arrItem.name, value: arrItem.number, isLeaf: true }
                          arr.push(obj)
                        })
                        this.$set(childrenItem, 'children', arr)
                      }
                    })
                  }
                })
              }
            })
          })
          resolve()
        })
      } else {
        return new Promise((resolve) => {
          this.axios({
            url: '/admin/general/getFieldForm',
            data: { fieldId: item.fieldId, value: includeItem.value }
          }).then(res => {
            this.$set(item, 'option', res.result.option)
          })
          resolve()
        })
      }
    },
    checkRequired (rule, value, callback) {
      const string = this.$t('请输入英文字母（大小写）、数字、符号（仅限：_、-）')
      if (!/^[a-zA-Z-_\d]+/.test(value)) {
        callback(string)
      } else {
        callback()
      }
    },
    handleDelete (index) {
      const that = this
      this.$confirm({
        title: this.$t('您确认要删除该记录吗？'),
        onOk () {
          that.dynamicData.splice(index, 1)
        }
      })
    },
    handleSubmitRule () {
      this.formDrawer.validateFields((err, values) => {
        if (!err) {
          this.dynamicData.forEach((item, index) => {
            for (const i in values) {
              if (i.includes(String(index))) {
                item.string = values[i]
              }
            }
            item.conditions.forEach(condItem => {
              const obj = {
                condition: condItem.condition,
                fieldUser: condItem.fieldUser,
                logic: condItem.logic,
                field: condItem.field
              }
              for (const i in condItem) {
                if (obj[i]) {
                  condItem[i] = obj[i]
                } else {
                  delete condItem[i]
                }
              }
            })
          })
          this.serial.forEach((serItem, serIndexs) => {
            if (serIndexs === this.ruleKey) {
              serItem.generateRules = this.dynamicData
            }
          })
          this.visible = false
        }
      })
    },
    handleSubmit () {
      let val = {}
      const { validateFields } = this.form
      validateFields((errors, values) => {
        if (!errors) {
          for (const i in values) {
            const arr = i.split('_')
            this.serial[Number(arr[1])].string = values[i]
          }
          val = this.serial
        }
      })
      return val
    }
  }
}
</script>
<style lang="less" scoped>
.list-item {
  padding: 8px;
  margin-bottom: -1px;
  background-color: #fff;
  border: 1px solid rgba(0, 0, 0, 0.125);
}
.list-item[draggable='true'] {
  opacity: 0.5;
  background: #c8ebfb;
}
.list-item .handle {
  margin-right: 5px;
  padding: 0 25px 0 10px;
  cursor: move;
}
.list-item .text {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}
.list-item:first-child {
  border-top-left-radius: 2px;
  border-top-right-radius: 2px;
}
.list-item:last-child {
  margin-bottom: 0;
  border-bottom-right-radius: 2px;
  border-bottom-left-radius: 2px;
}
.string /deep/ .ant-form-item-control {
  line-height: 23px;
}
</style>
