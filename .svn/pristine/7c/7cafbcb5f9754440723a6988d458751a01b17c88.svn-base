<template>
  <div class="page">
    <a-spin :spinning="loading">
      <a-tabs v-model="currentTab" :animated="false" @change="handleTabChange">
        <a-tab-pane v-for="parentItem in tabList" :key="parentItem.key" :tab="parentItem.title">
          <a-form :labelCol="{ span: 6 }" :wrapperCol="{ span: 18 }" class="search">
            <a-card size="small" :title="$t('搜索')">
              <a-space slot="extra">
                <a-button htmlType="submit" @click="getDataList">{{ $t('搜索') }}</a-button>
                <a-button @click="reset">{{ $t('重置') }}</a-button>
              </a-space>
              <a-row class="form" :class="advanced ? 'advanced' : 'normal'">
                <a-col :span="6">
                  <a-form-item :label="$t('会话开始时间')">
                    <a-range-picker
                      v-model="showObj['sessionTime' + parentItem.key]"
                      :allowClear="false"
                      :disabled-date="disabledDate"
                      :ranges="{
                        [$t('昨天')]: [
                          moment().startOf('day').subtract('day', 1),
                          moment().endOf('day').subtract('day', 1)
                        ],
                        [$t('本周')]: [moment().startOf('week'), moment().endOf('week')],
                        [$t('最近七天')]: [moment().subtract(7, 'days'), moment()],
                        [$t('本月')]: [moment().startOf('month'), moment().endOf('month')],
                        [$t('最近31天')]: [moment().subtract(31, 'days'), moment()]
                      }"
                      format="YYYY-MM-DD"
                      style="width: 100%"
                      @change="getInputTime"
                      @openChange="onOpenChange"
                      @calendarChange="onCalendarChange"
                    />
                  </a-form-item>
                </a-col>
                <a-col v-if="['group'].includes(currentTab)" :span="6">
                  <a-form-item :label="$t('技能组')">
                    <a-select
                      v-model="showObj['groupId' + parentItem.key]"
                      mode="multiple"
                      allowClear
                      showSearch
                      option-filter-prop="children"
                      style="width: 100%"
                    >
                      <a-select-option v-for="item in groupList" :key="item.serviceId" :value="item.serviceId">
                        {{ item.nickName }}
                      </a-select-option>
                    </a-select>
                  </a-form-item>
                </a-col>
                <a-col v-if="['name'].includes(currentTab)" :span="6">
                  <a-form-item :label="$t('客服名称')">
                    <a-tree-select
                      v-model="showObj['serviceId' + parentItem.key]"
                      :filterTreeNode="filterTreeOption"
                      :dropdown-style="{ maxHeight: '400px', overflow: 'auto' }"
                      allowClear
                      treeCheckable
                      multiple
                      :replaceFields="{
                        value: 'serviceId',
                        title: 'nickName'
                      }"
                      style="width: 100%"
                      :tree-data="treeData"
                    />
                  </a-form-item>
                </a-col>
              </a-row>
            </a-card>
          </a-form>
          <a-row type="flex" justify="space-between" align="middle" style="margin-bottom: 8px">
            <a-col>
              <a-space>
                <a-button v-action:export icon="download" @click="handleExport">{{ $t('导出') }}</a-button>
              </a-space>
            </a-col>
            <a-col>
              <a-popover placement="left">
                <template slot="content">
                  <div v-dompurify-html="content" style="width: 400px"></div>
                </template>
                <a-icon type="question-circle" style="font-size: 16px" />
              </a-popover>
            </a-col>
          </a-row>
          <a-table
            ref="table"
            :scroll="{ x: true, y: windowHeight - 370 }"
            class="table-fill"
            size="small"
            rowKey="id"
            :columns="columns"
            :dataSource="showTable['dataList' + parentItem.key]"
            :pagination="false"
          ></a-table>
        </a-tab-pane>
      </a-tabs>
      <general-export ref="generalExport" />
    </a-spin>
  </div>
</template>
<script>
export default {
  i18n: window.lang('chat'),
  components: {
    GeneralExport: () => import('@/views/admin/Table/GeneralExport')
  },
  data () {
    return {
      filterTreeOption (input, treeNode) {
        return treeNode.data.props.title.includes(input)
      },
      loading: false,
      // 搜索栏显示参数
      showObj: {
        sessionTimegroup: [this.moment().startOf('day').subtract('day', 1), this.moment().endOf('day').subtract('day', 1)],
        sessionTimename: [this.moment().startOf('day').subtract('day', 1), this.moment().endOf('day').subtract('day', 1)]
      },
      // 表格数据对象
      showTable: {},
      showApi: {
        dayIs: false,
        monthIs: false,
        timeIs: false
      },
      windowHeight: document.documentElement.clientHeight,
      rowKey: 'groupId',
      treeData: [],
      sessionTime: [this.moment().startOf('day').subtract('day', 1), this.moment().endOf('day').subtract('day', 1)],
      openMonth: false,
      modeMonth: ['month', 'month'],
      currentTab: 'group',
      tabList: [{
        title: this.$t('服务质量-按技能组'),
        key: 'group'
      }, {
        title: this.$t('服务质量-按客服'),
        key: 'name'
      }],
      content: `${this.$t('总会话量：访客被客服接起的数量。')}<br />>
              ${this.$t('总评价量：访客做出了评价的会话数。')}<br />
              ${this.$t('评价率：总评价量/总会话量*100%。')}<br />
              ${this.$t('满意率：满意数/总评价量*100%')}<br />
              ${this.$t('满意数：评价结果为“非常满意”、“满意”的数量。')}<br />
              ${this.$t('一般数：评价结果为“一般”的数量。')}<br />
              ${this.$t('不满意数：评价结果为“不满意”、“非常不满意”的数量。')}`,
      advanced: false,
      groupList: [],
      queryParam: {
        sortField: 'groupId',
        sortOrder: 'descend',
        startTime: this.moment().startOf('day').subtract('day', 1).format('YYYY-MM-DD'),
        endTime: this.moment().endOf('day').subtract('day', 1).format('YYYY-MM-DD')
      },
      columns: [{
        title: '#',
        width: 40,
        customRender: (text, record, index) => {
          return index + 1
        }
      }, {
        title: this.$t('技能组'),
        width: 150,
        dataIndex: 'groupName',
        sorter: (a, b) => a[this.rowKey === 'groupId' ? 'groupName' : 'serviceName'] === this.$t('合计') ? 0 : a[this.rowKey === 'groupId' ? 'groupName' : 'serviceName'].length - b[this.rowKey === 'groupId' ? 'groupName' : 'serviceName'].length
      }, {
        title: this.$t('总会话量'),
        width: 150,
        dataIndex: 'conversationNumber',
        sorter: (a, b) => a[this.rowKey === 'groupId' ? 'groupName' : 'serviceName'] === this.$t('合计') ? 0 : a.conversationNumber - b.conversationNumber
      }, {
        title: this.$t('总评价量'),
        width: 150,
        dataIndex: 'commentNumber',
        sorter: (a, b) => a[this.rowKey === 'groupId' ? 'groupName' : 'serviceName'] === this.$t('合计') ? 0 : a.commentNumber - b.commentNumber
      }, {
        title: this.$t('评价率'),
        width: 150,

        dataIndex: 'commentRate',
        sorter: (a, b) => a[this.rowKey === 'groupId' ? 'groupName' : 'serviceName'] === this.$t('合计') ? 0 : Number(a.commentRate.substring(0, a.commentRate.indexOf('.') + 3)) - Number(b.commentRate.substring(0, b.commentRate.indexOf('.') + 3))
      }, {
        title: this.$t('满意率'),
        width: 150,
        dataIndex: 'satisfyRate',
        sorter: (a, b) => a[this.rowKey === 'groupId' ? 'groupName' : 'serviceName'] === this.$t('合计') ? 0 : Number(a.satisfyRate.substring(0, a.satisfyRate.indexOf('.') + 3)) - Number(b.satisfyRate.substring(0, b.satisfyRate.indexOf('.') + 3)),
        customRender: (text, record) => {
          if (!text) {
            return '0.00%'
          } else {
            return text
          }
        }
      }, {
        title: this.$t('满意(非常满意+满意)'),
        width: 150,
        dataIndex: 'satisfy',
        sorter: (a, b) => a[this.rowKey === 'groupId' ? 'groupName' : 'serviceName'] === this.$t('合计') ? 0 : a.satisfy - b.satisfy
      }, {
        title: this.$t('一般'),
        width: 150,
        dataIndex: 'general',
        sorter: (a, b) => a[this.rowKey === 'groupId' ? 'groupName' : 'serviceName'] === this.$t('合计') ? 0 : a.general - b.general
      }, {
        title: this.$t('不满意(不满意+非常不满意)'),
        width: 150,
        dataIndex: 'dissatisfied',
        sorter: (a, b) => a[this.rowKey === 'groupId' ? 'groupName' : 'serviceName'] === this.$t('合计') ? 0 : a.dissatisfied - b.dissatisfied
      }],
      sorter: { field: 'groupId', order: 'descend' },
      disabledCurrent: null
    }
  },
  mounted () {
    const strArr = ['group', 'name']
    strArr.forEach(element => {
      this.$set(this.showObj, ['groupId' + element], undefined)
      this.$set(this.showObj, ['serviceId' + element], undefined)
    })
    window.onresize = () => {
      return (() => {
        window.fullHeight = document.documentElement.clientHeight
        this.windowHeight = window.fullHeight
      })()
    }
    this.axios({
      url: '/chat/group/getAllGroup'
    }).then(res => {
      this.groupList = res.result.data
      const getTreeData = (array, parent) => {
        array.forEach(item => {
          if (item.children && item.children.length) {
            getTreeData(item.children, item)
          } else if (!item.distributionMode) {
            item.nickName = `${item.serviceId}(${item.nickName})`
            item.serviceId = `${item.serviceId}-${parent?.['serviceId'] || ''}`
          } else {
            item.disabled = true
          }
        })
      }
      getTreeData(res.result.data)
      this.treeData = res.result.data
    })
    this.getDataList()
  },
  methods: {
    getDataList () {
      this.queryParam.tab = this.currentTab
      this.queryParam.sortField = this.rowKey
      this.queryParam.groupId = this.showObj['groupId' + this.currentTab]
      this.queryParam.serviceId = this.showObj['serviceId' + this.currentTab]
      const params = this.queryParam
      if (params.serviceId) {
        params.serviceId = this.queryParam.serviceId.map(item => {
          return item.split('-')[0]
        })
      }
      this.loading = true
      this.axios({
        url: '/chat/customerReport/serviceQualityInit',
        data: params
      }).then(res => {
        this.loading = false
        if (res.code !== 0) {
          this.$message.error(res.message)
          return
        }
        this.showTable['dataList' + this.currentTab] = res.result.data
        if (res.result?.total) {
          let obj = ''
          if (this.rowKey === 'groupId') {
            obj = { ...res.result.total, ...{ 'id': parseInt(Math.random() * (10000000 - 100000 + 1) + 100000, 10), groupName: this.$t('合计') } }
          } else {
            obj = { ...res.result.total, ...{ 'id': parseInt(Math.random() * (10000000 - 100000 + 1) + 100000, 10), serviceName: this.$t('合计') } }
          }
          this.showTable['dataList' + this.currentTab].push(obj)
        }
        this.$forceUpdate()
      })
    },
    handleTabChange (activeKey) {
      this.currentTab = activeKey
      this.queryParam.tab = this.currentTab
      if (['group'].includes(activeKey)) {
        this.queryParam.serviceId = undefined
        this.columns[1].title = this.$t('技能组')
        this.columns[1].dataIndex = 'groupName'
        this.rowKey = 'groupId'
        this.columns[1].customRender = (text) => text
      } else {
        if (activeKey === 'name' && !this.showApi.monthIs) {
          this.getDataList()
          this.showApi.monthIs = true
        }
        this.queryParam.groupId = undefined
        this.columns[1].title = this.$t('客服名称')
        this.columns[1].dataIndex = 'serviceName'
        this.columns[1].customRender = (text, record) => {
          return record.serviceId ? `${record.serviceId}(${text})` : text
        }
        this.rowKey = 'serviceId'
      }
      this.queryParam.sortField = this.rowKey
      this.queryParam.startTime = this.showObj['sessionTime' + this.currentTab][0].format('YYYY-MM-DD')
      this.queryParam.endTime = this.showObj['sessionTime' + this.currentTab][1].format('YYYY-MM-DD')
    },
    // 重置
    reset () {
      this.showObj['groupId' + this.currentTab] = undefined
      this.showObj['serviceId' + this.currentTab] = undefined
      const startDayTime = this.moment().startOf('day').subtract('day', 1).format('YYYY-MM-DD')
      const endDayTime = this.moment().endOf('day').subtract('day', 1).format('YYYY-MM-DD')
      this.queryParam = {
        sortField: this.rowKey,
        sortOrder: 'descend',
        startTime: startDayTime,
        endTime: endDayTime,
        tab: this.currentTab
      }
      const day = [this.moment().startOf('day').subtract('day', 1), this.moment().endOf('day').subtract('day', 1)]
      this.showObj['sessionTime' + this.currentTab] = day
      this.getDataList()
    },
    onOpenChange (status) {
      // 清空禁用时间段的设置
      this.disabledCurrent = null
    },
    onCalendarChange (dates) {
      // 获取手动选择的时间段起始值
      this.disabledCurrent = dates[0]
    },
    disabledDate (current, date) {
      if (!this.disabledCurrent) return false
      return (current && current < this.moment(this.disabledCurrent).subtract(31, 'days').endOf('day')) || current > this.moment(this.disabledCurrent).add(30, 'days').endOf('day')
    },
    getInputTime (date, dateString) {
      this.queryParam.startTime = dateString[0]
      this.queryParam.endTime = dateString[1]
    },
    handleExport () {
      const params = this.queryParam
      if (params.serviceId) {
        params.serviceId = this.queryParam.serviceId.map(item => {
          return item.split('-')[0]
        })
      }
      this.$refs.generalExport.show({
        title: this.$t('导出'),
        number: 'SysServiceQuality',
        className: 'ExportChatStatsTask',
        parameter: {
          condition: {
            req: params,
            type: 'serviceQuality'
          }
        }
      })
    }
  }
}
</script>
