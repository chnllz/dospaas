<template>
  <a-modal
    :destroyOnClose="true"
    :title="$t('备注')"
    :width="900"
    :visible="visible"
    :maskClosable="!buttonLoading"
    :confirmLoading="buttonLoading"
    :closable="!buttonLoading"
    @cancel="visible = !visible"
    @ok="handleSubmit"
  >
    <a-form :form="form">
      <a-row :gutter="16">
        <a-col :span="12">
          <a-form-item :labelCol="{ span: 3 }" :wrapperCol="{ span: 21 }" :label="$t('备注')">
            <a-textarea
              v-decorator="['remark', { rules: [{ required: true, message: $t('备注不能为空') }] }]"
              :rows="15"
            ></a-textarea>
          </a-form-item>
          <a-form-item :labelCol="{ span: 3 }" :wrapperCol="{ span: 21 }" :label="$t('附件')">
            <a-upload
              v-decorator="[
                'logAttachment',
                {
                  valuePropName: 'fileList',
                  getValueFromEvent: normFile
                }
              ]"
              :action="`${$store.state.env.VUE_APP_API_BASE_URL}admin/attachment/upload/?uploadName=upload`"
              :headers="{ 'Access-Token': $store.getters.userInfo.accessToken }"
              name="upload"
              :multiple="true"
              listType="text"
              :accept="'.png,.jpg,.jpeg,.gif,.bmp,.flv,.swf,.mkv,.avi,.rm,.rmvb,.mpeg,.mpg,.ogg,.ogv,.mov,.wmv,.mp4,.webm,.mp3,.wav,.mid,.rar,.zip,.tar,.gz,.7z,.bz2,.cab,.iso,.doc,.docx,.xls,.xlsx,.ppt,.pptx,.pdf,.txt,.md,.xml'"
              :before-upload="
                (file, fileList) => {
                  return beforeUpload(file, fileList)
                }
              "
              @change="
                (info) => {
                  fileChange(info)
                }
              "
            >
              <div>
                <a-button>
                  <a-icon type="upload" />
                  {{ $t('上传文件') }}
                </a-button>
              </div>
            </a-upload>
          </a-form-item>
        </a-col>
        <a-col :span="12">
          <template>
            <a-radio-group
              v-model="mode"
              style="width: 100%; margin: 4px 0px; padding: 0px 8px"
              @change="modeReplyChange"
            >
              <a-row>
                <a-col :span="12">
                  <a-radio-button value="private" style="width: 100%; text-align: center">
                    {{ $t('个人库') }}
                  </a-radio-button>
                </a-col>
                <a-col :span="12">
                  <a-radio-button value="public" style="width: 100%; text-align: center">
                    {{ $t('公共库') }}
                  </a-radio-button>
                </a-col>
              </a-row>
            </a-radio-group>
            <a-row style="padding: 8px">
              <a-col :span="12" style="margin-right: -1px">
                <a-tree-select
                  v-model="queryParam[mode].categoryStr"
                  :placeholder="$t('请选择分类')"
                  :filterTreeNode="filterTreeOption"
                  :dropdown-style="{ maxHeight: '400px', overflow: 'auto' }"
                  allowClear
                  :replaceFields="{
                    value: 'dictDataNumber',
                    title: 'dictDataName'
                  }"
                  style="width: 100%"
                  :tree-data="categoryList[mode]"
                />
              </a-col>
              <a-col :span="12">
                <a-input-search
                  v-model="queryParam[mode].content"
                  :placeholder="$t('请输入快捷词或常用语内容')"
                  @search="$refs.replyTable.refresh(true)"
                />
              </a-col>
            </a-row>
            <s-table
              ref="replyTable"
              size="small"
              rowKey="id"
              :columns="columns"
              :data="replyContentData"
              :sorter="sorter"
              :pagination="{
                simple: true
              }"
              class="table-fill"
              :scroll="{ y: true }"
              style="padding: 0 8px; height: 250px"
            >
              <div slot="action" slot-scope="text, record">
                <a @click="selected(record.content)">{{ $t('选中') }}</a>
              </div>
            </s-table>
          </template>
        </a-col>
      </a-row>
    </a-form>
  </a-modal>
</template>
<script>
export default {
  data () {
    return {
      filterTreeOption (input, treeNode) {
        return treeNode.data.props.title.includes(input)
      },
      visible: false,
      buttonLoading: false,
      form: this.$form.createForm(this),
      config: {},
      mode: 'private',
      categoryStr: undefined,
      categoryList: { private: [], public: [] },
      queryParam: { private: {}, public: {} },
      // 快捷内容表头
      columns: [{
        title: '',
        dataIndex: 'action',
        scopedSlots: { customRender: 'action' },
        width: 50
      }, {
        title: this.$t('快捷词'),
        dataIndex: 'title',
        scopedSlots: { customRender: 'titleKey' },
        sorter: true
      }, {
        title: this.$t('常用语内容'),
        dataIndex: 'content',
        sorter: true
      }],
      sorter: { field: 'id', order: 'ascend' }
    }
  },
  methods: {
    show (config) {
      this.visible = true
      this.config = config
      this.modeReplyChange()
    },
    selected (str) {
      this.form.setFieldsValue({
        'remark': str
      })
    },
    // 获取快捷分类
    modeReplyChange () {
      if (this.categoryList[this.mode]?.length === 0) {
        this.axios({
          url: '/admin/dict/getChildren',
          data: {
            dictCategoryNumber: 'quick_reply_category',
            parentDictDataNumber: null
          }
        }).then(res => {
          if (res.code === 0) {
            this.categoryList[this.mode] = res.result
          }
        })
      }
      if (this.replyDialog) {
        this.$refs.replyTable.refresh(true)
      }
    },
    // 获取快捷内容
    replyContentData (parameter) {
      const templateId = this.mode === 'private' ? '7917f970e98a4f8a9df95c86931a87de' : 'e509332b84074b419fce96ab160cf986'
      let query = {}
      if (this.queryParam[this.mode].content) {
        query = {
          advanceSearch: {
            logic: 'or',
            searchConditions: [{
              alias: 'content',
              logic: 'or',
              searchCondition: [{ include: 'cn', value: this.queryParam[this.mode].content }]
            }, {
              alias: 'title',
              logic: 'or',
              searchCondition: [{ include: 'cn', value: this.queryParam[this.mode].content }]
            }]
          }
        }
      }
      const data = Object.assign(parameter, {
        associated: [],
        commonSearch: this.queryParam[this.mode].categoryStr ? { category: [this.queryParam[this.mode].categoryStr] } : {},
        customColumn: [],
        flowCondition: 'my_process',
        multiFieldSearchList: [],
        templateSearchList: [],
        templateId: templateId
      }, query)
      return this.axios({
        url: '/admin/userTable/init',
        data: data
      }).then(res => {
        if (res.code === 0) {
          this.replyDialog = true
          return res.result
        }
      })
    },
    // 附件限制条件
    beforeUpload (file, fileList) {
      return new Promise((resolve, reject) => {
        const fileType = '.png,.jpg,.jpeg,.gif,.bmp,.flv,.swf,.mkv,.avi,.rm,.rmvb,.mpeg,.mpg,.ogg,.ogv,.mov,.wmv,.mp4,.webm,.mp3,.wav,.mid,.rar,.zip,.tar,.gz,.7z,.bz2,.cab,.iso,.doc,.docx,.xls,.xlsx,.ppt,.pptx,.pdf,.txt,.md,.xml'
        const suffix = file.name.substring(file.name.lastIndexOf('.'), file.name.length)
        if (!fileType.includes(suffix)) {
          this.$message.error(this.$t('上传文件格式错误'))
          return reject(file)
        }
        return resolve(file)
      })
    },
    // 页面回显图片
    normFile (e) {
      if (Array.isArray(e)) {
        return e
      }
      if (e.fileList.length > 0 && e.fileList.every(item => item.response)) {
        e.fileList = e.fileList.filter(item => item.response && item.response.code === 0)
      }
      return e && e.fileList
    },
    // 上传文件失败提示
    debounceToast (item) {
      this.$message.error(item.response.message)
    },
    // 图片附件赋值
    fileChange (info) {
      info.fileList = info.fileList.map(item => {
        if (item.response && item.response.code !== 0) {
          this.debounceToast(item)
        }
        const obj = {
          name: item.name,
          response: item.response,
          status: item.status,
          uid: item.uid,
          url: item.response && item.response.result ? (process.env.VUE_APP_API_BASE_URL + 'admin/api/download/?filePath=' + item.response.result.filePath) : ''
        }
        return obj
      })
    },
    handleSubmit () {
      this.form.validateFields((errors, values) => {
        if (!errors) {
          this.buttonLoading = true
          this.axios({
            url: this.config.url || '/admin/workitem/processing',
            data: this.config.data ? Object.assign(values, this.config.data) : {
              action: 'submit',
              caseId: this.config.caseId,
              handleWay: '备注',
              handleRemarks: values.remark,
              operation: 'log',
              logAttachment: values.logAttachment && values.logAttachment.length ? values.logAttachment.map(item => item.response.result) : []
            }
          }).then(res => {
            this.visible = false
            this.buttonLoading = false
            if (res.code > 0) {
              this.$message.error(res.message)
            } else {
              this.$message.success(res.message)
              this.$emit('ok')
            }
          })
        }
      })
    }
  }
}
</script>
