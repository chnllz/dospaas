<template>
  <div class="page">
    <a-form :form="form" :labelCol="{ span: 6 }" :wrapperCol="{ span: 18 }" :colon="false" class="search">
      <a-card size="small" :title="$t('搜索')">
        <a-space slot="extra">
          <a-button htmlType="submit" @click="$refs.table.refresh(true)">{{ $t('搜索') }}</a-button>
          <a-button
            @click="
              () => {
                queryParam = {}
                $refs.treeControl.reset()
                $refs.table.refresh(true)
              }
            "
          >
            {{ $t('重置') }}
          </a-button>
          <a-button :icon="advanced ? 'up' : 'down'" style="font-size: 11px" @click="advanced = !advanced"></a-button>
        </a-space>
        <a-row :class="advanced ? 'advanced' : 'normal'" class="form">
          <a-col :span="6">
            <a-form-item :label="$t('账号')">
              <a-input v-model="queryParam.username" :placeholder="$t('请输入账号')" />
            </a-form-item>
          </a-col>
          <a-col :span="6">
            <a-form-item :label="$t('真实姓名')">
              <a-input v-model="queryParam.realName" :placeholder="$t('请输入真实姓名')" />
            </a-form-item>
          </a-col>
          <a-col :span="6">
            <a-form-item :label="$t('所属角色')">
              <a-select
                v-model="queryParam.roleId"
                :allowClear="true"
                :placeholder="$t('请选择')"
                showSearch
                option-filter-prop="children"
              >
                <a-select-option v-for="(value, key) in role" :key="key" :value="key">
                  {{ value }}
                </a-select-option>
              </a-select>
            </a-form-item>
          </a-col>
          <a-col :span="6">
            <a-form-item :label="$t('所属部门')">
              <data-picker
                ref="treeControl"
                :placeholder="$t('请选择')"
                :scope="scope"
                :allowClear="true"
                name="departmentId"
                displayType="tree"
                url="/admin/department/init"
                searchUrl="/admin/search/departmentSearch"
                parentId="parentDepartmentId"
                :optionsConversion="optionsConversion"
                @select="(e) => (queryParam.departmentId = e)"
              />
            </a-form-item>
          </a-col>
          <a-col :span="6">
            <a-form-item :label="$t('状态')">
              <a-select v-model="queryParam.status" :allowClear="true" :placeholder="$t('请选择')">
                <a-select-option value="1">{{ $t('启用') }}</a-select-option>
                <a-select-option value="0">{{ $t('禁用') }}</a-select-option>
              </a-select>
            </a-form-item>
          </a-col>
          <a-col :span="6">
            <a-form-item :label="$t('性别')">
              <a-select v-model="queryParam.sex" :allowClear="true" :placeholder="$t('请选择')">
                <a-select-option value="男">{{ $t('男') }}</a-select-option>
                <a-select-option value="女">{{ $t('女') }}</a-select-option>
              </a-select>
            </a-form-item>
          </a-col>
          <a-col :span="6">
            <a-form-item :label="$t('手机号码')">
              <a-input v-model="queryParam.phone" :placeholder="$t('请输入手机号码')" />
            </a-form-item>
          </a-col>
          <a-col :span="6">
            <a-form-item :label="$t('分机号码')">
              <a-input v-model="queryParam.extension" :placeholder="$t('请输入分机号码')" />
            </a-form-item>
          </a-col>
        </a-row>
      </a-card>
    </a-form>
    <a-space>
      <a-button v-action:add icon="plus" type="primary" @click="handleAdd">{{ $t('添加') }}</a-button>
      <a-button v-action:import icon="upload" @click="handleImport">{{ $t('导入') }}</a-button>
      <a-button v-action:export icon="download" @click="handleExport">{{ $t('导出') }}</a-button>
      <a-button
        v-action:delete
        :disabled="selectedRowKeys.length == 0"
        icon="delete"
        type="danger"
        @click="handleDelete()"
      >
        {{ $t('批量删除') }}
      </a-button>
    </a-space>
    <s-table
      ref="table"
      :scroll="{ y: true }"
      :columns="columns"
      :data="loadDataTable"
      :rowSelection="rowSelection"
      :sorter="{ field: 'id', order: 'descend' }"
      class="table-fill"
      size="small"
      rowKey="id"
    >
      <div slot="action" slot-scope="text, record">
        <a v-action:edit @click="handleEdit(record)">{{ $t('编辑') }}</a>
        <a-divider v-action:edit type="vertical" />
        <a-dropdown>
          <a>
            {{ $t('更多') }}
            <a-icon type="down" />
          </a>
          <a-menu slot="overlay">
            <a-menu-item v-if="$auth('delete') && record.username != 'admin'">
              <a @click="handleDelete(record)">{{ $t('删除') }}</a>
            </a-menu-item>
            <a-menu-item v-else disabled>{{ $t('删除') }}</a-menu-item>
            <a-menu-item v-if="$auth('login')">
              <a @click="handleLogin(record)">{{ $t('一键登录') }}</a>
            </a-menu-item>
            <a-menu-item v-else disabled>{{ $t('一键登录') }}</a-menu-item>
          </a-menu>
        </a-dropdown>
      </div>
    </s-table>
    <user-form ref="userForm" :key="userFormKey" @ok="handleOk" />
    <general-export ref="generalExport">
      <a-alert :message="message" type="warning" show-icon />
      <a-form-item :label="$t('模板下载')">
        <a-button icon="download" @click="handleDownloadTemplate">{{ $t('模板下载') }}</a-button>
      </a-form-item>
    </general-export>
  </div>
</template>
<script>
import { mapGetters } from 'vuex'
export default {
  i18n: window.lang('admin'),
  components: {
    UserForm: () => import('./UserForm'),
    GeneralExport: () => import('@/views/admin/Table/GeneralExport')
  },
  data () {
    return {
      message: null,
      advanced: false,
      userFormKey: 'userForm',
      // 搜索参数
      queryParam: {},
      // 表头
      columns: [{
        title: this.$t('操作'),
        dataIndex: 'action',
        align: 'center',
        width: 120,
        scopedSlots: { customRender: 'action' }
      }, {
        title: 'ID',
        dataIndex: 'id',
        sorter: true
      }, {
        title: this.$t('账号'),
        dataIndex: 'username',
        sorter: true
      }, {
        title: this.$t('真实姓名'),
        dataIndex: 'realName',
        sorter: true
      }, {
        title: this.$t('状态'),
        dataIndex: 'status',
        customRender: (text) => {
          if (text === '1') {
            return (<a-badge status="success" text={this.$t('启用')} />)
          } else {
            return (<a-badge status="error" text={this.$t('禁用')} />)
          }
        },
        sorter: true
      }, {
        title: this.$t('所属部门'),
        dataIndex: 'departmentId',
        sorter: true,
        customRender: (text, record) => {
          return record.departmentName
        }
      }, {
        title: this.$t('部门负责人'),
        dataIndex: 'isLeader',
        customRender: (text) => {
          if (text === 1) {
            return (<a-badge status="success" text={this.$t('是')} />)
          } else {
            return (<a-badge status="error" text={this.$t('否')} />)
          }
        },
        sorter: true
      }, {
        title: this.$t('所属角色'),
        dataIndex: 'roleId',
        sorter: true,
        customRender: (text, record) => {
          return record.roleName
        }
      }, {
        title: this.$t('性别'),
        dataIndex: 'gender',
        sorter: true
      }, {
        title: this.$t('分机号码'),
        dataIndex: 'extension',
        sorter: true
      }, {
        title: this.$t('最后登录时间'),
        dataIndex: 'lastLoginTime',
        sorter: true
      }, {
        title: this.$t('最后修改人'),
        dataIndex: 'updateUser',
        sorter: true
      }, {
        title: this.$t('最后修改时间'),
        dataIndex: 'updateTime',
        sorter: true
      }],
      selectedRowKeys: [],
      rowSelection: {
        onChange: (selectedRowKeys, selectedRows) => {
          this.selectedRowKeys = selectedRowKeys
        }
      },
      form: this.$form.createForm(this),
      scope: this,
      role: [],
      where: ''
    }
  },
  computed: {
    ...mapGetters(['setting'])
  },
  created () {
    const passwordRule = this.setting.passwordRule || ['number']
    const passwordLength = this.setting.passwordLength || [6, 12]
    const capitalLetterEnable = this.setting.capitalLetterEnable
    this.message = this.$t('注意') + '：' + this.$t('密码长度为{0}-{1}位字符，且必须包含数字', { 0: passwordLength[0], 1: passwordLength[1] })
    passwordRule.forEach(item => {
      switch (item) {
        case 'letter':
          if (capitalLetterEnable) {
            this.message = this.message + '、' + this.$t('大小写字母')
          } else {
            this.message = this.message + '、' + this.$t('字母')
          }
          break
        case 'special':
          this.message = this.message + '、' + this.$t('特殊字符')
          break
      }
    })
  },
  methods: {
    loadDataTable (parameter) {
      return this.axios({
        url: '/admin/user/init',
        data: Object.assign(parameter, this.queryParam, { init: 'true' })
      }).then(res => {
        this.role = res.result.option.role
        this.where = res.result.where
        return res.result
      })
    },
    handleAdd () {
      this.userFormKey = this.userFormKey === 'userForm' ? 'userForm_1' : 'userForm'
      this.$nextTick(() => {
        this.$refs.userForm.show({
          action: 'add',
          title: this.$t('添加'),
          url: '/admin/user/add'
        })
      })
    },
    handleEdit (record) {
      this.userFormKey = this.userFormKey === 'userForm' ? 'userForm_1' : 'userForm'
      this.$nextTick(() => {
        this.$refs.userForm.show({
          action: 'edit',
          title: `${this.$t('编辑')}：` + record.username,
          url: '/admin/user/edit',
          record: record
        })
      })
    },
    handleOk () {
      this.$refs.table.refresh()
    },
    handleDelete (record) {
      const me = this
      let id
      if (record && record.id) {
        id = [record.id]
      } else {
        id = this.selectedRowKeys
      }
      this.$confirm({
        title: this.$t('您确认要删除选中的记录吗？'),
        onOk () {
          me.$setLoading(true)
          me.axios({
            url: '/admin/user/delete',
            data: { id: id }
          }).then(res => {
            me.$setLoading(false)
            if (res.code) {
              me.$message.error(res.message)
            } else {
              me.$message.success(res.message)
              me.$refs.table.refresh()
            }
          })
        }
      })
    },
    handleLogin (record) {
      const me = this
      this.$confirm({
        title: this.$t('您确认要切换当前登录用户身份为{0}吗?', { 0: record.username }),
        onOk () {
          me.axios({
            url: '/admin/user/login',
            data: { id: record.id }
          }).then(res => {
            window.location = process.env.VUE_APP_BASE_URL
          })
        }
      })
    },
    // 组织结构options转换
    optionsConversion (list, displayType, searchType) {
      if (searchType) {
        return list.map(item => {
          const obj = item
          obj.key = item.departmentId
          obj.label = item.fullDepartmentName
          return obj
        })
      } else {
        return list.map(item => {
          const obj = item
          obj.key = item.departmentId
          obj.label = item.departmentName
          return obj
        })
      }
    },
    handleExport () {
      this.$refs.generalExport.show({
        title: this.$t('导出'),
        className: 'ExportUserTask',
        parameter: {
          condition: this.queryParam
        }
      })
    },
    handleImport () {
      this.$refs.generalExport.show({
        slotScoped: true, // 是否启用插槽
        title: this.$t('导入'),
        type: 'import',
        className: 'ImportUserTask'
      })
    },
    // 模板下载
    handleDownloadTemplate () {
      const filePath = encodeURIComponent('static/template/用户导入模板.xlsx')
      window.open(`${process.env.VUE_APP_API_BASE_URL}admin/api/download/?filePath=${filePath}`)
    }
  }
}
</script>
