<template>
  <div>
    <a-space>
      <a-button @click="addDataEvent">新增触发事件组</a-button>
      <a-button @click="handleSort">排序</a-button>
    </a-space>
    <a-form v-if="eventData && eventData.length" :form="form" style="margin-top: 10px">
      <a-collapse v-model="activeKey">
        <a-collapse-panel v-for="(item, key) in eventData" :key="String(item.id)">
          <a-row slot="header" type="flex" align="middle" :gutter="8">
            <a-col :span="4" @click.stop="">
              <a-select
                v-model="item.conditionType"
                size="small"
                defaultValue="if"
                :disabled="key === 0"
                @change="
                  (e) => {
                    if (e === 'else') {
                      item.simpleCondition[0].fieldUser = 'notSet'
                    }
                  }
                "
              >
                <a-select-option value="if">if</a-select-option>
                <a-select-option value="elseif">else-if</a-select-option>
                <a-select-option value="else">else</a-select-option>
              </a-select>
            </a-col>
            <a-col :span="8">
              <a-form-item>
                <a-input
                  v-decorator="[
                    'eventData' + [key] + '[pattern]',
                    {
                      initialValue: `${'触发事件-' + (key + 1)}`,
                      rules: [{ required: true, message: '请输入触发事件名称' }]
                    }
                  ]"
                  size="small"
                  :maxLength="20"
                  @click.stop=""
                />
              </a-form-item>
            </a-col>
            <a-col :span="12" style="text-align: right">
              <a-icon type="delete" @click="handleDelete(key)" />
            </a-col>
          </a-row>
          <div>
            <a-divider orientation="left" style="font-size: 14px">触发条件：当</a-divider>
            <div>
              <div>
                <a-spin :spinning="false">
                  <div style="margin-bottom: 35px">
                    <a-form-item>
                      <a-button icon="plus" size="small" @click="addData(item)">添加</a-button>
                    </a-form-item>
                    <a-form-item>
                      <a-row v-if="item.simpleCondition && item.simpleCondition.length" type="flex" align="middle">
                        <a-col :span="22">
                          <a-row
                            v-for="(simpleItem, simpleIndex) in item.simpleCondition"
                            :key="simpleIndex"
                            type="flex"
                            align="middle"
                            :gutter="10"
                          >
                            <a-col :span="4">
                              <a-select
                                v-model="simpleItem.fieldUser"
                                size="small"
                                @change="
                                  (value) => {
                                    simpleItem.include = undefined
                                    if (value === 'way') {
                                      $set(simpleItem, 'include', 'eq')
                                      simpleItem.customCode = {
                                        html: '',
                                        value: ''
                                      }
                                    } else if (value === 'field') {
                                      simpleItem.condition = [
                                        {
                                          include: '',
                                          value: ''
                                        }
                                      ]
                                    } else if (value === 'custom') {
                                      simpleItem.customCode = {
                                        html: '',
                                        value: ''
                                      }
                                    } else if (value === 'ruleTable') {
                                      simpleItem.condition = [
                                        {
                                          customCode: {
                                            html: '',
                                            value: ''
                                          }
                                        }
                                      ]
                                      simpleItem.customCode = {
                                        html: '',
                                        value: ''
                                      }
                                      getRuleTable(simpleItem)
                                    } else if (value.includes('current')) {
                                      $set(simpleItem, 'include', 'bl')
                                      simpleItem.value = undefined
                                      simpleItem.optionArr = undefined
                                      simpleItem.options = undefined
                                      simpleItem.condition = [
                                        {
                                          include: '',
                                          value: []
                                        }
                                      ]
                                    } else {
                                      simpleItem.condition = [
                                        {
                                          include: '',
                                          value: []
                                        }
                                      ]
                                    }
                                  }
                                "
                              >
                                <a-select-option value="way">办理方式</a-select-option>
                                <a-select-option value="field">字段</a-select-option>
                                <a-select-option value="currentUser">办理用户</a-select-option>
                                <a-select-option value="currentClass">办理用户所属部门</a-select-option>
                                <a-select-option value="currentRole">办理用户所属角色</a-select-option>
                                <a-select-option value="ruleTable">规则表</a-select-option>
                                <a-select-option value="custom">自定义</a-select-option>
                                <a-select-option value="notSet">无条件满足</a-select-option>
                              </a-select>
                            </a-col>
                            <a-col v-if="['ruleTable'].includes(simpleItem.fieldUser)" :span="18">
                              <div>
                                <a-cascader
                                  v-model="simpleItem.targetTable"
                                  size="small"
                                  style="width: 300px"
                                  :show-search="true"
                                  placeholder="请选择规则表"
                                  :options="tableFieldsList"
                                  @change="
                                    (e) => {
                                      tableFieldsChange(e, simpleItem, 'click')
                                    }
                                  "
                                />
                              </div>
                              <a-divider orientation="left">
                                <span style="font-size: 13px">查表条件</span>
                              </a-divider>
                              <div v-for="(includeItem, includeIndex) in simpleItem.condition" :key="includeIndex">
                                <a-row :gutter="8" type="flex" align="middle">
                                  <a-col :span="6">
                                    <a-select
                                      v-model="includeItem.ruleAlias"
                                      showSearch
                                      option-filter-prop="children"
                                      :allowClear="true"
                                      size="small"
                                      @change="
                                        (value) => {
                                          simpleItem.ruleFieldList.forEach((item1) => {
                                            if (item1.alias === value) {
                                              getConditionArr(item1, includeItem)
                                            }
                                          })
                                          includeItem.include = undefined
                                          $forceUpdate()
                                        }
                                      "
                                    >
                                      <a-select-option
                                        v-for="fieldItem in simpleItem.ruleFieldList"
                                        :key="fieldItem.alias"
                                      >
                                        {{ fieldItem.name }}
                                      </a-select-option>
                                    </a-select>
                                  </a-col>
                                  <a-col :span="4">
                                    <a-select
                                      v-model="includeItem.include"
                                      placeholder="请选择"
                                      size="small"
                                      @change="
                                        (value) => {
                                          $set(includeItem, 'include', value)
                                          choiceInclude(value, includeItem)
                                          if (value === 'em' || value === 'nem') {
                                            includeItem.setType = 'custom'
                                          }
                                          $forceUpdate()
                                        }
                                      "
                                    >
                                      <a-select-option
                                        v-for="(crItem, crIndex) in includeItem.conditionArr"
                                        :key="crIndex"
                                        option-filter-prop="children"
                                        :value="crItem.enName"
                                      >
                                        {{ crItem.cnName }}
                                      </a-select-option>
                                    </a-select>
                                  </a-col>
                                  <template v-if="!includeItem.type">
                                    <a-col :span="4">
                                      <a-select v-model="includeItem.setType" size="small" @change="$forceUpdate()">
                                        <a-select-option value="field">本表字段</a-select-option>
                                        <a-select-option value="custom">自定义</a-select-option>
                                      </a-select>
                                    </a-col>
                                    <a-col :span="8">
                                      <a-row v-if="includeItem.setType === 'custom'" type="flex" align="middle">
                                        <a-col :span="24">
                                          <querier-codemirror-input
                                            ref="querierCodemirrorInput"
                                            :params.sync="includeItem.customCode"
                                          />
                                        </a-col>
                                        <div
                                          style="position: absolute; right: 15px; cursor: pointer; z-index: 10"
                                          size="small"
                                          @click="
                                            () => {
                                              showKey = includeIndex
                                              $refs['customCodemirrorsRule' + showKey][0].show(
                                                Object.assign(
                                                  {
                                                    title: '公式编辑器',
                                                    item: includeItem,
                                                    index: includeIndex
                                                  },
                                                  { tableId: myEvent.tableId }
                                                )
                                              )
                                            }
                                          "
                                        >
                                          fx
                                        </div>
                                        <custom-codemirror
                                          :ref="'customCodemirrorsRule' + includeIndex"
                                          @ok="
                                            (val) => {
                                              $set(includeItem, 'customCode', val)
                                              $forceUpdate()
                                            }
                                          "
                                        />
                                      </a-row>
                                      <a-select
                                        v-else
                                        v-model="includeItem.fieldAlias"
                                        size="small"
                                        showSearch
                                        option-filter-prop="children"
                                        :allowClear="true"
                                      >
                                        <a-select-option v-for="fieldItem in thisTableField" :key="fieldItem.alias">
                                          {{ fieldItem.name }}
                                        </a-select-option>
                                      </a-select>
                                    </a-col>
                                  </template>
                                  <template v-else>
                                    <a-col :span="12">
                                      <a-input size="small" type="text" disabled />
                                    </a-col>
                                  </template>
                                  <a-col :span="2" style="display: flex; align-items: center; justify-content: center">
                                    <a-icon
                                      :style="{ fontSize: '24px', color: '#52c41a' }"
                                      type="plus-square"
                                      theme="filled"
                                      @click="
                                        simpleItem.condition.splice(includeIndex, 0, {
                                          customCode: {
                                            html: '',
                                            value: ''
                                          }
                                        })
                                      "
                                    />
                                    <a-icon
                                      :style="{
                                        fontSize: '24px',
                                        color: simpleItem.condition.length === 1 ? '#bfbfbf' : '#ff4d4f',
                                        'padding-left': '5px'
                                      }"
                                      type="minus-square"
                                      theme="filled"
                                      @click="
                                        simpleItem.condition.length === 1
                                          ? ''
                                          : simpleItem.condition.splice(includeIndex, 1)
                                      "
                                    />
                                  </a-col>
                                </a-row>
                              </div>
                            </a-col>
                            <a-col v-else-if="['custom', 'notSet'].includes(simpleItem.fieldUser)" :span="18">
                              <a-row v-if="['custom'].includes(simpleItem.fieldUser)" type="flex" align="middle">
                                <a-col :span="24">
                                  <querier-codemirror-input
                                    ref="querierCodemirrorInput"
                                    :params.sync="simpleItem.customCode"
                                  />
                                </a-col>
                                <div
                                  style="position: absolute; right: 15px; cursor: pointer; z-index: 10"
                                  size="small"
                                  @click="handleCodemirror(simpleItem, simpleIndex)"
                                >
                                  fx
                                </div>
                                <custom-codemirror
                                  :ref="'customCodemirrors' + simpleIndex"
                                  @ok="
                                    (val) => {
                                      $set(item.simpleCondition[showKey], 'customCode', val)
                                      $forceUpdate()
                                    }
                                  "
                                />
                              </a-row>
                            </a-col>
                            <template v-else>
                              <a-col v-if="simpleItem.fieldUser === 'notSet'" flex="auto"></a-col>
                              <a-col v-if="simpleItem.fieldUser === 'field'" :span="4">
                                <a-select
                                  v-if="simpleItem.fieldUser === 'field'"
                                  v-model="simpleItem.field"
                                  size="small"
                                  show-search
                                  :allowClear="true"
                                  option-filter-prop="children"
                                  @change="
                                    (value) => {
                                      simpleItem.condition = [
                                        {
                                          include: '',
                                          value: ''
                                        }
                                      ]
                                      fieldArr.forEach((item1) => {
                                        if (item1.alias === value) {
                                          item1.settings = JSON.parse(item1.setting)
                                          // 判断是否有数据字典
                                          simpleItem.src = item1.settings.form.src ? item1.settings.form.src : ''
                                          simpleItem.formType = item1.formType
                                          simpleItem.fieldId = item1.fieldId
                                          simpleItem.fieldType = item1.fieldType
                                          if (simpleItem.src && item1.formType === 'treeselect') {
                                            getTreeOption(simpleItem, item1)
                                          } else if (simpleItem.src) {
                                            getOption(simpleItem)
                                          } else if (item1.formType === 'treeselect') {
                                            simpleItem.dataSource = item1.settings.attribute.dataSource
                                            getTreeOption(simpleItem, item1)
                                          } else {
                                            simpleItem.option = []
                                          }
                                          simpleItem.form = item1.settings.form
                                          // 根据字段，给出相应条件
                                          if (['text', 'textarea', 'serialnumber'].indexOf(item1.formType) !== -1) {
                                            simpleItem.conditionArr = [
                                              { enName: 'eq', cnName: '等于' },
                                              { enName: 'ne', cnName: '不等于' },
                                              { enName: 'cn', cnName: '包含' },
                                              { enName: 'nc', cnName: '不包含' },
                                              { enName: 'bw', cnName: '开始于' },
                                              { enName: 'ew', cnName: '结束于' },
                                              { enName: 'em', cnName: '为空' },
                                              { enName: 'nem', cnName: '不为空' }
                                            ]
                                          } else if (['radio', 'switch', 'checkbox', 'combobox'].indexOf(item1.formType) !== -1) {
                                            simpleItem.conditionArr = [
                                              { enName: 'eq', cnName: '等于' },
                                              { enName: 'ne', cnName: '不等于' },
                                              { enName: 'em', cnName: '为空' },
                                              { enName: 'nem', cnName: '不为空' }
                                            ]
                                          } else if (['number', 'datetime'].indexOf(item1.formType) !== -1) {
                                            simpleItem.conditionArr = [
                                              { enName: 'eq', cnName: '等于' },
                                              { enName: 'ne', cnName: '不等于' },
                                              { enName: 'gt', cnName: '大于' },
                                              { enName: 'ge', cnName: '大于等于' },
                                              { enName: 'lt', cnName: '小于' },
                                              { enName: 'le', cnName: '小于等于' },
                                              { enName: 'em', cnName: '为空' },
                                              { enName: 'nem', cnName: '不为空' }
                                            ]
                                          } else if (['associated'].indexOf(item1.formType) !== -1) {
                                            simpleItem.conditionArr = [
                                              { enName: 'eq', cnName: '等于' },
                                              { enName: 'ne', cnName: '不等于' },
                                              { enName: 'cn', cnName: '包含' },
                                              { enName: 'nc', cnName: '不包含' },
                                              { enName: 'bw', cnName: '开始于' },
                                              { enName: 'ew', cnName: '结束于' },
                                              { enName: 'em', cnName: '为空' },
                                              { enName: 'nem', cnName: '不为空' }
                                            ]
                                          } else if (
                                            ['address', 'treeselect', 'tag', 'organization'].indexOf(item1.formType) !==
                                            -1
                                          ) {
                                            simpleItem.conditionArr = [
                                              { enName: 'cn', cnName: '包含' },
                                              { enName: 'nc', cnName: '不包含' },
                                              { enName: 'em', cnName: '为空' },
                                              { enName: 'nem', cnName: '不为空' }
                                            ]
                                          } else if (['cascader'].indexOf(item1.formType) !== -1) {
                                            simpleItem.conditionArr = [
                                              { enName: 'eq', cnName: '等于' },
                                              { enName: 'ne', cnName: '不等于' },
                                              { enName: 'cn', cnName: '包含' },
                                              { enName: 'nc', cnName: '不包含' },
                                              { enName: 'em', cnName: '为空' },
                                              { enName: 'nem', cnName: '不为空' }
                                            ]
                                          }
                                        }
                                      })
                                    }
                                  "
                                >
                                  <a-select-option
                                    v-for="(fieldItem, fieldIndex) in fieldArr"
                                    :key="fieldIndex"
                                    :value="fieldItem.alias"
                                  >
                                    {{ fieldItem.name }}
                                  </a-select-option>
                                </a-select>
                              </a-col>
                              <a-col
                                v-if="!['field', 'way'].includes(simpleItem.fieldUser)"
                                :span="4"
                                style="text-align: center"
                              >
                                <a-select
                                  v-model="simpleItem.include"
                                  size="small"
                                  @change="
                                    (e) => {
                                      $forceUpdate()
                                    }
                                  "
                                >
                                  <a-select-option value="bl">属于</a-select-option>
                                  <a-select-option value="nbl">不属于</a-select-option>
                                </a-select>
                              </a-col>
                              <a-col v-if="['way'].includes(simpleItem.fieldUser)" :span="4" style="text-align: center">
                                <!-- 等于 -->
                                <a-select
                                  v-model="simpleItem.include"
                                  size="small"
                                  @change="
                                    (e) => {
                                      $forceUpdate()
                                    }
                                  "
                                >
                                  <a-select-option value="eq">等于</a-select-option>
                                  <a-select-option value="ne">不等于</a-select-option>
                                </a-select>
                              </a-col>
                              <template
                                v-if="
                                  !['way', 'currentUser', 'currentClass', 'currentRole'].includes(simpleItem.fieldUser)
                                "
                              >
                                <a-col :span="11" style="border: 1px solid #e8e8e8; margin-bottom: 4px">
                                  <a-row
                                    v-for="(includeItem, includeIndex) in simpleItem.condition"
                                    :key="includeIndex"
                                    type="flex"
                                    align="middle"
                                    :gutter="10"
                                  >
                                    <a-col v-if="simpleItem.fieldUser === 'field'" :span="6">
                                      <a-select
                                        v-model="includeItem.include"
                                        size="small"
                                        :dropdownMatchSelectWidth="false"
                                        @change="
                                          (value) => {
                                            choiceInclude(value, includeItem)
                                          }
                                        "
                                      >
                                        <a-select-option
                                          v-for="(crItem, crIndex) in simpleItem.conditionArr"
                                          :key="crIndex"
                                          option-filter-prop="children"
                                          :value="crItem.enName"
                                        >
                                          {{ crItem.cnName }}
                                        </a-select-option>
                                      </a-select>
                                    </a-col>
                                    <a-col v-if="simpleItem.fieldUser === 'field'" :span="14">
                                      <template v-if="!includeItem.type">
                                        <!-- 日期 -->
                                        <a-date-picker
                                          v-if="
                                            simpleItem.formType === 'datetime' && simpleItem.fieldType === 'DATETIME'
                                          "
                                          size="small"
                                          style="width: 100%"
                                          :defaultValue="
                                            includeItem.value ? moment(includeItem.value, 'YYYY-MM-DD HH:mm:ss') : null
                                          "
                                          format="YYYY-MM-DD HH:mm:ss"
                                          @change="
                                            (dates, dateStrings) => {
                                              includeItem.value = dateStrings
                                            }
                                          "
                                        ></a-date-picker>
                                        <a-date-picker
                                          v-else-if="
                                            simpleItem.formType === 'datetime' && simpleItem.fieldType === 'DATE'
                                          "
                                          size="small"
                                          style="width: 100%"
                                          :defaultValue="
                                            includeItem.value ? moment(includeItem.value, 'YYYY-MM-DD') : null
                                          "
                                          format="YYYY-MM-DD"
                                          @change="
                                            (dates, dateStrings) => {
                                              includeItem.value = dateStrings
                                            }
                                          "
                                        ></a-date-picker>
                                        <a-time-picker
                                          v-else-if="
                                            simpleItem.formType === 'datetime' && simpleItem.fieldType === 'TIME'
                                          "
                                          size="small"
                                          style="width: 100%"
                                          :defaultValue="
                                            includeItem.value ? moment(includeItem.value, 'HH:mm:ss') : null
                                          "
                                          format="HH:mm:ss"
                                          @change="
                                            (dates, dateStrings) => {
                                              includeItem.value = dateStrings
                                            }
                                          "
                                        ></a-time-picker>
                                        <!-- 树选择 -->
                                        <div v-else-if="simpleItem.formType === 'treeselect'">
                                          <data-picker
                                            ref="dataPicker"
                                            :name="simpleItem.alias + simpleIndex"
                                            size="small"
                                            :parentId="
                                              simpleItem.dataSource === 'addressBook'
                                                ? 'parentNumber'
                                                : 'parentDictDataNumber'
                                            "
                                            :parameter="
                                              simpleItem.dataSource === 'addressBook'
                                                ? {}
                                                : { dictCategoryNumber: simpleItem.src, filterDisabled: true }
                                            "
                                            displayType="tree"
                                            :url="
                                              simpleItem.dataSource === 'addressBook'
                                                ? '/admin/address/getAddressChildren'
                                                : '/admin/dict/initData'
                                            "
                                            :searchUrl="
                                              simpleItem.dataSource === 'addressBook'
                                                ? '/admin/search/addressSearch'
                                                : '/admin/search/dictSearch'
                                            "
                                            :scope="scope"
                                            :value="includeItem.option"
                                            :optionsConversion="
                                              (list, displayType, searchType) =>
                                                optionsConversionTreeselect(simpleItem, list, displayType, searchType)
                                            "
                                            @select="
                                              (data, options) => {
                                                includeItem.value = data
                                                includeItem.optionCustom = options
                                              }
                                            "
                                          />
                                        </div>
                                        <!-- 地址 -->
                                        <div v-else-if="simpleItem.formType === 'address'">
                                          <address-select
                                            size="small"
                                            :defaultValue="includeItem.value"
                                            fieldType="field"
                                            :series="simpleItem.form.show_series"
                                            @send="
                                              (display, val, alias, allValue) => {
                                                includeItem.value = val
                                                includeItem.allValue = allValue
                                              }
                                            "
                                          />
                                        </div>
                                        <!-- 标签 -->
                                        <a-cascader
                                          v-else-if="simpleItem.formType === 'tag'"
                                          v-model="includeItem.value"
                                          size="small"
                                          style="width: 100%"
                                          :options="tagOption"
                                          :placeholder="$t('请选择')"
                                        />
                                        <!-- 组织结构  用户、角色、部门 -->
                                        <template v-else-if="simpleItem.formType === 'organization'">
                                          <template v-if="simpleItem.form.optionType === 'user'">
                                            <data-picker
                                              :placeholder="$t('请选择用户')"
                                              :name="'user' + simpleItem.field + simpleIndex + includeIndex"
                                              displayType="list"
                                              size="small"
                                              url="/admin/search/userSearch"
                                              searchUrl="/admin/search/userSearch"
                                              :value="includeItem.optionArr"
                                              :scope="scope"
                                              :parameter="{ sortField: 'username' }"
                                              :optionsConversion="
                                                (list, displayType, searchType) => {
                                                  return list.map((item) => {
                                                    const obj = item
                                                    obj.key = item.username
                                                    obj.label = `${item.username}(${item.realName})`
                                                    return obj
                                                  })
                                                }
                                              "
                                              @select="
                                                (data, options) => {
                                                  includeItem.value = data
                                                  $set(includeItem, 'options', options)
                                                }
                                              "
                                            />
                                          </template>
                                          <template v-else-if="simpleItem.form.optionType === 'department'">
                                            <data-picker
                                              :placeholder="$t('请选择部门')"
                                              :name="'department' + simpleItem.field + simpleIndex + includeIndex"
                                              parentId="parentDepartmentId"
                                              displayType="tree"
                                              size="small"
                                              url="/admin/department/init"
                                              searchUrl="/admin/search/departmentSearch"
                                              :value="includeItem.optionArr"
                                              :scope="scope"
                                              :optionsConversion="
                                                (list, displayType, searchType) => {
                                                  if (searchType) {
                                                    return list.map((item) => {
                                                      const obj = item
                                                      obj.key = item.departmentId
                                                      obj.label = item.fullDepartmentName
                                                      return obj
                                                    })
                                                  } else {
                                                    return list.map((item) => {
                                                      const obj = item
                                                      obj.key = item.departmentId
                                                      obj.label = item.departmentName
                                                      return obj
                                                    })
                                                  }
                                                }
                                              "
                                              @select="
                                                (data, options) => {
                                                  includeItem.value = data
                                                  $set(includeItem, 'options', options)
                                                }
                                              "
                                            />
                                          </template>
                                          <template v-else-if="simpleItem.form.optionType === 'role'">
                                            <data-picker
                                              :placeholder="$t('请选择角色')"
                                              :name="'role' + simpleItem.field + simpleIndex + includeIndex"
                                              displayType="list"
                                              size="small"
                                              url="/admin/search/roleSearch"
                                              searchUrl="/admin/search/roleSearch"
                                              :value="includeItem.optionArr"
                                              :scope="scope"
                                              :optionsConversion="
                                                (list, displayType, searchType) => {
                                                  return list.map((item) => {
                                                    const obj = item
                                                    obj.key = item.roleId
                                                    obj.label = item.roleName
                                                    return obj
                                                  })
                                                }
                                              "
                                              @select="
                                                (data, options) => {
                                                  includeItem.value = data
                                                  $set(includeItem, 'options', options)
                                                }
                                              "
                                            />
                                          </template>
                                        </template>
                                        <a-input v-else-if="!simpleItem.src" v-model="includeItem.value" size="small" />

                                        <a-select
                                          v-else-if="
                                            simpleItem.formType === 'combobox' &&
                                            simpleItem.option &&
                                            simpleItem.option.length
                                          "
                                          size="small"
                                          :placeholder="$t('请选择')"
                                          :defaultValue="includeItem.value ? includeItem.value : undefined"
                                          changeOnSelect
                                          @change="
                                            (value) => {
                                              includeItem.value = value
                                            }
                                          "
                                        >
                                          <a-select-option
                                            v-for="(fieldItem, fieldKey) in simpleItem.option"
                                            :key="fieldKey"
                                            :value="fieldItem.value"
                                          >
                                            {{ fieldItem.label }}
                                          </a-select-option>
                                        </a-select>
                                        <!-- 级联选择 -->
                                        <div v-else-if="simpleItem.formType === 'cascader'">
                                          <tabs-select
                                            :defaultValue="includeItem.value"
                                            :valueKey="simpleItem.form.src || ''"
                                            action="edit"
                                            size="small"
                                            :display="includeItem.display"
                                            :field="includeItem"
                                            :writeBack="simpleItem.form.writeBack"
                                            fieldType="search"
                                            @send="
                                              (val, alias, display, status, allValue) => {
                                                includeItem.value = val
                                                includeItem.display = display
                                                includeItem.allValue = allValue
                                              }
                                            "
                                          />
                                        </div>
                                        <a-select
                                          v-else
                                          placeholder="请选择"
                                          :defaultValue="includeItem.value ? includeItem.value : []"
                                          @change="
                                            (value) => {
                                              includeItem.value = value
                                            }
                                          "
                                        >
                                          <a-select-option
                                            v-for="(optItem, optIndex) in simpleItem.option"
                                            :key="optIndex"
                                            :value="optItem.value"
                                          >
                                            {{ optItem.label }}
                                          </a-select-option>
                                        </a-select>
                                      </template>
                                      <template v-else>
                                        <a-input type="text" disabled size="small" />
                                      </template>
                                    </a-col>
                                    <a-col :span="4" style="padding-top: 8px">
                                      <a-icon
                                        :style="{ fontSize: '24px', color: '#52c41a' }"
                                        type="plus-square"
                                        theme="filled"
                                        @click="
                                          simpleItem.fieldUser === 'field'
                                            ? simpleItem.condition.push({ include: '', value: '' })
                                            : simpleItem.condition.push({ include: '', value: [] })
                                        "
                                      />
                                      <a-icon
                                        :style="{
                                          fontSize: '24px',
                                          color: simpleItem.condition.length === 1 ? '#bfbfbf' : '#ff4d4f',
                                          'padding-left': '5px'
                                        }"
                                        type="minus-square"
                                        theme="filled"
                                        @click="deleteCondition(item, simpleIndex, includeIndex)"
                                      />
                                    </a-col>
                                  </a-row>
                                </a-col>
                                <a-col :span="3">
                                  <a-select
                                    v-model="simpleItem.logic"
                                    style="width: 80px; margin-left: 15px"
                                    size="small"
                                  >
                                    <a-select-option value="and">且(and)</a-select-option>
                                    <a-select-option value="or">或(or)</a-select-option>
                                  </a-select>
                                </a-col>
                              </template>
                              <a-col v-else-if="['way'].includes(simpleItem.fieldUser)" :span="14">
                                <a-select
                                  v-model="simpleItem.value"
                                  size="small"
                                  mode="multiple"
                                  @change="$forceUpdate()"
                                >
                                  <a-select-option
                                    v-for="(wayItem, wayIndex) in handleData"
                                    :key="wayIndex"
                                    :value="wayItem.alias"
                                  >
                                    {{ wayItem.way }}
                                  </a-select-option>
                                </a-select>
                              </a-col>
                              <a-col
                                v-else-if="simpleItem.fieldUser === 'currentUser'"
                                :span="14"
                                style="padding-right: 14px"
                              >
                                <data-picker
                                  :placeholder="$t('请选择用户')"
                                  :name="'user' + simpleIndex"
                                  displayType="list"
                                  size="small"
                                  url="/admin/search/userSearch"
                                  searchUrl="/admin/search/userSearch"
                                  :value="simpleItem.optionArr"
                                  :scope="scope"
                                  :multiple="true"
                                  :parameter="{ sortField: 'username' }"
                                  :optionsConversion="
                                    (list, displayType, searchType) => {
                                      return list.map((item) => {
                                        const obj = item
                                        obj.key = item.username
                                        obj.label = `${item.username}(${item.realName})`
                                        return obj
                                      })
                                    }
                                  "
                                  @select="
                                    (data, options) => {
                                      simpleItem.value = data
                                      $set(simpleItem, 'options', options)
                                    }
                                  "
                                />
                              </a-col>
                              <a-col
                                v-else-if="simpleItem.fieldUser === 'currentClass'"
                                :span="14"
                                style="padding-right: 14px"
                              >
                                <data-picker
                                  :placeholder="$t('请选择部门')"
                                  :name="'department' + simpleIndex"
                                  parentId="parentDepartmentId"
                                  displayType="tree"
                                  size="small"
                                  :multiple="true"
                                  url="/admin/department/init"
                                  searchUrl="/admin/search/departmentSearch"
                                  :value="simpleItem.optionArr"
                                  :scope="scope"
                                  :optionsConversion="
                                    (list, displayType, searchType) => {
                                      if (searchType) {
                                        return list.map((item) => {
                                          const obj = item
                                          obj.key = item.departmentId
                                          obj.label = item.fullDepartmentName
                                          return obj
                                        })
                                      } else {
                                        return list.map((item) => {
                                          const obj = item
                                          obj.key = item.departmentId
                                          obj.label = item.departmentName
                                          return obj
                                        })
                                      }
                                    }
                                  "
                                  @select="
                                    (data, options) => {
                                      simpleItem.value = data
                                      $set(simpleItem, 'options', options)
                                    }
                                  "
                                />
                              </a-col>
                              <a-col v-else-if="simpleItem.fieldUser === 'currentRole'" :span="14">
                                <data-picker
                                  :placeholder="$t('请选择角色')"
                                  :name="'role' + simpleIndex"
                                  displayType="list"
                                  size="small"
                                  :multiple="true"
                                  url="/admin/search/roleSearch"
                                  searchUrl="/admin/search/roleSearch"
                                  :value="simpleItem.optionArr"
                                  :scope="scope"
                                  :optionsConversion="
                                    (list, displayType, searchType) => {
                                      return list.map((item) => {
                                        const obj = item
                                        obj.key = item.roleId
                                        obj.label = item.roleName
                                        return obj
                                      })
                                    }
                                  "
                                  @select="
                                    (data, options) => {
                                      simpleItem.value = data
                                      $set(simpleItem, 'options', options)
                                    }
                                  "
                                />
                              </a-col>
                            </template>
                            <a-col :span="2" style="display: flex; align-items: center; justify-content: center">
                              <a-icon
                                :style="{ fontSize: '24px', color: '#52c41a' }"
                                type="plus-square"
                                theme="filled"
                                @click="
                                  item.simpleCondition.push({
                                    fieldUser: 'field',
                                    selectUser: '',
                                    src: '',
                                    condition: [
                                      {
                                        include: '',
                                        value: ''
                                      }
                                    ],
                                    logic: 'and'
                                  })
                                "
                              />
                              <a-icon
                                :style="{ fontSize: '24px', color: '#ff4d4f', 'padding-left': '5px' }"
                                type="minus-square"
                                theme="filled"
                                @click="deleteSimpleCondition(key, simpleIndex)"
                              />
                            </a-col>
                          </a-row>
                        </a-col>
                        <a-col :span="2">
                          <a-select
                            v-if="item.simpleCondition.length"
                            v-model="item.logic"
                            style="width: 80px; margin-left: 15px"
                            size="small"
                          >
                            <a-select-option value="and">且(and)</a-select-option>
                            <a-select-option value="or">或(or)</a-select-option>
                          </a-select>
                        </a-col>
                      </a-row>
                    </a-form-item>
                  </div>
                </a-spin>
              </div>
            </div>
            <a-divider orientation="left" style="font-size: 14px">触发事件：那么</a-divider>
            <a-dropdown>
              <a-menu slot="overlay">
                <a-menu-item key="1" @click="tablepush(key, 'current')">当前数据表</a-menu-item>
                <a-menu-item key="2" @click="tablepush(key, 'insert')">其他数据表-新增数据</a-menu-item>
                <a-menu-item key="3" @click="tablepush(key, 'update')">其他数据表-修改数据</a-menu-item>
                <a-menu-item key="4" @click="tablepush(key, 'delete')">其他数据表-删除数据</a-menu-item>
                <a-menu-item key="5" @click="tablepush(key, 'input')">其他数据表-修改或新增数据</a-menu-item>
                <a-menu-item key="6" @click="tablepush(key, 'custom')">自定义-公式编辑器</a-menu-item>
              </a-menu>
              <a-button style="margin: 0 0 10px 0px">
                <a-icon type="plus" />
                添加触发事件
                <a-icon type="down" />
              </a-button>
            </a-dropdown>
            <a-collapse v-if="item.table && item.table.length">
              <a-collapse-panel v-for="(value, index) in item.table" :key="'table' + key + index" :header="value.title">
                <!-- 当前数据表 -->
                <div v-if="value.tableType === 'current'">
                  <a-row
                    v-for="(val, option) in value.update"
                    :key="option"
                    type="flex"
                    align="middle"
                    :gutter="10"
                    style="margin-bottom: 10px"
                  >
                    <a-col :span="2" style="text-align: right">将字段</a-col>
                    <a-col :span="5">
                      <a-select v-model="val.field" showSearch optionFilterProp="children">
                        <a-select-option v-for="(vals, options) in fieldArr" :key="options" :value="vals.alias">
                          {{ vals.name }}
                        </a-select-option>
                      </a-select>
                    </a-col>
                    <a-col :span="1" style="text-align: center">设为</a-col>
                    <a-col :span="14">
                      <a-row type="flex" align="middle">
                        <a-col :span="24">
                          <querier-codemirror-input ref="querierCodemirrorInput" :params.sync="val.customCode" />
                        </a-col>
                        <div
                          style="position: absolute; right: 15px; cursor: pointer; z-index: 10"
                          size="small"
                          @click="
                            () => {
                              showKey = option
                              const obj = { customCode: val.customCode || { html: '', value: '' } }
                              $refs['customCodemirrorsField' + option + key + index][0].show(
                                Object.assign(
                                  {
                                    title: '公式编辑器',
                                    item: Object.assign(obj, val),
                                    index: option
                                  },
                                  myEvent
                                )
                              )
                            }
                          "
                        >
                          fx
                        </div>
                        <custom-codemirror
                          :ref="'customCodemirrorsField' + option + key + index"
                          @ok="
                            (text) => {
                              $set(value.update[showKey], 'customCode', text)
                              $forceUpdate()
                            }
                          "
                        />
                      </a-row>
                    </a-col>
                    <a-col :span="2">
                      <a-icon
                        :style="{ fontSize: '24px', color: '#52c41a' }"
                        type="plus-square"
                        theme="filled"
                        @click="value.update.splice(option + 1, 0, { field: undefined, setType: 'field' })"
                      />
                      <a-icon
                        :style="{
                          fontSize: '24px',
                          color: value.update.length === 1 ? '#bfbfbf' : '#ff4d4f',
                          'padding-left': '5px'
                        }"
                        type="minus-square"
                        theme="filled"
                        @click="value.update.length > 1 ? value.update.splice(option, 1) : ''"
                      />
                    </a-col>
                  </a-row>
                </div>
                <!-- 其他数据表-新增数据 -->
                <div v-if="value.tableType === 'insert'">
                  <a-row type="flex" align="middle" :gutter="10">
                    <a-col :span="3" style="text-align: right">目标数据表</a-col>
                    <a-col :span="21" style="text-align: right">
                      <!-- 数据表 -->
                      <a-cascader
                        v-model="value.targetTable"
                        size="small"
                        style="width: 100%; text-align: left"
                        :show-search="true"
                        placeholder="请选择目标数据表"
                        :options="tableFieldsTargetList"
                        @change="
                          (e) => {
                            tableFieldsChangeTarget(e, value, 'click')
                          }
                        "
                      />
                    </a-col>
                    <a-col :span="24" style="margin: 15px 0">在目标数据表中新增数据，字段设置如下：</a-col>
                  </a-row>
                  <a-row
                    v-for="(val, option) in value.insert"
                    :key="option"
                    type="flex"
                    align="middle"
                    :gutter="10"
                    style="margin-bottom: 10px"
                  >
                    <a-col :span="5">
                      <!-- 目标表字段 -->
                      <a-select
                        v-model="val.targetField"
                        placeholder="请选择目标表字段"
                        showSearch
                        optionFilterProp="children"
                        @change="
                          (e) => {
                            $forceUpdate()
                          }
                        "
                      >
                        <a-select-option
                          v-for="(vals, options) in value.targetFieldList"
                          :key="options"
                          :value="vals.alias"
                        >
                          {{ vals.name }}
                        </a-select-option>
                      </a-select>
                    </a-col>
                    <a-col :span="1" style="text-align: center">设为</a-col>
                    <a-col :span="3">
                      <a-select
                        v-model="val.setType"
                        @change="
                          (e) => {
                            $forceUpdate()
                          }
                        "
                      >
                        <a-select-option value="field">本表字段值</a-select-option>
                        <a-select-option value="custom">自定义</a-select-option>
                        <a-select-option value="empty">空置</a-select-option>
                      </a-select>
                    </a-col>
                    <a-col v-if="val.setType == 'field'" :span="11">
                      <a-select
                        v-model="val.field"
                        showSearch
                        optionFilterProp="children"
                        placeholder="请选择本表字段"
                        @change="
                          (e) => {
                            $forceUpdate()
                          }
                        "
                      >
                        <a-select-option v-for="(vals, options) in fieldArr" :key="options" :value="vals.alias">
                          {{ vals.name }}
                        </a-select-option>
                      </a-select>
                    </a-col>
                    <a-col v-if="val.setType == 'custom'" :span="11">
                      <a-row type="flex" align="middle">
                        <a-col :span="24">
                          <querier-codemirror-input ref="querierCodemirrorInput" :params.sync="val.customCode" />
                        </a-col>
                        <div
                          style="position: absolute; right: 15px; cursor: pointer; z-index: 10"
                          size="small"
                          @click="
                            () => {
                              showKey = option
                              const obj = { customCode: val.customCode || { html: '', value: '' } }
                              $refs['customCodemirrorsAddInsert' + option + key + index][0].show(
                                Object.assign(
                                  {
                                    title: '公式编辑器',
                                    item: Object.assign(obj, val),
                                    index: option
                                  },
                                  myEvent
                                )
                              )
                            }
                          "
                        >
                          fx
                        </div>
                        <custom-codemirror
                          :ref="'customCodemirrorsAddInsert' + option + key + index"
                          @ok="
                            (text) => {
                              $set(value.insert[showKey], 'customCode', text)
                              $forceUpdate()
                            }
                          "
                        />
                      </a-row>
                    </a-col>
                    <a-col :span="2">
                      <a-icon
                        :style="{ fontSize: '24px', color: '#52c41a' }"
                        type="plus-square"
                        theme="filled"
                        @click="value.insert.splice(option + 1, 0, { field: undefined, setType: 'field' })"
                      />
                      <a-icon
                        :style="{
                          fontSize: '24px',
                          color: value.insert.length === 1 ? '#bfbfbf' : '#ff4d4f',
                          'padding-left': '5px'
                        }"
                        type="minus-square"
                        theme="filled"
                        @click="value.insert.length > 1 ? value.insert.splice(option, 1) : ''"
                      />
                    </a-col>
                  </a-row>
                </div>
                <!-- 其他数据表-修改数据 -->
                <div v-if="value.tableType === 'update'">
                  <a-row type="flex" align="middle" :gutter="10">
                    <a-col :span="3" style="text-align: right">目标数据表</a-col>
                    <a-col :span="21" style="text-align: right">
                      <!-- 数据表 -->
                      <a-cascader
                        v-model="value.targetTable"
                        size="small"
                        style="width: 100%; text-align: left"
                        :show-search="true"
                        placeholder="请选择目标数据表"
                        :options="tableFieldsTargetList"
                        @change="
                          (e) => {
                            tableFieldsChangeTarget(e, value, 'click')
                          }
                        "
                      />
                    </a-col>
                    <a-col :span="24" style="margin: 15px 0">当目标数据表中的数据满足以下条件时（多条件为"且"）</a-col>
                  </a-row>
                  <a-row
                    v-for="(val, option) in value.where"
                    :key="option + 'update1'"
                    type="flex"
                    align="middle"
                    :gutter="10"
                    style="margin-bottom: 10px"
                  >
                    <a-col :span="5">
                      <!-- 目标表字段 -->
                      <a-select
                        v-model="val.targetField"
                        placeholder="请选择目标表字段"
                        showSearch
                        optionFilterProp="children"
                        @change="
                          (e) => {
                            ;(val.setType = 'field'), $forceUpdate()
                          }
                        "
                      >
                        <a-select-option
                          v-for="(vals, options) in value.targetFieldList"
                          :key="options"
                          :value="vals.alias"
                        >
                          {{ vals.name }}
                        </a-select-option>
                      </a-select>
                    </a-col>
                    <a-col :span="3">
                      <a-select
                        v-model="val.include"
                        @change="
                          (value) => {
                            choiceIncludeEvent(value, val)
                          }
                        "
                      >
                        <a-select-option
                          v-for="(operation, arrIndex) in conditionArr"
                          :key="arrIndex"
                          :value="operation.enName"
                        >
                          {{ operation.cnName }}
                        </a-select-option>
                      </a-select>
                    </a-col>
                    <template v-if="['em', 'nem'].includes(val.include)">
                      <a-col :span="14">
                        <a-input type="text" disabled size="small" />
                      </a-col>
                    </template>
                    <template v-else>
                      <a-col :span="3">
                        <a-select
                          v-model="val.setType"
                          @change="
                            (e) => {
                              $forceUpdate()
                            }
                          "
                        >
                          <a-select-option value="field">本表字段值</a-select-option>
                          <a-select-option value="custom">自定义</a-select-option>
                          <a-select-option value="empty">空置</a-select-option>
                        </a-select>
                      </a-col>
                      <a-col v-if="val.setType == 'field'" :span="11">
                        <a-select
                          v-model="val.field"
                          showSearch
                          optionFilterProp="children"
                          placeholder="请选择本表字段"
                          @change="
                            (e) => {
                              $forceUpdate()
                            }
                          "
                        >
                          <a-select-option v-for="(vals, options) in fieldArr" :key="options" :value="vals.alias">
                            {{ vals.name }}
                          </a-select-option>
                        </a-select>
                      </a-col>
                      <a-col v-if="val.setType == 'custom'" :span="11">
                        <a-row type="flex" align="middle">
                          <a-col :span="24">
                            <querier-codemirror-input ref="querierCodemirrorInput" :params.sync="val.customCode" />
                          </a-col>
                          <div
                            style="position: absolute; right: 15px; cursor: pointer; z-index: 10"
                            size="small"
                            @click="
                              () => {
                                showKey = option
                                const obj = { customCode: val.customCode || { html: '', value: '' } }
                                $refs['customCodemirrorsMoreUpdate' + option + key + index][0].show(
                                  Object.assign(
                                    {
                                      title: '公式编辑器',
                                      item: Object.assign(obj, val),
                                      index: option
                                    },
                                    myEvent
                                  )
                                )
                              }
                            "
                          >
                            fx
                          </div>
                          <custom-codemirror
                            :ref="'customCodemirrorsMoreUpdate' + option + key + index"
                            @ok="
                              (text) => {
                                $set(value.where[showKey], 'customCode', text)
                                $forceUpdate()
                              }
                            "
                          />
                        </a-row>
                      </a-col>
                    </template>
                    <a-col :span="2">
                      <a-icon
                        :style="{ fontSize: '24px', color: '#52c41a' }"
                        type="plus-square"
                        theme="filled"
                        @click="value.where.splice(option + 1, 0, { field: undefined, setType: 'field' })"
                      />
                      <a-icon
                        :style="{
                          fontSize: '24px',
                          color: value.where.length === 1 ? '#bfbfbf' : '#ff4d4f',
                          'padding-left': '5px'
                        }"
                        type="minus-square"
                        theme="filled"
                        @click="value.where.length > 1 ? value.where.splice(option, 1) : ''"
                      />
                    </a-col>
                  </a-row>
                  <div style="margin: 15px 0">对目标数据表中符合条件的数据，修改如下：</div>
                  <a-row
                    v-for="(val, option) in value.update"
                    :key="option + 'update2'"
                    type="flex"
                    align="middle"
                    :gutter="10"
                    style="margin-bottom: 10px"
                  >
                    <a-col :span="5">
                      <!-- 目标表字段 -->
                      <a-select
                        v-model="val.targetField"
                        placeholder="请选择目标表字段"
                        showSearch
                        optionFilterProp="children"
                        @change="
                          (e) => {
                            ;(val.setType = 'field'), $forceUpdate()
                          }
                        "
                      >
                        <a-select-option
                          v-for="(vals, options) in value.targetFieldList"
                          :key="options"
                          :value="vals.alias"
                        >
                          {{ vals.name }}
                        </a-select-option>
                      </a-select>
                    </a-col>
                    <a-col :span="3" style="text-align: center">修改为</a-col>
                    <a-col :span="3">
                      <a-select
                        v-model="val.setType"
                        @change="
                          (e) => {
                            $forceUpdate()
                          }
                        "
                      >
                        <a-select-option value="field">本表字段值</a-select-option>
                        <a-select-option value="custom">自定义</a-select-option>
                        <a-select-option value="empty">空置</a-select-option>
                      </a-select>
                    </a-col>
                    <a-col v-if="val.setType == 'field'" :span="11">
                      <a-select
                        v-model="val.field"
                        showSearch
                        optionFilterProp="children"
                        placeholder="请选择本表字段"
                        @change="
                          (e) => {
                            $forceUpdate()
                          }
                        "
                      >
                        <a-select-option v-for="(vals, options) in fieldArr" :key="options" :value="vals.alias">
                          {{ vals.name }}
                        </a-select-option>
                      </a-select>
                    </a-col>
                    <a-col v-if="val.setType == 'custom'" :span="11">
                      <a-row type="flex" align="middle">
                        <a-col :span="24">
                          <querier-codemirror-input ref="querierCodemirrorInput" :params.sync="val.customCode" />
                        </a-col>
                        <div
                          style="position: absolute; right: 15px; cursor: pointer; z-index: 10"
                          size="small"
                          @click="
                            () => {
                              showKey = option
                              const obj = { customCode: val.customCode || { html: '', value: '' } }
                              $refs['customCodemirrorsEditUpdate' + option + key + index][0].show(
                                Object.assign(
                                  {
                                    title: '公式编辑器',
                                    item: Object.assign(obj, val),
                                    index: option
                                  },
                                  myEvent
                                )
                              )
                            }
                          "
                        >
                          fx
                        </div>
                        <custom-codemirror
                          :ref="'customCodemirrorsEditUpdate' + option + key + index"
                          @ok="
                            (text) => {
                              $set(value.update[showKey], 'customCode', text)
                              $forceUpdate()
                            }
                          "
                        />
                      </a-row>
                    </a-col>
                    <a-col :span="2">
                      <a-icon
                        :style="{ fontSize: '24px', color: '#52c41a' }"
                        type="plus-square"
                        theme="filled"
                        @click="value.update.splice(option + 1, 0, { field: undefined, setType: 'field' })"
                      />
                      <a-icon
                        :style="{
                          fontSize: '24px',
                          color: value.update.length === 1 ? '#bfbfbf' : '#ff4d4f',
                          'padding-left': '5px'
                        }"
                        type="minus-square"
                        theme="filled"
                        @click="value.update.length > 1 ? value.update.splice(option, 1) : ''"
                      />
                    </a-col>
                  </a-row>
                </div>
                <!-- 其他数据表-删除数据 -->
                <div v-if="value.tableType === 'delete'">
                  <a-row type="flex" align="middle" :gutter="10">
                    <a-col :span="3" style="text-align: right">目标数据表</a-col>
                    <a-col :span="21" style="text-align: right">
                      <!-- 数据表 -->
                      <a-cascader
                        v-model="value.targetTable"
                        size="small"
                        style="width: 100%; text-align: left"
                        :show-search="true"
                        placeholder="请选择目标数据表"
                        :options="tableFieldsTargetList"
                        @change="
                          (e) => {
                            tableFieldsChangeTarget(e, value, 'click')
                          }
                        "
                      />
                    </a-col>
                    <a-col :span="24" style="margin: 15px 0">删除目标数据表中满足以下条件的数据（多条件为"且"）</a-col>
                  </a-row>
                  <a-row
                    v-for="(val, option) in value.where"
                    :key="option"
                    type="flex"
                    align="middle"
                    :gutter="10"
                    style="margin-bottom: 10px"
                  >
                    <a-col :span="5">
                      <!-- 目标表字段 -->
                      <a-select
                        v-model="val.targetField"
                        placeholder="请选择目标表字段"
                        showSearch
                        optionFilterProp="children"
                        @change="
                          (e) => {
                            $forceUpdate()
                          }
                        "
                      >
                        <a-select-option
                          v-for="(vals, options) in value.targetFieldList"
                          :key="options"
                          :value="vals.alias"
                        >
                          {{ vals.name }}
                        </a-select-option>
                      </a-select>
                    </a-col>
                    <a-col :span="3">
                      <a-select
                        v-model="val.include"
                        @change="
                          (value) => {
                            choiceIncludeEvent(value, val)
                          }
                        "
                      >
                        <a-select-option
                          v-for="(operation, arrIndex) in conditionArr"
                          :key="arrIndex"
                          :value="operation.enName"
                        >
                          {{ operation.cnName }}
                        </a-select-option>
                      </a-select>
                    </a-col>
                    <template v-if="['em', 'nem'].includes(val.include)">
                      <a-col :span="14">
                        <a-input type="text" disabled size="small" />
                      </a-col>
                    </template>
                    <template v-else>
                      <a-col :span="3">
                        <a-select
                          v-model="val.setType"
                          @change="
                            (e) => {
                              $forceUpdate()
                            }
                          "
                        >
                          <a-select-option value="field">本表字段值</a-select-option>
                          <a-select-option value="custom">自定义</a-select-option>
                          <a-select-option value="empty">空置</a-select-option>
                        </a-select>
                      </a-col>
                      <a-col v-if="val.setType == 'field'" :span="11">
                        <a-select
                          v-model="val.field"
                          showSearch
                          optionFilterProp="children"
                          placeholder="请选择本表字段"
                          @change="
                            (e) => {
                              $forceUpdate()
                            }
                          "
                        >
                          <a-select-option v-for="(vals, options) in fieldArr" :key="options" :value="vals.alias">
                            {{ vals.name }}
                          </a-select-option>
                        </a-select>
                      </a-col>
                      <a-col v-if="val.setType == 'custom'" :span="11">
                        <a-row type="flex" align="middle">
                          <a-col :span="24">
                            <querier-codemirror-input ref="querierCodemirrorInput" :params.sync="val.customCode" />
                          </a-col>
                          <div
                            style="position: absolute; right: 15px; cursor: pointer; z-index: 10"
                            size="small"
                            @click="
                              () => {
                                showKey = option
                                const obj = { customCode: val.customCode || { html: '', value: '' } }
                                $refs['customCodemirrorsDelete' + option + key + index][0].show(
                                  Object.assign(
                                    {
                                      title: '公式编辑器',
                                      item: Object.assign(obj, val),
                                      index: option
                                    },
                                    myEvent
                                  )
                                )
                              }
                            "
                          >
                            fx
                          </div>
                          <custom-codemirror
                            :ref="'customCodemirrorsDelete' + option + key + index"
                            @ok="
                              (text) => {
                                $set(value.where[showKey], 'customCode', text)
                                $forceUpdate()
                              }
                            "
                          />
                        </a-row>
                      </a-col>
                    </template>
                    <a-col :span="2">
                      <a-icon
                        :style="{ fontSize: '24px', color: '#52c41a' }"
                        type="plus-square"
                        theme="filled"
                        @click="value.where.splice(option + 1, 0, { field: undefined, setType: 'field' })"
                      />
                      <a-icon
                        :style="{
                          fontSize: '24px',
                          color: value.where.length === 1 ? '#bfbfbf' : '#ff4d4f',
                          'padding-left': '5px'
                        }"
                        type="minus-square"
                        theme="filled"
                        @click="value.where.length > 1 ? value.where.splice(option, 1) : ''"
                      />
                    </a-col>
                  </a-row>
                </div>
                <!-- 其他数据表-修改或新增数据 -->
                <div v-if="value.tableType === 'input'">
                  <a-row type="flex" align="middle" :gutter="10">
                    <a-col :span="3" style="text-align: right">目标数据表</a-col>
                    <a-col :span="21" style="text-align: right">
                      <!-- 数据表 -->
                      <a-cascader
                        v-model="value.targetTable"
                        size="small"
                        style="width: 100%; text-align: left"
                        :show-search="true"
                        placeholder="请选择目标数据表"
                        :options="tableFieldsTargetList"
                        @change="
                          (e) => {
                            tableFieldsChangeTarget(e, value, 'click')
                          }
                        "
                      />
                    </a-col>
                    <a-col :span="24" style="margin: 15px 0">当目标数据表中的数据满足以下条件时（多条件为"且"）</a-col>
                  </a-row>
                  <a-row
                    v-for="(val, option) in value.where"
                    :key="option"
                    type="flex"
                    align="middle"
                    :gutter="10"
                    style="margin-bottom: 10px"
                  >
                    <a-col :span="5">
                      <!-- 目标表字段 -->
                      <a-select
                        v-model="val.targetField"
                        placeholder="请选择目标表字段"
                        showSearch
                        optionFilterProp="children"
                        @change="
                          (e) => {
                            ;(val.setType = 'field'), $forceUpdate()
                          }
                        "
                      >
                        <a-select-option
                          v-for="(vals, options) in value.targetFieldList"
                          :key="options"
                          :value="vals.alias"
                        >
                          {{ vals.name }}
                        </a-select-option>
                      </a-select>
                    </a-col>
                    <a-col :span="3">
                      <a-select
                        v-model="val.include"
                        @change="
                          (value) => {
                            choiceIncludeEvent(value, val)
                          }
                        "
                      >
                        <a-select-option
                          v-for="(operation, arrIndex) in conditionArr"
                          :key="arrIndex"
                          :value="operation.enName"
                        >
                          {{ operation.cnName }}
                        </a-select-option>
                      </a-select>
                    </a-col>
                    <template v-if="['em', 'nem'].includes(val.include)">
                      <a-col :span="14">
                        <a-input type="text" disabled size="small" />
                      </a-col>
                    </template>
                    <template v-else>
                      <a-col :span="3">
                        <a-select
                          v-model="val.setType"
                          @change="
                            (e) => {
                              $forceUpdate()
                            }
                          "
                        >
                          <a-select-option value="field">本表字段值</a-select-option>
                          <a-select-option value="custom">自定义</a-select-option>
                          <a-select-option value="empty">空置</a-select-option>
                        </a-select>
                      </a-col>
                      <a-col v-if="val.setType == 'field'" :span="11">
                        <a-select
                          v-model="val.field"
                          showSearch
                          optionFilterProp="children"
                          placeholder="请选择本表字段"
                          @change="
                            (e) => {
                              $forceUpdate()
                            }
                          "
                        >
                          <a-select-option v-for="(vals, options) in fieldArr" :key="options" :value="vals.alias">
                            {{ vals.name }}
                          </a-select-option>
                        </a-select>
                      </a-col>
                      <a-col v-if="val.setType == 'custom'" :span="11">
                        <a-row type="flex" align="middle">
                          <a-col :span="24">
                            <querier-codemirror-input ref="querierCodemirrorInput" :params.sync="val.customCode" />
                          </a-col>
                          <div
                            style="position: absolute; right: 15px; cursor: pointer; z-index: 10"
                            size="small"
                            @click="
                              () => {
                                showKey = option
                                const obj = { customCode: val.customCode || { html: '', value: '' } }
                                $refs['customCodemirrorsMoreInput' + option + key + index][0].show(
                                  Object.assign(
                                    {
                                      title: '公式编辑器',
                                      item: Object.assign(obj, val),
                                      index: option
                                    },
                                    myEvent
                                  )
                                )
                              }
                            "
                          >
                            fx
                          </div>
                          <custom-codemirror
                            :ref="'customCodemirrorsMoreInput' + option + key + index"
                            @ok="
                              (text) => {
                                $set(value.where[showKey], 'customCode', text)
                                $forceUpdate()
                              }
                            "
                          />
                        </a-row>
                      </a-col>
                    </template>
                    <a-col :span="2">
                      <a-icon
                        :style="{ fontSize: '24px', color: '#52c41a' }"
                        type="plus-square"
                        theme="filled"
                        @click="value.where.splice(option + 1, 0, { field: undefined, setType: 'field' })"
                      />
                      <a-icon
                        :style="{
                          fontSize: '24px',
                          color: value.where.length === 1 ? '#bfbfbf' : '#ff4d4f',
                          'padding-left': '5px'
                        }"
                        type="minus-square"
                        theme="filled"
                        @click="value.where.length > 1 ? value.where.splice(option, 1) : ''"
                      />
                    </a-col>
                  </a-row>
                  <div style="margin: 15px 0">对目标数据表中符合条件的数据，修改如下：</div>
                  <a-row
                    v-for="(val, option) in value.update"
                    :key="option + 'input'"
                    type="flex"
                    align="middle"
                    :gutter="10"
                    style="margin-bottom: 10px"
                  >
                    <a-col :span="5">
                      <!-- 目标表字段 -->
                      <a-select
                        v-model="val.targetField"
                        placeholder="请选择目标表字段"
                        showSearch
                        optionFilterProp="children"
                        @change="
                          (e) => {
                            ;(val.setType = 'field'), $forceUpdate()
                          }
                        "
                      >
                        <a-select-option
                          v-for="(vals, options) in value.targetFieldList"
                          :key="options"
                          :value="vals.alias"
                        >
                          {{ vals.name }}
                        </a-select-option>
                      </a-select>
                    </a-col>
                    <a-col :span="3" style="text-align: center">修改为</a-col>
                    <a-col :span="3">
                      <a-select
                        v-model="val.setType"
                        @change="
                          (e) => {
                            $forceUpdate()
                          }
                        "
                      >
                        <a-select-option value="field">本表字段值</a-select-option>
                        <a-select-option value="custom">自定义</a-select-option>
                        <a-select-option value="empty">空置</a-select-option>
                      </a-select>
                    </a-col>
                    <a-col v-if="val.setType == 'field'" :span="11">
                      <a-select
                        v-model="val.field"
                        showSearch
                        optionFilterProp="children"
                        placeholder="请选择本表字段"
                        @change="
                          (e) => {
                            $forceUpdate()
                          }
                        "
                      >
                        <a-select-option v-for="(vals, options) in fieldArr" :key="options" :value="vals.alias">
                          {{ vals.name }}
                        </a-select-option>
                      </a-select>
                    </a-col>
                    <a-col v-if="val.setType == 'custom'" :span="11">
                      <a-row type="flex" align="middle">
                        <a-col :span="24">
                          <querier-codemirror-input ref="querierCodemirrorInput" :params.sync="val.customCode" />
                        </a-col>
                        <div
                          style="position: absolute; right: 15px; cursor: pointer; z-index: 10"
                          size="small"
                          @click="
                            () => {
                              showKey = option
                              const obj = { customCode: val.customCode || { html: '', value: '' } }
                              $refs['customCodemirrorsEditInput' + option + key + index][0].show(
                                Object.assign(
                                  {
                                    title: '公式编辑器',
                                    item: Object.assign(obj, val),
                                    index: option
                                  },
                                  myEvent
                                )
                              )
                            }
                          "
                        >
                          fx
                        </div>
                        <custom-codemirror
                          :ref="'customCodemirrorsEditInput' + option + key + index"
                          @ok="
                            (text) => {
                              $set(value.update[showKey], 'customCode', text)
                              $forceUpdate()
                            }
                          "
                        />
                      </a-row>
                    </a-col>
                    <a-col :span="2">
                      <a-icon
                        :style="{ fontSize: '24px', color: '#52c41a' }"
                        type="plus-square"
                        theme="filled"
                        @click="value.update.splice(option + 1, 0, { field: undefined, setType: 'field' })"
                      />
                      <a-icon
                        :style="{
                          fontSize: '24px',
                          color: value.update.length === 1 ? '#bfbfbf' : '#ff4d4f',
                          'padding-left': '5px'
                        }"
                        type="minus-square"
                        theme="filled"
                        @click="value.update.length > 1 ? value.update.splice(option, 1) : ''"
                      />
                    </a-col>
                  </a-row>
                  <div style="margin: 15px 0">若找不到符合以上条件的数据，则按如下方式在目标表中新增数据</div>
                  <a-row
                    v-for="(val, option) in value.insert"
                    :key="option + 'unfind'"
                    type="flex"
                    align="middle"
                    :gutter="10"
                    style="margin-bottom: 10px"
                  >
                    <a-col :span="5">
                      <!-- 目标表字段 -->
                      <a-select
                        v-model="val.targetField"
                        placeholder="请选择目标表字段"
                        showSearch
                        optionFilterProp="children"
                        @change="
                          (e) => {
                            ;(val.setType = 'field'), $forceUpdate()
                          }
                        "
                      >
                        <a-select-option
                          v-for="(vals, options) in value.targetFieldList"
                          :key="options"
                          :value="vals.alias"
                        >
                          {{ vals.name }}
                        </a-select-option>
                      </a-select>
                    </a-col>
                    <a-col :span="3" style="text-align: center">设为</a-col>
                    <a-col :span="3">
                      <a-select
                        v-model="val.setType"
                        @change="
                          (e) => {
                            $forceUpdate()
                          }
                        "
                      >
                        <a-select-option value="field">本表字段值</a-select-option>
                        <a-select-option value="custom">自定义</a-select-option>
                        <a-select-option value="empty">空置</a-select-option>
                      </a-select>
                    </a-col>
                    <a-col v-if="val.setType == 'field'" :span="11">
                      <a-select
                        v-model="val.field"
                        showSearch
                        optionFilterProp="children"
                        placeholder="请选择本表字段"
                        @change="
                          (e) => {
                            $forceUpdate()
                          }
                        "
                      >
                        <a-select-option v-for="(vals, options) in fieldArr" :key="options" :value="vals.alias">
                          {{ vals.name }}
                        </a-select-option>
                      </a-select>
                    </a-col>
                    <a-col v-if="val.setType == 'custom'" :span="11">
                      <a-row type="flex" align="middle">
                        <a-col :span="24">
                          <querier-codemirror-input ref="querierCodemirrorInput" :params.sync="val.customCode" />
                        </a-col>
                        <div
                          style="position: absolute; right: 15px; cursor: pointer; z-index: 10"
                          size="small"
                          @click="
                            () => {
                              showKey = option
                              const obj = { customCode: val.customCode || { html: '', value: '' } }
                              $refs['customCodemirrorsElseInput' + option + key + index][0].show(
                                Object.assign(
                                  {
                                    title: '公式编辑器',
                                    item: Object.assign(obj, val),
                                    index: option
                                  },
                                  myEvent
                                )
                              )
                            }
                          "
                        >
                          fx
                        </div>
                        <custom-codemirror
                          :ref="'customCodemirrorsElseInput' + option + key + index"
                          @ok="
                            (text) => {
                              $set(value.insert[showKey], 'customCode', text)
                              $forceUpdate()
                            }
                          "
                        />
                      </a-row>
                    </a-col>
                    <a-col :span="2">
                      <a-icon
                        :style="{ fontSize: '24px', color: '#52c41a' }"
                        type="plus-square"
                        theme="filled"
                        @click="value.insert.splice(option + 1, 0, { field: undefined, setType: 'field' })"
                      />
                      <a-icon
                        :style="{
                          fontSize: '24px',
                          color: value.insert.length === 1 ? '#bfbfbf' : '#ff4d4f',
                          'padding-left': '5px'
                        }"
                        type="minus-square"
                        theme="filled"
                        @click="value.insert.length > 1 ? value.insert.splice(option, 1) : ''"
                      />
                    </a-col>
                  </a-row>
                </div>
                <!-- 自定义-公式编辑器 -->
                <div v-else-if="value.tableType === 'custom'">
                  <a-row :gutter="10">
                    <a-col :span="3" style="text-align: right">公式编辑器</a-col>
                    <a-col :span="21">
                      <querier-codemirror-input ref="querierCodemirrorInput" :params.sync="value.customCode" />
                    </a-col>
                    <div
                      style="position: absolute; right: 15px; cursor: pointer; z-index: 10"
                      size="small"
                      @click="
                        () => {
                          showKey = index
                          const obj = { customCode: value.customCode || { html: '', value: '' } }
                          $refs['customCodemirrorsCustom' + key + index][0].show(
                            Object.assign(
                              {
                                title: '公式编辑器',
                                item: Object.assign(obj, value),
                                index: index
                              },
                              myEvent
                            )
                          )
                        }
                      "
                    >
                      fx
                    </div>
                    <custom-codemirror
                      :ref="'customCodemirrorsCustom' + key + index"
                      @ok="
                        (text) => {
                          $set(value, 'customCode', text)
                          $forceUpdate()
                        }
                      "
                    />
                  </a-row>
                </div>
                <div
                  slot="extra"
                  @click="
                    (e) => {
                      e.stopPropagation()
                    }
                  "
                >
                  <a-popconfirm
                    title="您确认要删除该记录吗？"
                    placement="left"
                    okText="确认"
                    cancelText="取消"
                    @confirm="handleDeleteTable(key, index)"
                  >
                    <a-icon type="delete" />
                  </a-popconfirm>
                </div>
              </a-collapse-panel>
            </a-collapse>
          </div>
        </a-collapse-panel>
      </a-collapse>
    </a-form>
    <drag-sort ref="dragSort" @ok="getSort" />
  </div>
</template>
<script>
import { Collapse } from 'ant-design-vue'
import Codemirror from '@/views/admin/Formula/Codemirror'
import QuerierCodemirror from '@/views/admin/Table/QuerierCodemirror'
import QuerierCodemirrorInput from '@/views/admin/Table/QuerierCodemirrorInput'
import Vue from 'vue'
Vue.use(Collapse)
export default {
  components: {
    Codemirror,
    QuerierCodemirror,
    QuerierCodemirrorInput,
    CustomCodemirror: () => import('@/views/admin/Flow/modules/CustomCodemirror'),
    AddressSelect: () => import('@/views/admin/Field/AddressSelect'),
    TabsSelect: () => import('@/views/admin/Field/TabsSelect'),
    DragSort: () => import('@/views/admin/Common/DragSort')
  },
  props: {
    myEvent: {
      type: Object,
      default: () => { }
    },
    thisTableField: {
      type: Array,
      default: () => []
    }
  },
  data () {
    return {
      tableFieldsTargetList: [],
      showKey: null,
      tableFields: [],
      eventData: [{
        table: [{
          tableType: 'current',
          title: '当前数据表',
          data: [{
            field: undefined,
            setType: 'field'
          }]
        }],
        logic: 'and',
        simpleCondition: [{
          fieldUser: 'notSet',
          field: '',
          src: '',
          conditionArr: [],
          condition: [{
            include: '',
            value: ''
          }],
          logic: 'and'
        }]
      }],
      pattern: '0',
      conditionArr: [{
        enName: 'cn', cnName: '包含'
      }, {
        enName: 'nc', cnName: '不包含'
      }, {
        enName: 'eq', cnName: '等于'
      }, {
        enName: 'ne', cnName: '不等于'
      }, {
        enName: 'gt', cnName: '大于'
      }, {
        enName: 'ge', cnName: '大于等于'
      }, {
        enName: 'lt', cnName: '小于'
      }, {
        enName: 'le', cnName: '小于等于'
      }, {
        enName: 'em', cnName: '为空'
      }, {
        enName: 'nem', cnName: '不为空'
      }],
      fieldArr: [],
      form: this.$form.createForm(this),
      tableFieldsList: [],
      labelCol: { span: 3 },
      wrapperCol: { span: 4 },
      tableId: '',
      data: {
        logic: 'and',
        simpleCondition: [{
          fieldUser: 'notSet',
          field: '',
          src: '',
          conditionArr: [],
          condition: [{
            include: '',
            value: ''
          }],
          logic: 'and'
        }]
      },
      // 办理方式数据
      handleData: [],
      scope: this,
      activeKey: []
    }
  },
  watch: {
    thisTableField (val) {
      // 字段列表的处理
      this.fieldArr = val.filter(item => {
        return ['text', 'textarea', 'radio', 'switch', 'checkbox', 'combobox', 'number', 'datetime', 'cascader', 'associated', 'address', 'treeselect', 'serialnumber', 'tag', 'score', 'organization'].indexOf(item.formType) !== -1
      })
      // 遍历规则
      this.eventData.forEach(item => {
        item.simpleCondition.forEach((simpleItem, simpleIndex) => {
          if (!simpleItem.field) {
            simpleItem.conditionArr = [{ enName: 'eq', cnName: '等于' }]
          } else {
            this.fieldArr.forEach((fieldItem, fieldIndex) => {
              if (simpleItem.field === fieldItem.alias) {
                fieldItem.settings = JSON.parse(fieldItem.setting)
                simpleItem.src = fieldItem.settings.form.src ? fieldItem.settings.form.src : ''
                simpleItem.formType = fieldItem.formType
                simpleItem.fieldId = fieldItem.fieldId
                if (simpleItem.src && fieldItem.formType === 'treeselect') {
                  this.getTreeOption(simpleItem, fieldItem)
                } else if (simpleItem.src) {
                  this.getOption(simpleItem)
                } else if (fieldItem.formType === 'treeselect') {
                  simpleItem.dataSource = fieldItem.settings.attribute.dataSource
                  this.getTreeOption(simpleItem, fieldItem)
                } else {
                  simpleItem.option = []
                }
                // 根据字段，给出相应条件
                if (['text', 'textarea', 'serialnumber'].indexOf(fieldItem.formType) !== -1) {
                  simpleItem.conditionArr = [
                    { enName: 'eq', cnName: '等于' },
                    { enName: 'ne', cnName: '不等于' },
                    { enName: 'cn', cnName: '包含' },
                    { enName: 'nc', cnName: '不包含' },
                    { enName: 'bw', cnName: '开始于' },
                    { enName: 'ew', cnName: '结束于' },
                    { enName: 'em', cnName: '为空' },
                    { enName: 'nem', cnName: '不为空' }]
                } else if (['radio', 'switch', 'combobox', 'score'].indexOf(fieldItem.formType) !== -1) {
                  simpleItem.conditionArr = [
                    { enName: 'eq', cnName: '等于' },
                    { enName: 'ne', cnName: '不等于' },
                    { enName: 'em', cnName: '为空' },
                    { enName: 'nem', cnName: '不为空' }]
                } else if (['number', 'datetime'].indexOf(fieldItem.formType) !== -1) {
                  simpleItem.conditionArr = [
                    { enName: 'eq', cnName: '等于' },
                    { enName: 'ne', cnName: '不等于' },
                    { enName: 'gt', cnName: '大于' },
                    { enName: 'ge', cnName: '大于等于' },
                    { enName: 'lt', cnName: '小于' },
                    { enName: 'le', cnName: '小于等于' },
                    { enName: 'em', cnName: '为空' },
                    { enName: 'nem', cnName: '不为空' }]
                } else if (['address', 'treeselect', 'tag', 'organization'].indexOf(fieldItem.formType) !== -1) {
                  simpleItem.conditionArr = [
                    { enName: 'cn', cnName: '包含' },
                    { enName: 'nc', cnName: '不包含' },
                    { enName: 'em', cnName: '为空' },
                    { enName: 'nem', cnName: '不为空' }]
                } else if (['cascader', 'checkbox'].indexOf(fieldItem.formType) !== -1) {
                  simpleItem.conditionArr = [
                    { enName: 'eq', cnName: '等于' },
                    { enName: 'ne', cnName: '不等于' },
                    { enName: 'cn', cnName: '包含' },
                    { enName: 'nc', cnName: '不包含' },
                    { enName: 'em', cnName: '为空' },
                    { enName: 'nem', cnName: '不为空' }]
                }
              }
            })
          }
        })
      })
    }
  },
  created () {
    this.fieldArr = this.thisTableField.filter(item => {
      return ['text', 'textarea', 'radio', 'switch', 'checkbox', 'combobox', 'number', 'datetime', 'cascader', 'associated', 'address', 'treeselect', 'serialnumber', 'tag'].indexOf(item.formType) !== -1
    })
  },
  mounted () {
    this.show()
  },
  methods: {
    addDataEvent () {
      const obj = {
        conditionType: 'if',
        id: new Date().valueOf(),
        table: [],
        logic: 'and',
        simpleCondition: [{
          fieldUser: 'notSet',
          ruleModel: '0',
          src: '',
          conditionArr: [],
          condition: [{
            include: '',
            value: ''
          }],
          logic: 'and'
        }]
      }
      this.eventData.splice(this.eventData.length, 0, obj)
      this.activeKey.push(obj.id)
    },
    // 排序
    handleSort () {
      const data = this.eventData.map((item, index) => {
        const obj = JSON.parse(JSON.stringify(item))
        obj.name = (obj.pattern || `触发事件-${index + 1}`) + '(' + item.conditionType + ')'
        return obj
      })
      this.$refs.dragSort.show({
        title: this.$t('排序'),
        sortData: data
      })
    },
    getSort (data) {
      data.forEach((item, index) => {
        item.name = item.name.split('(')[0]
        if (index === 0) {
          item.conditionType = 'if'
        } else if (index > 0) {
          if (item.conditionType === 'else') {
            if (data[index + 1] && data[index + 1].conditionType === 'elseif') {
              item.conditionType = 'elseif'
            } else if (data[index - 1].conditionType === 'else') {
              item.conditionType = 'if'
            }
          } else if (item.conditionType === 'elseif') {
            if (data[index - 1].conditionType === 'else') {
              item.conditionType = 'if'
            }
          }
        }
      })
      this.eventData = data
      this.$message.info('触发事件不符合逻辑处已自动调整,请注意核查')
    },
    tableFieldsChangeTarget (e, item, type) {
      const tableId = e[e.length - 1]
      this.axios({
        url: '/admin/field/init',
        data: {
          pageNo: 1,
          pageSize: 1000,
          sortField: 'id',
          sortOrder: 'ascend',
          tableId: tableId
        }
      }).then(res => {
        this.$set(item, 'targetFieldList', res.result.data)
        if (type === 'click') {
          if (item.data?.length) {
            item.data.forEach(sitem => {
              sitem.field = undefined
              sitem.targetField = undefined
              sitem.setType = 'field'
            })
          }
        }
      })
    },
    // 显示公式编辑器
    handleCodemirror (item, index) {
      this.showKey = index
      const obj = { customCode: item.customCode || { html: '', value: '' } }
      this.$refs['customCodemirrors' + index][0].show(Object.assign({
        title: '公式编辑器',
        item: Object.assign(obj, item),
        index: index
      }, this.myEvent))
    },
    tablepush (key, type) {
      let title = ''
      switch (type) {
        case 'current':
          title = '当前数据表'
          break
        case 'insert':
          title = '其他数据表-新增数据'
          break
        case 'update':
          title = '其他数据表-修改数据'
          break
        case 'delete':
          title = '其他数据表-删除数据'
          break
        case 'input':
          title = '其他数据表-修改或新增数据'
          break
        case 'custom':
          title = '自定义-公式编辑器'
          break
      }
      const obj = {}
      obj.tableType = type
      obj.title = title
      if (type === 'current') {
        obj.update = [{}]
      } else if (type === 'insert') {
        obj.insert = [{}]
      } else if (type === 'update') {
        obj.where = [{}]
        obj.update = [{}]
      } else if (type === 'delete') {
        obj.where = [{}]
      } else if (type === 'input') {
        obj.where = [{}]
        obj.update = [{}]
        obj.insert = [{}]
      }
      if (this.tableFieldsTargetList.length === 0) {
        this.axios({
          url: '/admin/field/add',
          data: Object.assign({ tableId: this.myEvent.tableId, parentNumber: [], fieldId: 0 })
        }).then(res => {
          this.tableFieldsTargetList = res.result.tableField
          if (type === 'current') {
            const paramObj = this.tableFieldsTargetList.map(item => { const obj = item.children.filter(subItem => this.myEvent.tableId === subItem.value)[0]; return obj })
            const tableObj = paramObj.filter(item => item)[0]
            const resultObj = this.tableFieldsTargetList.filter(item => tableObj.label.includes(item.label))[0]
            obj.targetTable = [resultObj.label, this.myEvent.tableId]
          }
        })
      }
      this.eventData[key].table.push(obj)
    },
    handleDeleteTable (key, index) {
      if (typeof (index) === 'number') {
        this.eventData[key].table.splice(index, 1)
      } else {
        this.eventData.splice(key, 1)
      }
    },
    handleDelete (key, index) {
      event.stopPropagation()
      const that = this
      if (typeof (index) === 'number') {
        this.$confirm({
          title: '您确认要删除该记录吗？',
          onOk () {
            that.eventData[key].table.splice(index, 1)
          }
        })
      } else {
        this.$confirm({
          title: '您确认要删除该记录吗？',
          onOk () {
            that.eventData.splice(key, 1)
          }
        })
      }
    },
    show () {
      if (this.myEvent.currentSelect && this.myEvent.currentSelect.arcEvents && Array.isArray(this.myEvent.currentSelect.arcEvents)) {
        this.eventData = this.myEvent.currentSelect.arcEvents
        this.eventData.forEach(sItem => {
          if (sItem.simpleCondition) {
            sItem.simpleCondition.forEach(item1 => {
              if (item1.options) {
                item1.optionArr = item1.options
              }
              if (item1.fieldUser === 'ruleTable' && sItem.simpleCondition.indexOf(item1.fieldUser) === -1) {
                this.axios({
                  url: '/admin/field/add',
                  data: Object.assign({ tableId: this.myEvent.tableId, parentNumber: [], fieldId: 0 })
                }).then(res => {
                  this.tableFieldsList = res.result.tableField
                })
              }
              if (item1.fieldUser === 'ruleTable') {
                // 初始化加载对应的规则数据表所有字段
                this.tableFieldsChange(item1.targetTable, item1, 'init')
              }
            })
          }
          sItem.table.forEach(tableItem => {
            if (['insert', 'update', 'delete', 'input'].includes(tableItem.tableType)) {
              // 初始化加载对应的目标数据表所有字段
              this.tableFieldsChangeTarget(tableItem.targetTable, tableItem, 'init')
              // 加载所有数据表
              if (this.tableFieldsTargetList.length === 0) {
                this.axios({
                  url: '/admin/field/add',
                  data: Object.assign({ tableId: this.myEvent.tableId, parentNumber: [], fieldId: 0 })
                }).then(res => {
                  this.tableFieldsTargetList = res.result.tableField
                })
              }
            }
          })
        })
        // 遍历规则
        this.eventData.forEach(item => {
          item.simpleCondition.forEach((simpleItem, simpleIndex) => {
            if (!simpleItem.field) {
              simpleItem.conditionArr = [{ enName: 'eq', cnName: '等于' }]
            } else {
              this.fieldArr.forEach((fieldItem, fieldIndex) => {
                if (simpleItem.field === fieldItem.alias) {
                  fieldItem.settings = JSON.parse(fieldItem.setting)
                  simpleItem.src = fieldItem.settings.form.src ? fieldItem.settings.form.src : ''
                  simpleItem.formType = fieldItem.formType
                  simpleItem.fieldId = fieldItem.fieldId
                  if (simpleItem.src && fieldItem.formType === 'treeselect') {
                    this.getTreeOption(simpleItem, fieldItem)
                  } else if (simpleItem.src) {
                    this.getOption(simpleItem)
                  } else if (fieldItem.formType === 'treeselect') {
                    simpleItem.dataSource = fieldItem.settings.attribute.dataSource
                    this.getTreeOption(simpleItem, fieldItem)
                  } else {
                    simpleItem.option = []
                  }
                  // 根据字段，给出相应条件
                  this.getConditionArr(fieldItem, simpleItem)
                }
              })
            }
          })
        })
      } else {
        this.eventData = []
      }
      this.tableId = this.myEvent.tableId
      this.handleData = this.getHandleData()
    },
    getConditionArr (fieldItem, simpleItem) {
      if (['text', 'textarea', 'serialnumber'].indexOf(fieldItem.formType) !== -1) {
        simpleItem.conditionArr = [
          { enName: 'eq', cnName: '等于' },
          { enName: 'ne', cnName: '不等于' },
          { enName: 'cn', cnName: '包含' },
          { enName: 'nc', cnName: '不包含' },
          { enName: 'bw', cnName: '开始于' },
          { enName: 'ew', cnName: '结束于' },
          { enName: 'em', cnName: '为空' },
          { enName: 'nem', cnName: '不为空' }]
      } else if (['radio', 'switch', 'checkbox', 'combobox'].indexOf(fieldItem.formType) !== -1) {
        simpleItem.conditionArr = [
          { enName: 'eq', cnName: '等于' },
          { enName: 'ne', cnName: '不等于' },
          { enName: 'em', cnName: '为空' },
          { enName: 'nem', cnName: '不为空' }]
      } else if (['number', 'datetime'].indexOf(fieldItem.formType) !== -1) {
        simpleItem.conditionArr = [
          { enName: 'eq', cnName: '等于' },
          { enName: 'ne', cnName: '不等于' },
          { enName: 'gt', cnName: '大于' },
          { enName: 'ge', cnName: '大于等于' },
          { enName: 'lt', cnName: '小于' },
          { enName: 'le', cnName: '小于等于' },
          { enName: 'em', cnName: '为空' },
          { enName: 'nem', cnName: '不为空' }]
      } else if (['address', 'treeselect', 'tag'].indexOf(fieldItem.formType) !== -1) {
        simpleItem.conditionArr = [
          { enName: 'cn', cnName: '包含' },
          { enName: 'nc', cnName: '不包含' },
          { enName: 'em', cnName: '为空' },
          { enName: 'nem', cnName: '不为空' }]
      } else if (['cascader'].indexOf(fieldItem.formType) !== -1) {
        simpleItem.conditionArr = [
          { enName: 'eq', cnName: '等于' },
          { enName: 'ne', cnName: '不等于' },
          { enName: 'cn', cnName: '包含' },
          { enName: 'nc', cnName: '不包含' },
          { enName: 'em', cnName: '为空' },
          { enName: 'nem', cnName: '不为空' }]
      }
      this.$forceUpdate()
    },
    getRuleTable (simpleItem) {
      if (this.tableFieldsList.length === 0) {
        this.axios({
          url: '/admin/field/add',
          data: Object.assign({ tableId: this.myEvent.tableId, parentNumber: [], fieldId: 0 })
        }).then(res => {
          this.tableFieldsList = res.result.tableField
        })
      }
    },
    tableFieldsChange (e, item, type) {
      const tableId = e[e.length - 1]
      this.axios({
        url: '/admin/field/init',
        data: {
          pageNo: 1,
          pageSize: 1000,
          sortField: 'id',
          sortOrder: 'ascend',
          tableId: tableId
        }
      }).then(res => {
        this.$set(item, 'ruleFieldList', res.result.data)
        if (type === 'click') {
          item.condition.forEach(sitem => {
            sitem.ruleAlias = undefined
            sitem.include = undefined
            sitem.setType = 'field' // 本表字段、自定义
            sitem.type = undefined // 判断比较方式显示条件
            sitem.conditionArr = []
          })
        }
        if (type === 'init') {
          // 显示比较方式列表
          if (item.fieldUser === 'ruleTable') {
            item.condition.forEach(simpleItem => {
              item.ruleFieldList.forEach(fieldItem => {
                if (simpleItem.ruleAlias === fieldItem.alias) {
                  // 规则表查表条件 比较方式列表
                  this.getConditionArr(fieldItem, simpleItem)
                }
              })
            })
          }
        }
      })
    },
    // 获取办理方式
    getHandleData () {
      var handleArr = []
      if (this.myEvent.flowData && this.myEvent.currentSelect && this.myEvent.currentSelect.type === 'link') {
        const linkList = this.myEvent.flowData.linkList
        const nodeList = this.myEvent.flowData.nodeList
        var currentSelect = this.myEvent.currentSelect
        if (currentSelect.sourceId?.indexOf('transition') > -1) {
          for (var k in nodeList) {
            if (nodeList[k].id === currentSelect.sourceId && nodeList[k].handleMethods) {
              handleArr = nodeList[k].handleMethods
              break
            }
          }
        } else if (currentSelect.sourceId?.indexOf('gateway') > -1) {
          for (var lk in linkList) {
            if (linkList[lk].targetId === currentSelect.sourceId && linkList[lk].sourceId.indexOf('transition') > -1) {
              currentSelect = linkList[lk]
              break
            }
          }
          for (var nk in nodeList) {
            if (nodeList[nk].id === currentSelect.sourceId && nodeList[nk].handleMethods) {
              handleArr = nodeList[nk].handleMethods
              break
            }
          }
        }
      }
      return handleArr
    },
    // 选择关系 条件设置
    choiceInclude (value, includeItem) {
      includeItem.value = ''
      if (value === 'em' || value === 'nem') {
        includeItem.type = 'empty'
      } else {
        includeItem.type = undefined
      }
    },
    // 选择关系 触发事件设置
    choiceIncludeEvent (value, includeItem) {
      includeItem.value = undefined
    },
    deleteCondition (item, simpleIndex, includeIndex) {
      if (item.simpleCondition[simpleIndex].condition.length === 1) {
        return false
      } else {
        item.simpleCondition[simpleIndex].condition.splice(includeIndex, 1)
      }
    },
    deleteSimpleCondition (index, simpleIndex) {
      this.eventData[index].simpleCondition.splice(simpleIndex, 1)
    },
    getOption (item) {
      this.axios({
        url: '/admin/search/dictSearch',
        data: { dictCategoryNumber: item.src }
      }).then(res => {
        this.$set(item, 'option', res.result)
      })
    },
    getTreeOption (simpleItem, item) {
      this.axios({
        url: '/admin/UserTable/getFieldForm',
        data: { fieldId: item.fieldId, value: simpleItem.value }
      }).then(res => {
        this.$set(simpleItem, 'option', res.result.option)
      })
    },
    addData (item) {
      var arr = {
        fieldUser: 'notSet',
        selectUser: '',
        src: '',
        condition: [{
          include: '',
          value: ''
        }],
        logic: 'and'
      }
      if (!item.simpleCondition) {
        this.$set(item, 'simpleCondition', [])
      }
      item.simpleCondition.push(arr)
      this.$forceUpdate()
    },
    // 关闭抽屉
    onClose () {
      this.visible = false
    }
  }
}
</script>
