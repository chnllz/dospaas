<template>
  <div>
    <a-spin :spinning="loading">
      <a-form :form="form">
        <a-popover v-model="selectshow" :trigger="fieldRule === 'readonly' ? '' : 'click'" placement="bottomLeft">
          <a-form-item>
            <a-input
              v-model="address"
              read-only
              :disabled="fieldRule === 'readonly'"
              :size="size"
              :placeholder="fieldRule === 'readonly' ? '' : $t('请选择地址')"
              :style="fieldRule ? {} : { cursor: 'pointer' }"
              @click.stop="changeStatus"
            />
          </a-form-item>
          <div slot="content" :style="{ width: '440px' }">
            <a-select
              showSearch
              :value="undefined"
              style="width: 100%"
              :placeholder="$t('请输入地址关键字进行搜索')"
              allowClear
              :filter-option="false"
              :not-found-content="fetching ? undefined : null"
              @search="searchAddress"
              @popupScroll="popupScroll"
              @change="
                (e) => {
                  if (!e) {
                    searchdata = []
                  }
                }
              "
            >
              <a-spin v-if="fetching" slot="notFoundContent" size="small" />
              <a-select-option
                v-for="search in searchdata"
                :key="search.number"
                :value="search.number"
                @click="setValue(search)"
              >
                {{ search.fullName }}
              </a-select-option>
            </a-select>
            <a-tabs v-model="activeKey" size="small" :animated="false">
              <a-tab-pane key="1" :tab="$t('省')">
                <div>
                  <a-row>
                    <a-col v-for="provinceItem in province" :key="provinceItem.number" :span="6">
                      <a-button
                        size="small"
                        style="cursor: pointer; border: none"
                        :type="provinceItem.number === provinceselect ? 'primary' : ''"
                        @click="
                          selectAddress('province', provinceItem.number, provinceItem.fullName, provinceItem.fullNumber)
                        "
                      >
                        {{ provinceItem.name }}
                      </a-button>
                    </a-col>
                  </a-row>
                </div>
              </a-tab-pane>
              <a-tab-pane v-if="series !== '1'" key="2" :tab="$t('市')">
                <a-row>
                  <a-col v-for="cityItem in city" :key="cityItem.number" :span="6">
                    <a-button
                      size="small"
                      style="cursor: pointer; border: none"
                      :type="cityItem.number === cityselect ? 'primary' : ''"
                      @click="selectAddress('city', cityItem.number, cityItem.fullName, cityItem.fullNumber)"
                    >
                      {{ cityItem.name }}
                    </a-button>
                  </a-col>
                </a-row>
              </a-tab-pane>
              <a-tab-pane v-if="series !== '1' && series !== '2'" key="3" :tab="$t('区')">
                <a-row>
                  <a-col v-for="areaItem in area" :key="areaItem.number" :span="6">
                    <a-button
                      size="small"
                      style="cursor: pointer; border: none"
                      :type="areaItem.number === areaselect ? 'primary' : ''"
                      @click="selectAddress('area', areaItem.number, areaItem.fullName, areaItem.fullNumber)"
                    >
                      {{ areaItem.name }}
                    </a-button>
                  </a-col>
                </a-row>
              </a-tab-pane>
              <a-tab-pane v-if="series !== '1' && series !== '2' && series !== '3'" key="4" :tab="$t('街道')">
                <a-row>
                  <a-col v-for="countyItem in county" :key="countyItem.number" :span="6">
                    <a-button
                      size="small"
                      style="cursor: pointer; border: none"
                      :type="countyItem.number === countyselect ? 'primary' : ''"
                      @click="selectAddress('county', countyItem.number, countyItem.fullName, countyItem.fullNumber)"
                    >
                      {{ countyItem.name }}
                    </a-button>
                  </a-col>
                </a-row>
              </a-tab-pane>
              <a-button slot="tabBarExtraContent" type="danger" ghost size="small" @click="resetClear">
                {{ $t('清除') }}
              </a-button>
            </a-tabs>
          </div>
        </a-popover>
      </a-form>
    </a-spin>
  </div>
</template>
<script>
import debounce from 'lodash/debounce'
export default {
  i18n: window.lang('admin'),
  props: {
    series: {
      type: String,
      default: () => '1'
    },
    fieldType: {
      type: String,
      default: () => ''
    },
    alias: {
      type: String,
      default: () => ''
    },
    fieldRule: {
      type: String,
      default: () => ''
    },
    size: {
      type: String,
      default: () => 'default'
    },
    value: {
      type: Array,
      default: () => []
    }
  },
  data () {
    this.searchAddress = debounce(this.searchAddress, 800)
    return {
      selectshow: false,
      loading: false,
      searchValue: '',
      styleGround: {},
      searchdata: [],
      checkNumber: '',
      lastFetchId: 0,
      fetching: false,
      scrollStats: true,
      page: {
        pageNo: 1,
        pageSize: 20,
        sortField: 'id',
        sortOrder: 'descend'
      },
      province: [],
      provinceselect: '',
      city: [],
      cityselect: '',
      area: [],
      areaselect: '',
      county: [],
      countyselect: '',
      address: '',
      activeKey: '1',
      form: this.$form.createForm(this)
    }
  },
  watch: {
    value: {
      handler (newValue) {
        if (newValue && newValue.length) {
          const obj = newValue[0]
          this.address = obj.fullName
          this.checkNumber = obj.number
        } else {
          this.resetClear()
        }
      },
      immediate: true
    }
  },
  created () {
    this.province = []
    this.provinceselect = ''
    this.city = []
    this.cityselect = ''
    this.area = []
    this.areaselect = ''
    this.county = []
    this.countyselect = ''
    this.activeKey = '1'
  },
  methods: {
    searchAddress (val) {
      this.searchValue = val
      this.page.pageNo = 1
      this.scrollStats = true
      if (val) {
        this.lastFetchId += 1
        const fetchId = this.lastFetchId
        this.fetching = true
        this.axios({
          url: '/admin/search/addressSearch',
          data: Object.assign(this.page, { series: this.series, searchName: val })
        }).then(res => {
          if (fetchId !== this.lastFetchId) {
            return
          }
          this.searchdata = res.result.data
          this.fetching = false
        })
      } else {
        this.searchdata = []
      }
    },
    getAddressScroll () {
      this.axios({
        url: '/admin/search/addressSearch',
        data: Object.assign(this.page, { series: this.series, searchName: this.searchValue })
      }).then(res => {
        if (!res.result.data.length) {
          this.scrollStats = false
        }
        this.searchdata = [...this.searchdata, ...res.result.data]
      })
    },
    popupScroll (e) {
      const scrollTop = e.target.scrollTop
      const scrollHeight = e.target.scrollHeight
      const clientHeight = e.target.clientHeight
      const scrollBottom = scrollHeight - clientHeight - scrollTop
      if (scrollBottom < 1 && this.scrollStats && this.searchValue) {
        this.page.pageNo++
        this.getAddressScroll()
      }
    },
    reset () {
      this.searchdata = []
    },
    resetClear () {
      this.address = ''
      this.checkNumber = ''
      this.activeKey = '1'
      this.provinceselect = ''
      this.city = []
      this.cityselect = ''
      this.area = []
      this.areaselect = ''
      this.county = []
      this.countyselect = ''
      this.$emit('send', '', '', this.alias)
    },
    setValue (search) {
      this.checkNumber = search.number
      this.address = search.fullName
      this.selectshow = false
      this.activeKey = '1'
      this.$emit('send', search.fullName, search.number, this.alias, search.fullNumber)
    },
    changeStatus () {
      this.selectshow = !this.selectshow
      this.changeActiveKey()
      if (this.activeKey === '1') {
        this.getAddress()
      }
    },
    changeActiveKey () {
      if (this.countyselect) {
        this.activeKey = '4'
      } else if (this.areaselect) {
        this.activeKey = '3'
      } else if (this.cityselect) {
        this.activeKey = '2'
      } else {
        this.activeKey = '1'
      }
    },
    getAddress () {
      this.axios({
        url: '/admin/address/getAddress',
        data: { number: this.checkNumber || null }
      }).then(res => {
        this.province = res.result
        this.city = []
        this.cityselect = ''
        if (this.checkNumber) {
          res.result.forEach(item => {
            if (item.children) {
              this.provinceselect = item.number
              this.checkNumber = item.number
              this.address = item.fullName
              if (this.series !== '1') {
                this.city = item.children
                this.area = []
                this.areaselect = ''
                item.children.forEach(cityItem => {
                  if (cityItem.children) {
                    this.cityselect = cityItem.number
                    this.checkNumber = cityItem.number
                    this.address = cityItem.fullName
                    if (this.series !== '2') {
                      this.area = cityItem.children
                      this.county = []
                      this.countyselect = ''
                      cityItem.children.forEach(areaItem => {
                        if (areaItem.children) {
                          this.areaselect = areaItem.number
                          this.checkNumber = areaItem.number
                          this.address = areaItem.fullName
                          if (this.series !== '3') {
                            this.county = areaItem.children
                            areaItem.children.forEach(countyitem => {
                              if (countyitem.parentNumber === this.checkNumber && this.value && this.value.length > 0 && this.value[0].number === countyitem.number) {
                                this.countyselect = countyitem.number
                                this.checkNumber = countyitem.number
                                this.address = countyitem.fullName
                              }
                            })
                          }
                        } else if (areaItem.number === this.checkNumber) {
                          this.areaselect = areaItem.number
                          this.address = areaItem.fullName
                          this.selectAddress('area', areaItem.number, areaItem.fullName, areaItem.fullNumber, 'check')
                        }
                      })
                    }
                  } else if (cityItem.number === this.checkNumber) {
                    this.cityselect = cityItem.number
                    this.address = cityItem.fullName
                    this.selectAddress('city', cityItem.number, cityItem.fullName, cityItem.fullNumber, 'check')
                  }
                })
              }
            } else if (item.number === this.checkNumber) {
              this.provinceselect = item.number
              this.address = item.fullName
              this.checkNumber = item.number
              this.selectAddress('province', item.number, item.fullName, item.fullNumber, 'check')
            }
          })
        }
        this.changeActiveKey()
      })
    },
    selectAddress (type, value, label, allValue, check) {
      if (type === 'province') {
        if (this.provinceselect === value && this.city.length !== 0) {
          this.activeKey = '2'
        } else {
          this.provinceselect = value
          this.checkNumber = value
          this.address = label
          this.$emit('send', label, value, this.alias, allValue)
          this.axios({
            url: '/admin/address/getAddressChildren',
            data: { parentNumber: value }
          }).then(res => {
            this.city = res.result
            this.cityselect = ''
            if (this.series !== '1' && res.result.length > 0) {
              this.activeKey = '2'
            } else if (!check) {
              this.selectshow = false
            }
            this.area = []
            this.areaselect = ''
            this.county = []
            this.countyselect = ''
          })
        }
      } else if (type === 'city') {
        if (this.cityselect === value && this.area.length !== 0) {
          this.activeKey = '3'
        } else {
          this.cityselect = value
          this.checkNumber = value
          this.address = label
          this.$emit('send', label, value, this.alias, allValue)
          this.axios({
            url: '/admin/address/getAddressChildren',
            data: { parentNumber: value }
          }).then(res => {
            this.area = res.result
            this.areaselect = ''
            if ((this.series === '2' || res.result.length === 0) && !check) {
              this.selectshow = false
            }
            if (res.result.length > 0) {
              this.activeKey = '3'
            }
            this.county = []
            this.countyselect = ''
          })
        }
      } else if (type === 'area') {
        if (this.areaselect === value && this.county.length !== 0) {
          this.activeKey = '4'
        } else {
          this.address = label
          this.areaselect = value
          this.checkNumber = value
          this.$emit('send', label, value, this.alias, allValue)
          this.axios({
            url: '/admin/address/getAddressChildren',
            data: { parentNumber: value }
          }).then(res => {
            this.county = res.result
            this.countyselect = ''
            if ((this.series === '3' || res.result.length === 0) && !check) {
              this.selectshow = false
            }
            if (res.result.length > 0 && this.series === '4') {
              this.activeKey = '4'
            }
          })
        }
      } else if (type === 'county') {
        this.address = label
        this.countyselect = value
        this.checkNumber = value
        this.$emit('send', label, value, this.alias, allValue)
        this.selectshow = false
      }
    }
  }
}
</script>
