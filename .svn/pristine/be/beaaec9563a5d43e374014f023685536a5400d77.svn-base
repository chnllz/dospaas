<template>
  <div class="page">
    <a-spin :spinning="loading">
      <a-tabs v-model="currentTab" :animated="false" @change="handleTabChange">
        <a-tab-pane v-for="parentItem in tabList" :key="parentItem.key" :tab="parentItem.title">
          <a-form :labelCol="{ span: 6 }" :wrapperCol="{ span: 18 }" class="search">
            <a-card size="small" :title="$t('搜索')">
              <a-space slot="extra">
                <a-button htmlType="submit" @click="getDataList">{{ $t('搜索') }}</a-button>
                <a-button @click="reset">{{ $t('重置') }}</a-button>
              </a-space>
              <a-row class="form" :class="advanced ? 'advanced' : 'normal'">
                <a-col :span="6">
                  <a-form-item :label="$t('会话开始时间')">
                    <a-range-picker
                      v-if="['day', 'time'].includes(parentItem.key)"
                      v-model="showObj['sessionTime' + parentItem.key]"
                      :allowClear="false"
                      :disabled-date="disabledDate"
                      :ranges="{
                        [$t('昨天')]: [
                          moment().startOf('day').subtract('day', 1),
                          moment().endOf('day').subtract('day', 1)
                        ],
                        [$t('本周')]: [moment().startOf('week'), moment().endOf('week')],
                        [$t('最近七天')]: [moment().subtract(7, 'days'), moment()],
                        [$t('本月')]: [moment().startOf('month'), moment().endOf('month')],
                        [$t('最近31天')]: [moment().subtract(31, 'days'), moment()]
                      }"
                      format="YYYY-MM-DD"
                      style="width: 100%"
                      @change="getInputTime"
                      @openChange="onOpenChange"
                      @calendarChange="onCalendarChange"
                    />
                    <a-range-picker
                      v-else-if="parentItem.key == 'month'"
                      v-model="showObj['sessionTime' + parentItem.key]"
                      style="width: 100%"
                      :allowClear="false"
                      format="YYYY-MM"
                      :ranges="{
                        [$t('本月')]: [moment().startOf('month'), moment().endOf('month')],
                        [$t('上个月')]: [
                          moment().startOf('month').subtract('month', 1),
                          moment().endOf('month').subtract('month', 1)
                        ],
                        [$t('最近3个月')]: [moment().subtract(2, 'month'), moment()]
                      }"
                      :mode="modeMonth"
                      :open="openMonth"
                      @change="
                        (date, dateString) => {
                          queryParam.startTime = dateString[0] + '-01'
                          queryParam.endTime = dateString[1] + '-01'
                        }
                      "
                      @openChange="openMonthChange"
                      @panelChange="handlePanelChange"
                    />
                  </a-form-item>
                </a-col>
                <a-col :span="6">
                  <a-form-item :label="$t('部门')">
                    <a-tree-select
                      v-model="showObj['department' + parentItem.key]"
                      :dropdown-style="{ maxHeight: '400px', overflow: 'auto' }"
                      allowClear
                      multiple
                      :replaceFields="{
                        value: 'departmentId',
                        title: 'name'
                      }"
                      style="width: 100%"
                      :tree-data="treeData"
                    />
                  </a-form-item>
                </a-col>
              </a-row>
            </a-card>
          </a-form>
          <a-row type="flex" justify="space-between" align="middle" style="margin-bottom: 8px">
            <a-col>
              <a-space>
                <a-button v-action:export icon="download" @click="handleExport">{{ $t('导出') }}</a-button>
              </a-space>
            </a-col>
            <a-col>
              <a-popover placement="left">
                <template slot="content">
                  <div v-dompurify-html="content" style="width: 300px"></div>
                </template>
                <a-icon type="question-circle" style="font-size: 16px" />
              </a-popover>
            </a-col>
          </a-row>
          <a-table
            ref="table"
            :scroll="{ x: true, y: windowHeight - 370 }"
            class="table-fill"
            size="small"
            rowKey="serviceId"
            :columns="columns"
            :dataSource="showTable['dataList' + parentItem.key]"
            :pagination="false"
          ></a-table>
        </a-tab-pane>
      </a-tabs>
      <general-export ref="generalExport" />
    </a-spin>
  </div>
</template>
<script>
export default {
  i18n: window.lang('chat'),
  components: {
    GeneralExport: () => import('@/views/admin/Table/GeneralExport')
  },
  data () {
    return {
      loading: false,
      // 搜索栏显示参数
      showObj: {
        sessionTimeday: [this.moment().startOf('day').subtract('day', 1), this.moment().endOf('day').subtract('day', 1)],
        sessionTimemonth: [this.moment().startOf('month'), this.moment().startOf('month')],
        departmentday: undefined,
        departmentmonth: undefined
      },
      // 表格数据对象
      showTable: {},
      showApi: {
        dayIs: false,
        monthIs: false,
        timeIs: false
      },
      windowHeight: document.documentElement.clientHeight,
      treeData: [],
      sessionTime: [this.moment().startOf('day').subtract('day', 1), this.moment().endOf('day').subtract('day', 1)],
      openMonth: false,
      modeMonth: ['month', 'month'],
      currentTab: 'day',
      tabList: [{
        title: this.$t('部门绩效-按天'),
        key: 'day'
      }, {
        title: this.$t('部门绩效-按月'),
        key: 'month'
      }],
      content: `${this.$t('人工接通量：访客被客服接起的数量。')}<br />
                ${this.$t('20秒接通量：访客接入在线客服系统后，20秒内被人工客服接起的数量。')}<br />
                ${this.$t('20秒接通率：20秒接通量/请求人工数*100%。')}<br />
                ${this.$t('30秒接通量：访客接入在线客服系统后，30秒内被人工客服接起的数量。')}<br />
                ${this.$t('30秒接通率：30秒接通量/请求人工数*100%。')}<br />
                ${this.$t('会话总时长：客服接待访客的会话总时长。')}<br />
                ${this.$t('平均会话时长：会话总时长/人工接通量。')}<br />
                ${this.$t('同时服务人数：会话总时长/工作时长。')}<br />
                ${this.$t('登录时长：客服处于“登录”状态的时长。')}<br />
                ${this.$t('工作时长：客服处于接待访客的时长(无论客服是否处于”就绪“状态)。')}`,
      advanced: false,
      selectCurrentDate: null,
      queryParam: {
        sortField: 'serviceId',
        sortOrder: 'descend',
        startTime: this.moment().startOf('day').subtract('day', 1).format('YYYY-MM-DD'),
        endTime: this.moment().endOf('day').subtract('day', 1).format('YYYY-MM-DD')
      },
      columns: [{
        title: '#',
        width: 40,
        customRender: (text, record, index) => {
          return index + 1
        }
      }, {
        title: this.$t('客服名称'),
        dataIndex: 'serviceName',
        ellipsis: false,
        sorter: (a, b) => a.serviceName === '合计' ? 0 : a.serviceName.length - b.serviceName.length,
        customRender: (text, record) => {
          if (text !== '合计') {
            return record.serviceId ? `${record.serviceId}(${text})` : (text || '--')
          } else {
            return text
          }
        },
        width: 150
      }, {
        title: this.$t('人工接通量'),
        dataIndex: 'accessNumber',
        width: 150,
        sorter: (a, b) => a.serviceName === '合计' ? 0 : a.accessNumber - b.accessNumber
      }, {
        title: this.$t('20秒接通量'),
        dataIndex: 'twentyConnectedNumber',
        width: 150,
        sorter: (a, b) => a.serviceName === '合计' ? 0 : a.twentyConnectedNumber - b.twentyConnectedNumber
      }, {
        title: this.$t('20秒接通率'),
        dataIndex: 'twentyConnectedRate',
        width: 150,
        sorter: (a, b) => a.serviceName === '合计' ? 0 : Number(a.twentyConnectedRate.substring(0, a.twentyConnectedRate.indexOf('.') + 3)) - Number(b.twentyConnectedRate.substring(0, b.twentyConnectedRate.indexOf('.') + 3))
      }, {
        title: this.$t('30秒接通量'),
        dataIndex: 'thirtyConnectedNumber',
        width: 150,
        sorter: (a, b) => a.serviceName === '合计' ? 0 : a.thirtyConnectedNumber - b.thirtyConnectedNumber
      }, {
        title: this.$t('30秒接通率'),
        dataIndex: 'thirtyConnectedRate',
        width: 150,
        sorter: (a, b) => a.serviceName === '合计' ? 0 : Number(a.thirtyConnectedRate.substring(0, a.thirtyConnectedRate.indexOf('.') + 3)) - Number(b.thirtyConnectedRate.substring(0, b.thirtyConnectedRate.indexOf('.') + 3))
      }, {
        title: this.$t('会话总时长'),
        dataIndex: 'dialogueTime',
        width: 150,
        sorter: (a, b) => a.serviceName === '合计' ? 0 : a.dialogueTime - b.dialogueTime,
        customRender: (text) => {
          let sec = parseInt(text)
          let min = 0
          let hour = 0
          if (sec > 59) {
            min = parseInt(sec / 60)
            sec = parseInt(sec % 60)
            if (min > 59) {
              hour = parseInt(min / 60)
              min = parseInt(min % 60)
            }
          }
          const result = `${parseInt(hour) < 10 ? '0' + parseInt(hour) : parseInt(hour)}:${parseInt(min) < 10 ? '0' + parseInt(min) : parseInt(min)}:${parseInt(sec) < 10 ? '0' + parseInt(sec) : parseInt(sec)}`
          return result
        }
      }, {
        title: this.$t('平均会话时长'),
        dataIndex: 'averageDialogueTime',
        width: 150,
        sorter: (a, b) => a.serviceName === '合计' ? 0 : a.averageDialogueTime - b.averageDialogueTime,
        customRender: (text) => {
          let sec = parseInt(text)
          let min = 0
          let hour = 0
          if (sec > 59) {
            min = parseInt(sec / 60)
            sec = parseInt(sec % 60)
            if (min > 59) {
              hour = parseInt(min / 60)
              min = parseInt(min % 60)
            }
          }
          const result = `${parseInt(hour) < 10 ? '0' + parseInt(hour) : parseInt(hour)}:${parseInt(min) < 10 ? '0' + parseInt(min) : parseInt(min)}:${parseInt(sec) < 10 ? '0' + parseInt(sec) : parseInt(sec)}`
          return result
        }
      }, {
        title: this.$t('同时服务人数'),
        dataIndex: 'meanwhileServiceNumber',
        width: 150,
        sorter: (a, b) => a.serviceName === '合计' ? 0 : a.meanwhileServiceNumber - b.meanwhileServiceNumber
      }, {
        title: this.$t('登录时长'),
        dataIndex: 'loginTime',
        width: 100,
        sorter: (a, b) => a.serviceName === '合计' ? 0 : a.loginTime - b.loginTime,
        customRender: (text) => {
          let sec = parseInt(text)
          let min = 0
          let hour = 0
          if (sec > 59) {
            min = parseInt(sec / 60)
            sec = parseInt(sec % 60)
            if (min > 59) {
              hour = parseInt(min / 60)
              min = parseInt(min % 60)
            }
          }
          const result = `${parseInt(hour) < 10 ? '0' + parseInt(hour) : parseInt(hour)}:${parseInt(min) < 10 ? '0' + parseInt(min) : parseInt(min)}:${parseInt(sec) < 10 ? '0' + parseInt(sec) : parseInt(sec)}`
          return result
        }
      }, {
        title: this.$t('工作时长'),
        dataIndex: 'workTime',
        width: 100,
        sorter: (a, b) => a.serviceName === '合计' ? 0 : a.workTime - b.workTime,
        customRender: (text) => {
          let sec = parseInt(text)
          let min = 0
          let hour = 0
          if (sec > 59) {
            min = parseInt(sec / 60)
            sec = parseInt(sec % 60)
            if (min > 59) {
              hour = parseInt(min / 60)
              min = parseInt(min % 60)
            }
          }
          const result = `${parseInt(hour) < 10 ? '0' + parseInt(hour) : parseInt(hour)}:${parseInt(min) < 10 ? '0' + parseInt(min) : parseInt(min)}:${parseInt(sec) < 10 ? '0' + parseInt(sec) : parseInt(sec)}`
          return result
        }
      }],
      sorter: { field: 'serviceId', order: 'descend' },
      disabledCurrent: null
    }
  },
  mounted () {
    window.onresize = () => {
      return (() => {
        window.fullHeight = document.documentElement.clientHeight
        this.windowHeight = window.fullHeight
      })()
    }
    this.axios({
      url: '/crm/pbxx/getDepartmentList'
    }).then(res => {
      this.treeData = res.result.data
    })
    this.getDataList()
  },
  methods: {
    getDataList () {
      this.queryParam.tab = this.currentTab
      this.queryParam.department = this.showObj['department' + this.currentTab]
      this.loading = true
      this.axios({
        url: '/chat/customerReport/getDepartmentPerformanceInit',
        data: this.queryParam
      }).then(res => {
        this.loading = false
        if (res.code !== 0) {
          this.$message.error(res.message)
          return
        }
        this.showTable['dataList' + this.currentTab] = res.result.data
        if (res.result?.data?.length) {
          const obj = { ...res.result.total, ...{ serviceId: parseInt(Math.random() * (10000000 - 100000 + 1) + 100000, 10), serviceName: this.$t('合计') } }
          this.showTable['dataList' + this.currentTab].push(obj)
        }
        this.$forceUpdate()
      })
    },
    handleTabChange (activeKey) {
      this.currentTab = activeKey
      this.queryParam.startTime = this.showObj['sessionTime' + this.currentTab][0].format('YYYY-MM-DD')
      this.queryParam.endTime = this.showObj['sessionTime' + this.currentTab][1].format('YYYY-MM-DD')
      if (activeKey === 'month' && !this.showApi.monthIs) {
        this.getDataList()
        this.showApi.monthIs = true
      }
    },
    // 重置
    reset () {
      this.showObj['department' + this.currentTab] = undefined
      const startDayTime = this.moment().startOf('day').subtract('day', 1).format('YYYY-MM-DD')
      const startMonth = this.moment().startOf('month').format('YYYY-MM-DD')
      const endDayTime = this.moment().endOf('day').subtract('day', 1).format('YYYY-MM-DD')
      this.queryParam = {
        sortField: 'serviceId',
        sortOrder: 'descend',
        startTime: ['day'].includes(this.currentTab) ? startDayTime : startMonth,
        endTime: ['day'].includes(this.currentTab) ? endDayTime : startMonth,
        tab: this.currentTab
      }
      const day = [this.moment().startOf('day').subtract('day', 1), this.moment().endOf('day').subtract('day', 1)]
      const month = [this.moment().startOf('month'), this.moment().startOf('month')]
      this.showObj['sessionTime' + this.currentTab] = ['day'].includes(this.currentTab) ? day : this.currentTab === 'month' ? month : ''
      this.getDataList()
    },
    onOpenChange (status) {
      // 清空禁用时间段的设置
      this.disabledCurrent = null
    },
    onCalendarChange (dates) {
      // 获取手动选择的时间段起始值
      this.disabledCurrent = dates[0]
    },
    disabledDate (current, date) {
      if (!this.disabledCurrent) return false
      return (current && current < this.moment(this.disabledCurrent).subtract(31, 'days').endOf('day')) || current > this.moment(this.disabledCurrent).add(30, 'days').endOf('day')
    },
    getInputTime (date, dateString) {
      this.queryParam.startTime = dateString[0]
      this.queryParam.endTime = dateString[1]
    },
    // 控制月份中改变的设置
    openMonthChange (status) {
      // 清空禁用时间段的设置
      this.disabledCurrent = null
      this.openMonth = status
    },
    handlePanelChange (value, mode) {
      const chooseTime = value
      this.modeMonth = [
        mode[0] === 'date' ? 'month' : mode[0],
        mode[1] === 'date' ? 'month' : mode[1]
      ]
      if (mode[0] === 'date') {
        this.disabledCurrent = value[0]
      } else {
        this.disabledCurrent = null
      }
      if (mode[1] === 'date') {
        this.openMonth = false
        const time = value[1].diff(value[0], 'month')
        if (time > 11) {
          chooseTime[0] = this.moment(value[1]).subtract(11, 'M').startOf('day')
        }
      }
      this.queryParam.startTime = chooseTime[0].format('YYYY-MM-DD')
      this.queryParam.endTime = chooseTime[1].format('YYYY-MM-DD')
      this.showObj['sessionTime' + this.currentTab] = chooseTime
    },
    calendarChange (date, dateString) {
      if (date.length <= 1) {
        this.selectCurrentDate = date[0]
      } else {
        this.selectCurrentDate = null
      }
    },
    handleExport () {
      this.$refs.generalExport.show({
        title: this.$t('导出'),
        number: 'SysDepartmentPerformanceInit',
        className: 'ExportChatStatsTask',
        parameter: {
          condition: {
            req: this.queryParam,
            type: 'departmentPerformanceInit'
          }
        }
      })
    }
  }
}
</script>
