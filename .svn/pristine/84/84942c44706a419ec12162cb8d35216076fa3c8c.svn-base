<template>
  <div class="page">
    <a-form layout="inline" style="display: flex; align-item: center">
      <a-form-item :label="$t('关键字')">
        <a-input v-model="queryParam.key" :placeholder="$t('请输入字典编号或字典名称')" />
      </a-form-item>
      <a-space>
        <a-button htmlType="submit" type="primary" @click="$refs.table.refresh(true)">{{ $t('搜索') }}</a-button>
        <a-button
          @click="
            () => {
              queryParam = {}
              $refs.table.refresh(true)
            }
          "
        >
          {{ $t('重置') }}
        </a-button>
        <a-button v-action:add type="primary" icon="plus" @click="handleAdd">{{ $t('添加') }}</a-button>
      </a-space>
    </a-form>
    <s-table
      ref="table"
      :scroll="{ y: true }"
      class="table-fill"
      size="small"
      rowKey="id"
      :columns="columns"
      :data="loadDataTable"
      :sorter="sorter"
    >
      <span slot="name" slot-scope="text, record">
        {{ text + (record.subCount > 0 ? '(' + record.subCount + ')' : '') }}
      </span>
      <span slot="dictType" slot-scope="text">
        {{ dictType[text] }}
      </span>
      <span slot="status" slot-scope="text">
        <a-badge v-if="text == 1" status="success" :text="$t('启用')" />
        <a-badge v-else status="error" :text="$t('禁用')" />
      </span>
      <div slot="action" slot-scope="text, record">
        <a :disabled="record.dictType !== 'basic' || record.accessLevel === 2" @click="handleList(record)">
          {{ $t('设计') }}
        </a>
        <a-divider type="vertical" />
        <a :disabled="record.accessLevel === 2" @click="handleEdit(record)">{{ $t('编辑') }}</a>
        <a-divider type="vertical" />
        <a :disabled="!$auth('delete') || !!record.accessLevel" @click="handleDelete(record)">{{ $t('删除') }}</a>
        <a-divider type="vertical" />
        <a :disabled="record.dictType !== 'basic'" @click="handleExport(record)">{{ $t('导出') }}</a>
      </div>
    </s-table>
    <dict-category-form ref="dictCategoryForm" @ok="handleOk" />
    <dict-list ref="dictList" @ok="handleOk" />
    <dict-import ref="dictImport" @ok="handleOk" />
    <drag-sort ref="dragSort" @ok="handleOk" />
    <general-export ref="generalExport" />
  </div>
</template>
<script>
export default {
  i18n: window.lang('admin'),
  components: {
    dictCategoryForm: () => import('./DictCategoryForm'),
    DictList: () => import('./DictList'),
    DictImport: () => import('./DictImport'),
    DragSort: () => import('@/views/admin/Common/DragSort'),
    GeneralExport: () => import('@/views/admin/Table/GeneralExport')
  },
  data () {
    return {
      // 当前字典路径
      breadcrumb: [],
      // 搜索参数
      queryParam: {},
      // 表头
      columns: [{
        title: this.$t('操作'),
        dataIndex: 'action',
        width: 200,
        align: 'center',
        scopedSlots: { customRender: 'action' }
      }, {
        title: 'ID',
        dataIndex: 'id',
        sorter: true,
        width: 80
      }, {
        title: this.$t('字典编号'),
        dataIndex: 'dictCategoryNumber',
        sorter: true,
        width: 300
      }, {
        title: this.$t('字典名称'),
        dataIndex: 'dictCategoryName',
        sorter: true,
        scopedSlots: { customRender: 'name' }
      }, {
        title: this.$t('字典类型'),
        dataIndex: 'dictType',
        sorter: true,
        scopedSlots: { customRender: 'dictType' }
      }, {
        title: this.$t('字典分类'),
        dataIndex: 'category',
        sorter: true
      }, {
        title: this.$t('备注'),
        sorter: true,
        dataIndex: 'remarks'
      }, {
        title: this.$t('最后修改人'),
        dataIndex: 'updateUser',
        sorter: true,
        width: 150
      }, {
        title: this.$t('最后修改时间'),
        dataIndex: 'updateTime',
        sorter: true,
        width: 150
      }],
      sorter: { field: 'id', order: 'descend' },
      dictType: {
        basic: this.$t('基础'),
        table: this.$t('数据表'),
        sql: 'SQL',
        callback: this.$t('自定义')
      }
    }
  },
  methods: {
    loadDataTable (parameter) {
      return this.axios({
        url: '/admin/dict/initCategory',
        data: Object.assign(parameter, this.queryParam, { dictMode: 1 })
      }).then(res => {
        return res.result
      })
    },
    handleExport (record) {
      this.$refs.generalExport.show({
        title: this.$t('导出'),
        className: 'exportDict',
        message: `${this.$t('导出字典')}: ${record.dictCategoryName}`
      })
    },
    handleAdd () {
      this.$refs.dictCategoryForm.show({
        action: 'add',
        title: this.$t('添加'),
        url: '/admin/dict/addCategory',
        record: { dictMode: 1 },
        breadcrumb: []
      })
    },
    handleEdit (record) {
      this.$refs.dictCategoryForm.show({
        action: 'edit',
        title: `${this.$t('编辑')}：${record.dictCategoryName}`,
        url: '/admin/dict/editCategory',
        record: record,
        breadcrumb: this.breadcrumb
      })
    },
    handleDelete (record) {
      const table = this.$refs.table
      const self = this
      this.$confirm({
        title: this.$t('您确认要删除该字典及其子字典吗？'),
        onOk () {
          self.axios({
            url: '/admin/dict/deleteCategory',
            data: { id: record.id }
          }).then(res => {
            table.refresh()
          })
        }
      })
    },
    handleOk () {
      this.$refs.table.refresh()
    },
    // 排序
    handleSort () {
      this.$refs.dragSort.show({
        tableName: 'admin_dict_category',
        sortName: 'dictCategoryName',
        where: `dictMode = 1`
      })
    },
    // 设计
    handleList (record) {
      this.$refs.dictList.show({
        action: 'list',
        title: `${this.$t('设计')}：${record.dictCategoryName}`,
        record: record,
        type: 'son'
      })
    }
  }
}
</script>
<style lang="less" scoped>
/deep/.ant-spin-container {
  display: flex;
  flex-direction: column;
}
</style>
