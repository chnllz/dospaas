<template>
  <div>
    <a-card size="small" :bordered="false">
      <div class="table-operator">
        <a-button v-action:add icon="plus" @click="handleAdd">{{ $t('添加') }}</a-button>
      </div>
      <a-table
        ref="table"
        size="small"
        rowKey="id"
        :columns="columns"
        :dataSource="slaDataArr"
        :pagination="false"
        :sorter="{ field: 'id', order: 'descend' }"
      >
        <div slot="action" slot-scope="text, record, index">
          <a @click="handleEdit(record, index)">{{ $t('编辑') }}</a>
          <a-divider type="vertical" />
          <a-popconfirm
            :title="$t('您确定要删除该记录吗?')"
            :ok-text="$t('确定')"
            :cancel-text="$t('取消')"
            @confirm="handleDelete(index)"
          >
            <a>{{ $t('删除') }}</a>
          </a-popconfirm>
        </div>
        <div slot="sort" slot-scope="text, record, index">
          <span>{{ index + 1 }}</span>
        </div>
        <div slot="executionTime" slot-scope="text">
          <span v-if="text === 'flowtimeCome'">
            {{ workflowtype === 'work' ? $t('流程') : '变迁' }}{{ $t('时限到达时') }}
          </span>
          <span v-else-if="text === 'flowtimeBefore'">
            {{ workflowtype === 'work' ? $t('流程') : $t('变迁') }}{{ $t('时限到达前') }}
          </span>
          <span v-else-if="text === 'flowtimeAfter'">
            {{ workflowtype === 'work' ? $t('流程') : $t('变迁') }}{{ $t('时限到达后') }}
          </span>
          <span v-else-if="text === 'flowwarnCome'">
            {{ workflowtype === 'work' ? $t('流程') : $t('变迁') }}{{ $t('预警时') }}
          </span>
          <span v-else-if="text === 'flowseriousCome'">
            {{ workflowtype === 'work' ? $t('流程') : $t('变迁') }}{{ $t('超时时') }}
          </span>
          <span v-else-if="text === 'flowurgeTimes'">
            {{ workflowtype === 'work' ? $t('流程') : $t('变迁') }}{{ $t('催办次数') }}
          </span>
          <span v-else-if="text === 'flowcomeStart'">{{ $t('变迁启动后') }}</span>
        </div>
        <div slot="runaction" slot-scope="text, record">
          <span>
            {{ record.customJump === '1' ? $t('自定义跳转') : '' }}
            {{ record.autoHandle === '1' ? $t('自动办理') : '' }} {{ record.sendNotice === '1' ? $t('发送通知') : '' }}
            {{ record.customHandle === '1' ? $t('自定义动作') : '' }}
          </span>
        </div>
      </a-table>
    </a-card>
    <a-drawer :destroyOnClose="true" :title="config.title" :width="1200" :visible="visible" @close="visible = !visible">
      <a-spin :spinning="loading">
        <div>
          <a-form :form="form">
            <a-form-item :label="$t('SLA名称')" :labelCol="labelCol" :wrapperCol="wrapperCol">
              <a-input
                v-decorator="[
                  'info[name]',
                  {
                    initialValue: config.data && config.data.name ? config.data.name : '',
                    rules: [{ required: true, message: $t('请输入SLA名称') }]
                  }
                ]"
              />
            </a-form-item>
            <a-form-item :label="$t('SLA描述')" :labelCol="labelCol" :wrapperCol="wrapperCol">
              <a-textarea
                v-decorator="[
                  'info[describe]',
                  { initialValue: config.data && config.data.describe ? config.data.describe : '' }
                ]"
                :auto-size="{ minRows: 3, maxRows: 5 }"
              />
            </a-form-item>
            <a-form-item :label="$t('执行时机')" :labelCol="labelCol" :wrapperCol="wrapperCol">
              <a-row :gutter="10">
                <a-col :span="6">
                  <a-select
                    v-decorator="[
                      'info[executionTime]',
                      {
                        initialValue: config.data && config.data.executionTime ? config.data.executionTime : '',
                        rules: [{ required: true, message: $t('请选择执行时机') }]
                      }
                    ]"
                    @change="
                      (e) => {
                        $set(config.data, 'executionTime', e)
                      }
                    "
                  >
                    <a-select-option value="flowtimeCome">
                      {{ workflowtype === 'work' ? $t('流程') : $t('变迁') }}{{ $t('时限到达时') }}
                    </a-select-option>
                    <a-select-option value="flowtimeBefore">
                      {{ workflowtype === 'work' ? $t('流程') : $t('变迁') }}{{ $t('时限到达前') }}
                    </a-select-option>
                    <a-select-option value="flowtimeAfter">
                      {{ workflowtype === 'work' ? $t('流程') : $t('变迁') }}{{ $t('时限到达后') }}
                    </a-select-option>
                    <a-select-option value="flowwarnCome">
                      {{ workflowtype === 'work' ? $t('流程') : $t('变迁') }}{{ $t('预警时') }}
                    </a-select-option>
                    <a-select-option value="flowseriousCome">
                      {{ workflowtype === 'work' ? $t('流程') : $t('变迁') }}{{ $t('超时时') }}
                    </a-select-option>
                    <a-select-option value="flowurgeTimes">
                      {{ workflowtype === 'work' ? $t('流程') : $t('变迁') }}{{ $t('催办次数') }}
                    </a-select-option>
                    <a-select-option v-if="workflowtype === 'flow'" value="flowcomeStart">
                      {{ $t('变迁启动后') }}
                    </a-select-option>
                  </a-select>
                </a-col>
                <a-col :span="18">
                  <div v-if="config.data && config.data.executionTime === 'flowtimeBefore'">
                    <a-input-number v-model="executionTimeSetting.flowtimeBeforeDay" :min="0" />
                    <span style="padding: 0 5px 0 5px">{{ $t('天') }}</span>
                    <a-input-number v-model="executionTimeSetting.flowtimeBeforeHour" :min="0" :max="23" />
                    <span style="padding: 0 5px 0 5px">{{ $t('小时') }}</span>
                    <a-input-number v-model="executionTimeSetting.flowtimeBeforeMinute" :min="0" :max="59" />
                    <span style="padding-left: 5px">{{ $t('分钟') }}</span>
                  </div>
                  <div v-if="config.data && config.data.executionTime === 'flowtimeAfter'">
                    <a-input-number v-model="executionTimeSetting.flowtimeAfterDay" :min="0" />
                    <span style="padding: 0 5px 0 5px">{{ $t('天') }}</span>
                    <a-input-number v-model="executionTimeSetting.flowtimeAfterHour" :min="0" :max="23" />
                    <span style="padding: 0 5px 0 5px">{{ $t('小时') }}</span>
                    <a-input-number v-model="executionTimeSetting.flowtimeAfterMinute" :min="0" :max="59" />
                    <span style="padding-left: 5px">{{ $t('分钟') }}</span>
                  </div>
                  <div v-if="config.data && config.data.executionTime === 'flowurgeTimes'">
                    <a-row :gutter="10">
                      <a-col :span="4">
                        <a-select v-model="executionTimeSetting.urgeSymbol">
                          <a-select-option value="eq">{{ $t('等于') }}</a-select-option>
                          <a-select-option value="ge">{{ $t('大于等于') }}</a-select-option>
                        </a-select>
                      </a-col>
                      <a-col :span="12"><a-input-number v-model="executionTimeSetting.urgeTimes" :min="0" /></a-col>
                    </a-row>
                  </div>
                </a-col>
              </a-row>
            </a-form-item>
            <a-form-item :label="$t('执行条件')" :labelCol="labelCol" :wrapperCol="wrapperCol">
              <a-card size="small">
                <a-row type="flex" align="middle">
                  <a-col :span="22">
                    <a-row
                      v-for="(simpleItem, simpleIndex) in conditionVisual"
                      :key="simpleIndex"
                      type="flex"
                      align="middle"
                      :gutter="10"
                      style="padding: 5px 0"
                    >
                      <a-col :span="4">
                        <a-select
                          v-model="simpleItem.type"
                          size="small"
                          @change="
                            (value) => {
                              if (value === 'field') {
                                simpleItem.condition = [
                                  {
                                    include: '',
                                    value: ''
                                  }
                                ]
                              } else if (
                                value === 'currentUser' ||
                                value === 'currentDepartment' ||
                                value === 'currentRole'
                              ) {
                                $set(simpleItem, 'include', 'bl')
                                simpleItem.condition = [
                                  {
                                    include: '',
                                    value: []
                                  }
                                ]
                              }
                            }
                          "
                        >
                          <a-select-option value="notSet">{{ $t('无条件') }}</a-select-option>
                          <a-select-option value="field">{{ $t('字段') }}</a-select-option>
                          <a-select-option value="currentUser">{{ $t('创建人') }}</a-select-option>
                          <a-select-option value="currentDepartment">{{ $t('创建人部门') }}</a-select-option>
                          <a-select-option value="currentRole">{{ $t('创建人角色') }}</a-select-option>
                          <a-select-option value="urgeTimes">
                            {{ workflowtype === 'work' ? $t('流程') : $t('变迁') }}{{ $t('催办次数') }}
                          </a-select-option>
                          <a-select-option v-if="workflowtype === 'flow'" value="transitionFrom">
                            {{ $t('来自于变迁') }}
                          </a-select-option>
                          <a-select-option value="custom">{{ $t('自定义') }}</a-select-option>
                        </a-select>
                      </a-col>
                      <a-col v-if="simpleItem.type === 'custom'" :span="18">
                        <a-row type="flex" align="middle">
                          <a-col :span="24">
                            <querier-codemirror-input
                              ref="querierCodemirrorInput"
                              :params.sync="simpleItem.customCode"
                            />
                          </a-col>
                          <div
                            style="position: absolute; right: 15px; cursor: pointer; z-index: 10"
                            size="small"
                            @click="
                              $refs['customCodemirrors' + simpleIndex][0].show({
                                title: $t('公式编辑器'),
                                item: simpleItem,
                                tableId: condition.tableId
                              })
                            "
                          >
                            fx
                          </div>
                          <custom-codemirror
                            :ref="'customCodemirrors' + simpleIndex"
                            @ok="
                              (val) => {
                                $set(simpleItem, 'customCode', val)
                              }
                            "
                          />
                        </a-row>
                      </a-col>
                      <a-col v-if="simpleItem.type === 'notSet'" :span="18"></a-col>
                      <a-col v-if="simpleItem.type === 'urgeTimes' || simpleItem.type === 'transitionFrom'" :span="18">
                        <div v-if="simpleItem.type === 'transitionFrom'">
                          <a-row type="flex" align="middle">
                            <a-col flex="auto">
                              <a-row
                                v-for="(includeItem, includeIndex) in simpleItem.condition"
                                :key="includeIndex"
                                :gutter="[8, 8]"
                                type="flex"
                                align="middle"
                              >
                                <a-col :span="12">
                                  <a-select
                                    v-model="includeItem.transitionFromVal"
                                    style="width: 100%"
                                    :placeholder="$t('请选择变迁')"
                                    size="small"
                                    @change="
                                      (e) => {
                                        includeItem.transitionFromWay = undefined
                                        for (const i in allWayData) {
                                          if (i.includes(e)) {
                                            includeItem.showWay = allWayData[i]
                                          }
                                        }
                                      }
                                    "
                                  >
                                    <a-select-option
                                      v-for="value in transition"
                                      :key="value.cc"
                                      :value="value.transitionId"
                                    >
                                      {{ value.transitionName }}
                                    </a-select-option>
                                  </a-select>
                                </a-col>
                                <a-col flex="70px">{{ $t('办理方式 :') }}</a-col>
                                <a-col flex="auto">
                                  <a-select
                                    v-model="includeItem.transitionFromWay"
                                    style="width: 100%"
                                    allowClear
                                    :placeholder="$t('请选择办理方式')"
                                    size="small"
                                    @change="
                                      (e) => {
                                        $forceUpdate()
                                      }
                                    "
                                  >
                                    <a-select-option
                                      v-for="value in includeItem.showWay"
                                      :key="value.alias"
                                      :value="value.alias"
                                    >
                                      {{ value.way }}
                                    </a-select-option>
                                  </a-select>
                                </a-col>
                                <a-col flex="70px" style="display: flex; align-items: center">
                                  <a-icon
                                    :style="{ fontSize: '24px', color: '#52c41a' }"
                                    type="plus-square"
                                    theme="filled"
                                    @click="
                                      simpleItem.type === 'field'
                                        ? simpleItem.condition.splice(includeIndex + 1, 0, {
                                            include: '',
                                            value: undefined
                                          })
                                        : simpleItem.condition.splice(includeIndex + 1, 0, { include: '', value: [] })
                                    "
                                  />
                                  <a-icon
                                    :style="{
                                      fontSize: '24px',
                                      color: simpleItem.condition.length === 1 ? '#bfbfbf' : '#ff4d4f',
                                      'padding-left': '8px'
                                    }"
                                    type="minus-square"
                                    theme="filled"
                                    @click="
                                      simpleItem.condition.length === 1
                                        ? ''
                                        : simpleItem.condition.splice(includeIndex, 1)
                                    "
                                  />
                                </a-col>
                              </a-row>
                            </a-col>
                            <a-col flex="80px">
                              <a-select v-model="simpleItem.logic" style="width: 100%" size="small">
                                <a-select-option value="and">{{ $t('且(and)') }}</a-select-option>
                                <a-select-option value="or">{{ $t('或(or)') }}</a-select-option>
                              </a-select>
                            </a-col>
                          </a-row>
                        </div>
                        <div v-else-if="simpleItem.type === 'urgeTimes'">
                          <a-row :gutter="10">
                            <a-col :span="4">
                              <a-select v-model="simpleItem.urgeSymbol" size="small">
                                <a-select-option value="eq">{{ $t('等于') }}</a-select-option>
                                <a-select-option value="ge">{{ $t('大于等于') }}</a-select-option>
                              </a-select>
                            </a-col>
                            <a-col :span="12">
                              <a-input-number v-model="simpleItem.urgeTimes" size="small" :min="0" />
                            </a-col>
                          </a-row>
                        </div>
                      </a-col>
                      <a-col
                        v-if="
                          simpleItem.type === 'field' &&
                          simpleItem.type !== 'custom' &&
                          simpleItem.type !== 'notSet' &&
                          simpleItem.type !== 'urgeTimes' &&
                          simpleItem.type !== 'transitionFrom'
                        "
                        :span="4"
                      >
                        <a-select
                          v-if="simpleItem.type === 'field'"
                          v-model="simpleItem.alias"
                          size="small"
                          show-search
                          :allowClear="true"
                          option-filter-prop="children"
                          @change="
                            (value) => {
                              simpleItem.condition = [
                                {
                                  include: '',
                                  value: undefined
                                }
                              ]
                              fieldArr.forEach((item1) => {
                                if (item1.alias === value) {
                                  item1.settings = JSON.parse(item1.setting)
                                  // 判断是否有数据字典
                                  simpleItem.src = item1.settings.form.src ? item1.settings.form.src : ''
                                  simpleItem.formType = item1.formType
                                  simpleItem.fieldId = item1.fieldId
                                  simpleItem.fieldType = item1.fieldType
                                  if (simpleItem.src && item1.formType === 'treeselect') {
                                    getTreeOption(simpleItem, item1)
                                  } else if (item1.formType === 'tag' && !tagOption.length) {
                                    getTagOption()
                                    simpleItem.condition = [
                                      {
                                        include: '',
                                        value: []
                                      }
                                    ]
                                  } else if (item1.formType === 'tag') {
                                    simpleItem.condition = [
                                      {
                                        include: '',
                                        value: []
                                      }
                                    ]
                                  } else if (simpleItem.src) {
                                    getOption(simpleItem)
                                  } else if (item1.formType === 'treeselect') {
                                    simpleItem.dataSource = item1.settings.attribute.dataSource
                                    getTreeOption(simpleItem, item1)
                                  } else {
                                    simpleItem.option = []
                                  }
                                  simpleItem.form = item1.settings.form
                                  // 根据字段，给出相应条件
                                  if (['text', 'textarea'].indexOf(item1.formType) !== -1) {
                                    simpleItem.condiArr = [
                                      { enName: 'eq', cnName: $t('等于') },
                                      { enName: 'ne', cnName: $t('不等于') },
                                      { enName: 'cn', cnName: $t('包含') },
                                      { enName: 'nc', cnName: $t('不包含') },
                                      { enName: 'bw', cnName: $t('开始于') },
                                      { enName: 'ew', cnName: $t('结束于') },
                                      { enName: 'em', cnName: $t('为空') },
                                      { enName: 'nem', cnName: $t('不为空') }
                                    ]
                                  } else if (['radio', 'checkbox', 'combobox'].indexOf(item1.formType) !== -1) {
                                    simpleItem.condiArr = [
                                      { enName: 'eq', cnName: $t('等于') },
                                      { enName: 'ne', cnName: $t('不等于') },
                                      { enName: 'em', cnName: $t('为空') },
                                      { enName: 'nem', cnName: $t('不为空') }
                                    ]
                                  } else if (['number', 'datetime'].indexOf(item1.formType) !== -1) {
                                    simpleItem.condiArr = [
                                      { enName: 'eq', cnName: $t('等于') },
                                      { enName: 'ne', cnName: $t('不等于') },
                                      { enName: 'gt', cnName: $t('大于') },
                                      { enName: 'ge', cnName: $t('大于等于') },
                                      { enName: 'lt', cnName: $t('小于') },
                                      { enName: 'le', cnName: $t('小于等于') },
                                      { enName: 'em', cnName: $t('为空') },
                                      { enName: 'nem', cnName: $t('不为空') }
                                    ]
                                  } else if (
                                    ['cascader', 'address', 'treeselect', 'tag'].indexOf(item1.formType) !== -1
                                  ) {
                                    simpleItem.condiArr = [
                                      { enName: 'cn', cnName: $t('包含') },
                                      { enName: 'nc', cnName: $t('不包含') },
                                      { enName: 'em', cnName: $t('为空') },
                                      { enName: 'nem', cnName: $t('不为空') }
                                    ]
                                  } else if (['associated'].indexOf(item1.formType) !== -1) {
                                    simpleItem.condiArr = [
                                      { enName: 'eq', cnName: $t('等于') },
                                      { enName: 'ne', cnName: $t('不等于') },
                                      { enName: 'cn', cnName: $t('包含') },
                                      { enName: 'nc', cnName: $t('不包含') },
                                      { enName: 'bw', cnName: $t('开始于') },
                                      { enName: 'ew', cnName: $t('结束于') },
                                      { enName: 'em', cnName: $t('为空') },
                                      { enName: 'nem', cnName: $t('不为空') }
                                    ]
                                  }
                                }
                              })
                            }
                          "
                        >
                          <a-select-option
                            v-for="(fieldItem, fieldIndex) in fieldArr"
                            :key="fieldIndex"
                            :value="fieldItem.alias"
                          >
                            {{ fieldItem.name }}
                          </a-select-option>
                        </a-select>
                      </a-col>
                      <a-col
                        v-if="
                          simpleItem.type !== 'field' &&
                          simpleItem.type !== 'custom' &&
                          simpleItem.type !== 'notSet' &&
                          simpleItem.type !== 'urgeTimes' &&
                          simpleItem.type !== 'transitionFrom'
                        "
                        :span="4"
                        style="text-align: center"
                      >
                        <a-select v-model="simpleItem.include" size="small">
                          <a-select-option value="bl">{{ $t('属于') }}</a-select-option>
                          <a-select-option value="nbl">{{ $t('不属于') }}</a-select-option>
                        </a-select>
                      </a-col>
                      <a-col
                        v-if="
                          simpleItem.type !== 'custom' &&
                          simpleItem.type !== 'notSet' &&
                          simpleItem.type !== 'urgeTimes' &&
                          simpleItem.type !== 'transitionFrom'
                        "
                        :span="14"
                        style="border: 1px solid #e8e8e8; margin-bottom: 4px"
                      >
                        <a-row type="flex" align="middle">
                          <a-col :span="20">
                            <a-row
                              v-for="(includeItem, includeIndex) in simpleItem.condition"
                              :key="includeIndex"
                              type="flex"
                              align="middle"
                              :gutter="10"
                              style="padding: 5px 0"
                            >
                              <a-col v-if="simpleItem.type === 'field'" :span="6">
                                <a-select
                                  v-model="includeItem.include"
                                  size="small"
                                  :dropdownMatchSelectWidth="false"
                                  @change="
                                    (value) => {
                                      choiceInclude(value, includeItem)
                                    }
                                  "
                                >
                                  <a-select-option
                                    v-for="(crItem, crIndex) in simpleItem.condiArr"
                                    :key="crIndex"
                                    option-filter-prop="children"
                                    :value="crItem.enName"
                                  >
                                    {{ crItem.cnName }}
                                  </a-select-option>
                                </a-select>
                              </a-col>
                              <a-col v-if="simpleItem.type === 'field'" :span="14">
                                <template v-if="!includeItem.type">
                                  <!-- 日期 -->
                                  <a-date-picker
                                    v-if="simpleItem.formType === 'datetime' && simpleItem.fieldType === 'DATETIME'"
                                    size="small"
                                    style="width: 100%"
                                    :defaultValue="
                                      includeItem.value ? moment(includeItem.value, 'YYYY-MM-DD HH:mm:ss') : null
                                    "
                                    format="YYYY-MM-DD HH:mm:ss"
                                    @change="
                                      (dates, dateStrings) => {
                                        includeItem.value = dateStrings
                                      }
                                    "
                                  ></a-date-picker>
                                  <a-date-picker
                                    v-else-if="simpleItem.formType === 'datetime' && simpleItem.fieldType === 'DATE'"
                                    size="small"
                                    style="width: 100%"
                                    :defaultValue="includeItem.value ? moment(includeItem.value, 'YYYY-MM-DD') : null"
                                    format="YYYY-MM-DD"
                                    @change="
                                      (dates, dateStrings) => {
                                        includeItem.value = dateStrings
                                      }
                                    "
                                  ></a-date-picker>
                                  <a-time-picker
                                    v-else-if="simpleItem.formType === 'datetime' && simpleItem.fieldType === 'TIME'"
                                    size="small"
                                    style="width: 100%"
                                    :defaultValue="includeItem.value ? moment(includeItem.value, 'HH:mm:ss') : null"
                                    format="HH:mm:ss"
                                    @change="
                                      (dates, dateStrings) => {
                                        includeItem.value = dateStrings
                                      }
                                    "
                                  ></a-time-picker>
                                  <!-- 树选择 -->
                                  <div v-else-if="simpleItem.formType === 'treeselect'">
                                    <a-tree-select
                                      v-if="simpleItem.dataSource && simpleItem.dataSource === 'addressBook'"
                                      v-model="includeItem.value"
                                      style="width: 100%"
                                      size="small"
                                      :placeholder="$t('请选择')"
                                      :treeDefaultExpandedKeys="includeItem.value ? includeItem.value.split(',') : []"
                                      :dropdown-style="{ maxHeight: '400px', overflow: 'auto' }"
                                      :tree-data="simpleItem.option"
                                      :load-data="
                                        (data) => {
                                          return onLoadData(data, simpleItem, includeItem)
                                        }
                                      "
                                    ></a-tree-select>
                                    <a-tree-select
                                      v-else
                                      v-model="includeItem.value"
                                      style="width: 100%"
                                      size="small"
                                      :placeholder="$t('请选择')"
                                      :dropdown-style="{ maxHeight: '400px', overflow: 'auto' }"
                                      :tree-data="simpleItem.option"
                                      :load-data="
                                        (data) => {
                                          return onLoadData(data, simpleItem, includeItem)
                                        }
                                      "
                                      :treeDefaultExpandedKeys="includeItem.value ? includeItem.value.split(',') : []"
                                    ></a-tree-select>
                                  </div>
                                  <div v-else-if="simpleItem.formType === 'address'">
                                    <address-select
                                      size="small"
                                      :defaultValue="includeItem.value"
                                      fieldType="field"
                                      :series="simpleItem.form.showSeries"
                                      @send="
                                        (display, val, alias, allValue) => {
                                          includeItem.value = val
                                          includeItem.allValue = allValue
                                        }
                                      "
                                    />
                                  </div>
                                  <!-- 标签 -->
                                  <a-cascader
                                    v-else-if="simpleItem.formType === 'tag'"
                                    v-model="includeItem.value"
                                    size="small"
                                    style="width: 100%"
                                    :options="tagOption"
                                    :placeholder="$t('请选择')"
                                  />
                                  <a-input v-else-if="!simpleItem.src" v-model="includeItem.value" size="small" />
                                  <a-select
                                    v-else-if="simpleItem.src && simpleItem.formType === 'combobox'"
                                    size="small"
                                    :placeholder="$t('请选择')"
                                    :defaultValue="includeItem.value ? includeItem.value : undefined"
                                    changeOnSelect
                                    @change="
                                      (value) => {
                                        includeItem.value = value
                                      }
                                    "
                                  >
                                    <a-select-option
                                      v-for="(fieldItem, fieldKey) in simpleItem.option"
                                      :key="fieldKey"
                                      :value="fieldItem.value"
                                    >
                                      {{ fieldItem.label }}
                                    </a-select-option>
                                  </a-select>
                                  <div v-else>
                                    <tabs-select
                                      :defaultValue="includeItem.value"
                                      :valueKey="simpleItem.form.src || ''"
                                      action="edit"
                                      size="small"
                                      :display="includeItem.display"
                                      :field="includeItem"
                                      :writeBack="simpleItem.form.writeBack"
                                      fieldType="search"
                                      @send="
                                        (val, alias, display, status, allValue) => {
                                          includeItem.value = val
                                          includeItem.display = display
                                          includeItem.allValue = allValue
                                        }
                                      "
                                    />
                                  </div>
                                </template>
                                <template v-else>
                                  <a-input type="text" disabled size="small" />
                                </template>
                              </a-col>
                              <a-col
                                v-else-if="simpleItem.type === 'currentUser'"
                                :span="20"
                                style="padding-right: 14px"
                              >
                                <a-row type="flex" align="middle">
                                  <a-col :span="23">
                                    <a-select
                                      v-model="includeItem.value"
                                      size="small"
                                      allowClear
                                      mode="multiple"
                                      :open="false"
                                      :placeholder="$t('请选择')"
                                      :showSearch="false"
                                      changeOnSelect
                                      @change="
                                        (value) => {
                                          includeItem.value = value
                                        }
                                      "
                                    >
                                      <a-select-option
                                        v-for="(userItem, userKey) in includeItem.userArr"
                                        :key="userKey"
                                        :value="userItem.username"
                                      >
                                        {{ userItem.username }}
                                      </a-select-option>
                                    </a-select>
                                  </a-col>
                                  <a-col :span="1">
                                    <a-button
                                      style="margin-left: -1px"
                                      size="small"
                                      icon="user"
                                      @click="
                                        () => {
                                          recordKey.simpleIndex = simpleIndex
                                          recordKey.includeIndex = includeIndex
                                          recordKey.type = 'user'
                                          $refs.selectUserForm.show({
                                            fieldId: '',
                                            selectValue: includeItem.value,
                                            mode: 'multiple'
                                          })
                                        }
                                      "
                                    />
                                  </a-col>
                                </a-row>
                              </a-col>
                              <a-col
                                v-else-if="simpleItem.type === 'currentDepartment'"
                                :span="20"
                                style="padding-right: 14px"
                              >
                                <a-row type="flex" align="middle">
                                  <a-col :span="23">
                                    <a-select
                                      v-model="includeItem.value"
                                      size="small"
                                      allowClear
                                      mode="multiple"
                                      :open="false"
                                      :placeholder="$t('请选择部门')"
                                      :showSearch="false"
                                      changeOnSelect
                                      @change="
                                        (value) => {
                                          includeItem.value = value
                                        }
                                      "
                                    >
                                      <a-select-option
                                        v-for="(depItem, depKey) in includeItem.department"
                                        :key="depKey"
                                        :value="depItem.departmentId"
                                      >
                                        {{ depItem.name }}
                                      </a-select-option>
                                    </a-select>
                                  </a-col>
                                  <a-col :span="1">
                                    <a-button
                                      style="margin-left: -1px"
                                      size="small"
                                      icon="apartment"
                                      @click="
                                        () => {
                                          recordKey.simpleIndex = simpleIndex
                                          recordKey.includeIndex = includeIndex
                                          recordKey.type = 'department'
                                          $refs.selectDepartment.show({
                                            optionCustom: [],
                                            option: includeItem.department || [],
                                            optionType: 'department',
                                            selectValue: includeItem.value,
                                            mode: 'multiple'
                                          })
                                        }
                                      "
                                    />
                                  </a-col>
                                </a-row>
                              </a-col>
                              <a-col
                                v-else-if="simpleItem.type === 'currentRole'"
                                :span="20"
                                style="padding-right: 14px"
                              >
                                <a-row type="flex" align="middle">
                                  <a-col :span="23">
                                    <a-select
                                      v-model="includeItem.value"
                                      size="small"
                                      allowClear
                                      :placeholder="$t('请选择角色')"
                                      :open="false"
                                      mode="multiple"
                                      changeOnSelect
                                      @change="
                                        (value) => {
                                          includeItem.value = value
                                        }
                                      "
                                    >
                                      <a-select-option
                                        v-for="(value, key) in includeItem.role"
                                        :key="key"
                                        :value="value.roleId"
                                      >
                                        {{ value.name }}
                                      </a-select-option>
                                    </a-select>
                                  </a-col>
                                  <a-col :span="1">
                                    <a-button
                                      style="margin-left: -1px"
                                      size="small"
                                      icon="team"
                                      @click="
                                        () => {
                                          recordKey.simpleIndex = simpleIndex
                                          recordKey.includeIndex = includeIndex
                                          recordKey.type = 'role'
                                          $refs.selectDepartment.show({
                                            optionCustom: [],
                                            option: includeItem.role || [],
                                            optionType: 'role',
                                            selectValue: includeItem.value,
                                            mode: 'multiple',
                                            url: '/admin/role/getRoleData'
                                          })
                                        }
                                      "
                                    />
                                  </a-col>
                                </a-row>
                              </a-col>
                              <a-col flex="70px" style="display: flex; align-items: center">
                                <a-icon
                                  :style="{ fontSize: '24px', color: '#52c41a' }"
                                  type="plus-square"
                                  theme="filled"
                                  @click="
                                    simpleItem.type === 'field'
                                      ? simpleItem.condition.splice(includeIndex + 1, 0, {
                                          include: '',
                                          value: undefined
                                        })
                                      : simpleItem.condition.splice(includeIndex + 1, 0, { include: '', value: [] })
                                  "
                                />
                                <a-icon
                                  :style="{
                                    fontSize: '24px',
                                    color: simpleItem.condition.length === 1 ? '#bfbfbf' : '#ff4d4f',
                                    'padding-left': '5px'
                                  }"
                                  type="minus-square"
                                  theme="filled"
                                  @click="
                                    simpleItem.condition.length === 1
                                      ? ''
                                      : simpleItem.condition.splice(includeIndex, 1)
                                  "
                                />
                              </a-col>
                            </a-row>
                          </a-col>
                          <a-col
                            v-if="
                              simpleItem.type !== 'custom' &&
                              simpleItem.type !== 'urgeTimes' &&
                              simpleItem.type !== 'transitionFrom'
                            "
                            flex="80px"
                          >
                            <a-select v-model="simpleItem.logic" style="width: 80px" size="small">
                              <a-select-option value="and">{{ $t('且(and)') }}</a-select-option>
                              <a-select-option value="or">{{ $t('或(or)') }}</a-select-option>
                            </a-select>
                          </a-col>
                        </a-row>
                      </a-col>
                      <a-col flex="70px" style="display: flex; align-items: center; justify-content: center">
                        <a-icon
                          :style="{ fontSize: '24px', color: '#52c41a' }"
                          type="plus-square"
                          theme="filled"
                          @click="
                            conditionVisual.push({
                              type: 'field',
                              alias: '',
                              src: '',
                              condiArr: [],
                              customCode: {
                                html: '',
                                value: ''
                              },
                              condition: [
                                {
                                  include: '',
                                  value: ''
                                }
                              ],
                              logic: 'and'
                            })
                          "
                        />
                        <a-icon
                          :style="{
                            fontSize: '24px',
                            color: conditionVisual.length === 1 ? '#bfbfbf' : '#ff4d4f',
                            'padding-left': '5px'
                          }"
                          type="minus-square"
                          theme="filled"
                          @click="conditionVisual.length === 1 ? '' : conditionVisual.splice(simpleIndex, 1)"
                        />
                      </a-col>
                    </a-row>
                  </a-col>
                  <a-col flex="80px">
                    <a-select v-if="conditionVisual.length > 0" v-model="logic" style="width: 80px" size="small">
                      <a-select-option value="and">{{ $t('且(and)') }}</a-select-option>
                      <a-select-option value="or">{{ $t('或(or)') }}</a-select-option>
                    </a-select>
                  </a-col>
                </a-row>
              </a-card>
            </a-form-item>
            <a-form-item :label="$t('执行动作')" :labelCol="labelCol" :wrapperCol="wrapperCol">
              <a-checkbox-group
                v-decorator="[
                  'runaction',
                  { initialValue: runaction, rules: [{ required: true, message: $t('执行动作不能为空') }] }
                ]"
                style="width: 100%; padding-top: 8px"
              >
                <a-row v-if="workflowtype === 'work'" type="flex" align="middle" :gutter="5">
                  <a-col :span="customJump === '1' ? 3 : 19">
                    <a-checkbox
                      value="customJump"
                      :checked="customJump === '1'"
                      @change="
                        (e) => {
                          customJump = e.target.checked ? '1' : '0'
                        }
                      "
                    >
                      {{ $t('自定义跳转') }}
                    </a-checkbox>
                  </a-col>
                  <a-col v-if="customJump === '1'" :span="6">
                    <a-select v-model="customJumpTransition" :placeholder="$t('请选择变迁')">
                      <a-select-option
                        v-for="value in transition"
                        :key="value.transitionId"
                        :value="value.transitionId"
                      >
                        {{ value.transitionName }}
                      </a-select-option>
                    </a-select>
                  </a-col>
                </a-row>
                <a-row v-else :gutter="5" type="flex" align="middle">
                  <a-col :span="autoHandle === '1' ? 3 : 19">
                    <a-checkbox
                      value="autoHandle"
                      :checked="autoHandle === '1'"
                      @change="
                        (e) => {
                          autoHandle = e.target.checked ? '1' : '0'
                        }
                      "
                    >
                      {{ $t('自动办理') }}
                    </a-checkbox>
                  </a-col>
                  <a-col v-if="autoHandle === '1'" :span="6">
                    <a-select v-model="autoHandleWay" :placeholder="$t('请选择办理方式')">
                      <a-select-option v-for="value in wayData" :key="value.id" :value="value.alias">
                        {{ value.way }}
                      </a-select-option>
                    </a-select>
                  </a-col>
                </a-row>
                <a-row :gutter="5" type="flex" align="middle" style="padding: 10px 0">
                  <a-col :span="customHandle === '1' ? 3 : 19">
                    <a-checkbox
                      value="customHandle"
                      @change="
                        (e) => {
                          customHandle = e.target.checked ? '1' : '0'
                        }
                      "
                    >
                      {{ $t('自定义动作') }}
                    </a-checkbox>
                  </a-col>
                  <a-col v-if="customHandle === '1'" :span="6">
                    <a-button @click="handleCondition">{{ $t('自定义动作') }}</a-button>
                  </a-col>
                  <condition ref="condition" :params="condition" @ok="getCondition" />
                </a-row>
                <a-checkbox
                  value="sendNotice"
                  @change="
                    (e) => {
                      sendNotice = e.target.checked ? '1' : '0'
                      if (!sendTemplate.length) {
                        getTemplate()
                      }
                    }
                  "
                >
                  {{ $t('发送通知') }}
                </a-checkbox>
              </a-checkbox-group>
            </a-form-item>
            <div v-if="sendNotice === '1'">
              <a-form-item :label="$t('通知方式')" :labelCol="{ span: 6 }" :wrapperCol="{ span: 12 }">
                <a-checkbox-group
                  v-decorator="[
                    'info[sendType]',
                    {
                      rules: [{ required: true, message: $t('请选择通知方式') }],
                      initialValue: config.data && config.data.sendType ? config.data.sendType : []
                    }
                  ]"
                >
                  <a-checkbox value="sms">{{ $t('短信') }}</a-checkbox>
                  <!-- <a-checkbox value="0">{{ $t('邮件') }}</a-checkbox> -->
                  <a-checkbox value="msg">{{ $t('站内消息') }}</a-checkbox>
                  <!-- <a-checkbox value="2">{{ $t('微信') }}</a-checkbox> -->
                  <a-checkbox value="msgVoice">{{ $t('站内语音提醒') }}</a-checkbox>
                  <a-checkbox value="appText">{{ $t('App文本提醒') }}</a-checkbox>
                  <a-checkbox value="appVoice">{{ $t('App语音提醒') }}</a-checkbox>
                </a-checkbox-group>
              </a-form-item>
              <a-form-item :label="$t('提醒人')" :labelCol="{ span: 6 }" :wrapperCol="{ span: 12 }">
                <a-row type="flex" align="middle" style="margin-top: 3px">
                  <a-col :span="24">
                    <querier-codemirror-input
                      ref="querierCodemirrorInput"
                      :params.sync="remindUser.data"
                      :lineStyle="{ lineHeight: '19px' }"
                    />
                  </a-col>
                  <span
                    style="position: absolute; left: 562px; top: -1px; cursor: pointer; z-index: 10"
                    size="small"
                    @click="
                      $refs.remindUserShow.show({
                        title: $t('公式编辑器')
                      })
                    "
                  >
                    fx
                  </span>
                </a-row>
                <condition
                  ref="remindUserShow"
                  :params="Object.assign(remindUser, { tableId: tableId })"
                  @ok="
                    (val) => {
                      $set(this, 'remindUser', val)
                    }
                  "
                />
              </a-form-item>
              <a-form-item :label="$t('文本内容模板')" :labelCol="{ span: 6 }" :wrapperCol="{ span: 12 }">
                <a-select
                  v-decorator="[
                    'info[smsTemplate]',
                    {
                      rules: [{ required: true, message: $t('请选择文本内容模板') }],
                      initialValue: config.data && config.data.smsTemplate ? config.data.smsTemplate : undefined
                    }
                  ]"
                  allowClear
                  @change="handleGetSmsTemplate"
                >
                  <a-select-option v-for="tem in sendTemplate" :key="tem.value" :value="tem.value">
                    {{ tem.display }}
                  </a-select-option>
                </a-select>
              </a-form-item>
              <a-form-item
                v-for="(value, smsKey) in fieldSmsTemplate"
                v-show="smsTempTag"
                :key="smsKey + 'sms'"
                :value="smsKey + 'sms'"
                :label="value.label"
                :labelCol="{ span: 6 }"
                :wrapperCol="{ span: 12 }"
              >
                <a-input
                  v-decorator="[
                    value.name,
                    {
                      initialValue: config.data && config.data.smsSetting ? config.data.smsSetting[value.label] : '',
                      rules: [{ required: smsTempTag, message: $t('请输入参数') }]
                    }
                  ]"
                />
              </a-form-item>
              <a-form-item
                v-if="smsTempTag"
                :label="$t('文本发送内容')"
                :labelCol="{ span: 6 }"
                :wrapperCol="{ span: 12 }"
              >
                <a-textarea
                  v-decorator="[
                    'info[smsSetting][smsContent]',
                    { rules: [{ required: true, message: $t('请输入内容') }], initialValue: smsContent }
                  ]"
                  :disabled="smsTempTag !== 'custom'"
                  :autoSize="{ minRows: 5, maxRows: 10 }"
                />
              </a-form-item>
              <a-form-item :label="$t('语音标识')" :labelCol="{ span: 6 }" :wrapperCol="{ span: 12 }">
                <a-input
                  v-decorator="[
                    'info[voiceIdentify]',
                    { initialValue: config.data && config.data.voiceIdentify ? config.data.voiceIdentify : '' }
                  ]"
                />
              </a-form-item>
              <!-- <a-form-item :label="$t('文本消息模板')" :labelCol="{ span: 6 }" :wrapperCol="{ span: 12 }">
                <a-select
                  v-decorator="['info[msgTemplate]', { initialValue: config.data && config.data.msgTemplate ? config.data.msgTemplate : undefined }]"
                  allowClear
                  @change="handleGetMsgTemplate"
                >
                  <a-select-option v-for="tem in sendTemplate" :key="tem.value" :value="tem.value" >{{ tem.display }}</a-select-option>
                </a-select>
              </a-form-item>
              <a-form-item
                v-for="(value, msgKey) in fieldMsgTemplate"
                v-show="msgTempTag"
                :key="msgKey + 'mag'"
                :value="msgKey + 'mag'"
                :label="value.label"
                :labelCol="{ span: 6 }"
                :wrapperCol="{ span: 12 }">
                <a-input v-decorator="[value.name, {initialValue: config.data && config.data.msgSetting ? config.data.msgSetting[value.label] : '', rules: [{required: msgTempTag, message: '请输入参数'}]}]"/>
              </a-form-item>
              <a-form-item :label="$t('短信发送内容')" :labelCol="{ span: 6 }" :wrapperCol="{ span: 12 }" v-if="msgTempTag">
                <a-textarea :disabled="msgTempTag !== 'custom'" :autoSize="{ minRows: 5, maxRows: 10 }" v-decorator="['info[msgSetting][msgContent]', {rules: [{required: msgTempTag, message: '请输入内容'}], initialValue: smsContent}]"/>
              </a-form-item> -->
            </div>
          </a-form>
        </div>
        <div class="bbar">
          <a-button type="primary" html-type="submit" @click="handleSubmit">{{ $t('保存') }}</a-button>
          <a-button @click="visible = !visible">{{ $t('关闭') }}</a-button>
        </div>
      </a-spin>
      <select-user-form ref="selectUserForm" @ok="getUser" />
      <select-department ref="selectDepartment" @ok="getDepartment" />
    </a-drawer>
  </div>
</template>
<script>
import { mapGetters } from 'vuex'
export default {
  i18n: window.lang('admin'),
  components: {
    Condition: () => import('./Table/Condition'),
    Codemirror: () => import('@/views/admin/Formula/Codemirror'),
    QuerierCodemirrorInput: () => import('@/views/admin/Table/QuerierCodemirrorInput'),
    CustomCodemirror: () => import('@/views/admin/Flow/modules/CustomCodemirror'),
    TabsSelect: () => import('@/views/admin/Field/TabsSelect'),
    AddressSelect: () => import('@/views/admin/Field/AddressSelect'),
    SelectUserForm: () => import('@/views/admin/UserTable/SelectUserForm'),
    SelectDepartment: () => import('@/views/admin/UserTable/SelectDepartment')
  },
  props: {
    workflowtype: {
      type: String,
      default () {
        return ''
      },
      require: true
    },
    slaData: {
      type: Array,
      default () {
        return []
      }
    },
    allWayData: {
      type: Object,
      default () {
        return {}
      }
    },
    wayData: {
      type: Array,
      default () {
        return []
      }
    },
    tableId: {
      type: String,
      default () {
        return ''
      }
    },
    workflowId: {
      type: String,
      default () {
        return ''
      }
    },
    fieldArr: {
      type: Array,
      default () {
        return []
      }
    },
    department: {
      type: Array,
      default () {
        return []
      }
    },
    role: {
      type: Object,
      default () {
        return {}
      }
    },
    userArr: {
      type: Array,
      default () {
        return []
      }
    }
  },
  data () {
    return {
      visible: false,
      loading: false,
      slaDataArr: this.slaData,
      showWay: [],
      recordKey: {},
      condition: {
        tableId: this.tableId,
        data: {}
      },
      customHandleSetting: {
        html: '',
        value: ''
      },
      remindUser: {
        tableId: this.tableId,
        data: {
          html: '',
          value: ''
        }
      },
      customJumpTransition: '',
      autoHandleWay: '',
      executionTime: '',
      sendForm: this.$form.createForm(this, { name: 'sendForm' }),
      config: {},
      queryParam: {},
      data: {},
      transition: [],
      form: this.$form.createForm(this),
      labelCol: { span: 3 },
      wrapperCol: { span: 21 },
      sendNotice: '0',
      customJump: '0',
      autoHandle: '0',
      customHandle: '0',
      runaction: [],
      sendTemplate: [],
      fieldSmsTemplate: [],
      smsContent: '',
      smsTempTag: '',
      // fieldMsgTemplate: [],
      // msgContent: '',
      // msgTempTag: '',
      tagOption: [],
      executionTimeSetting: {
        flowtimeBeforeDay: null,
        flowtimeBeforeHour: null,
        flowtimeBeforeMinute: null,
        flowtimeAfterDay: null,
        flowtimeAfterHour: null,
        flowtimeAfterMinute: null,
        urgeSymbol: 'eq',
        urgeTimes: null
      },
      conditionVisual: [{
        type: 'notSet',
        alias: '',
        src: '',
        condiArr: [],
        customCode: {
          html: '',
          value: ''
        },
        condition: [{
          include: '',
          value: ''
        }],
        logic: 'and'
      }],
      logic: 'and',
      columns: [{
        title: this.$t('操作'),
        dataIndex: 'action',
        align: 'center',
        width: 140,
        scopedSlots: { customRender: 'action' }
      }, {
        title: '#',
        dataIndex: 'sort',
        width: 40,
        scopedSlots: { customRender: 'sort' }
      }, {
        title: this.$t('SLA名称'),
        dataIndex: 'name',
        width: 150
      }, {
        title: this.$t('执行时机'),
        dataIndex: 'executionTime',
        width: 120,
        scopedSlots: { customRender: 'executionTime' }
      }, {
        title: this.$t('执行动作'),
        dataIndex: 'runaction',
        width: 120,
        scopedSlots: { customRender: 'runaction' }
      }, {
        title: this.$t('最后修改人'),
        width: 120,
        dataIndex: 'updateuser'
      }, {
        title: this.$t('最后修改时间'),
        width: 140,
        dataIndex: 'updateTime'
      }, {
        title: this.$t('SLA描述'),
        dataIndex: 'describe'
      }]
    }
  },
  computed: {
    ...mapGetters(['userInfo'])
  },
  watch: {
    slaData () {
      this.$emit('ok', this.slaDataArr)
    }
  },
  mounted () {
    this.getTransition()
  },
  methods: {
    // 页面渲染
    handleAdd () {
      this.loading = true
      this.config = {
        action: 'add',
        title: this.$t('添加SLA'),
        data: {
          executionTime: 'flowtimeCome'
        }
      }
      this.sendNotice = '0'
      this.customJump = '0'
      this.autoHandle = '0'
      this.customHandle = '0'
      this.runaction = []
      this.smsTempTag = ''
      this.conditionVisual = [{
        type: 'notSet',
        alias: '',
        src: '',
        condiArr: [],
        customCode: {
          html: '',
          value: ''
        },
        condition: [{
          include: '',
          value: ''
        }],
        logic: 'and'
      }]
      this.remindUser = {
        tableId: this.tableId,
        data: {
          html: '',
          value: ''
        }
      }
      this.loading = false
      this.visible = true
    },
    // 选择关系
    choiceInclude (value, includeItem) {
      includeItem.value = undefined
    },
    getTemplate () {
      this.axios({
        url: '/sms/template/getTemplate'
      }).then((res) => {
        this.sendTemplate = res.result.data
        if (this.config.data && this.config.data.smsSetting) {
          this.handleGetSmsTemplate(this.config.data.smsTemplate)
        }
        // if (this.config.data && this.config.data.msgSetting) {
        //   this.handleGetMsgTemplate(this.config.data.msgTemplate)
        // }
      })
    },
    handleGetSmsTemplate (value) {
      this.smsTempTag = value
      const myTemplate = this.sendTemplate
      for (var key in myTemplate) {
        if (myTemplate[key].value === value) {
          this.smsContent = myTemplate[key].text
          this.form.setFieldsValue({
            'info[smsSetting][smsContent]': this.smsContent
          })
          var patt = /{\$[a-zA-Z0-9_]+}/g
          var res = myTemplate[key].text.match(patt)
          this.fieldSmsTemplate = []
          for (var i in res) {
            var fname = res[i].substring(2, res[i].length - 1)
            this.fieldSmsTemplate.push({ label: fname, name: 'info[smsSetting][' + fname + ']' })
          }
        }
      }
    },
    getTransition () {
      this.axios({
        url: '/admin/workflow/getTransition',
        data: { workflowId: this.workflowId }
      }).then(res => {
        this.transition = res.result.data
      })
    },
    getCondition (val) {
      this.customHandleSetting = val.data
      Object.assign(this.condition.data, this.customHandleSetting)
    },
    handleCondition () {
      console.log()
      this.$refs.condition.show({ title: this.$t('自定义动作') })
    },
    handleDelete (index) {
      this.slaDataArr.splice(index, 1)
    },
    getUser (data, index, conIndex, modeCheck) {
      this.conditionVisual[this.recordKey.simpleIndex].condition[this.recordKey.includeIndex]['userArr'] = data.map(item => { const obj = { username: item, text: item }; return obj })
      this.conditionVisual[this.recordKey.simpleIndex].condition[this.recordKey.includeIndex]['value'] = data
    },
    getDepartment (data, index, conIndex, option) {
      if (this.recordKey.type === 'role') {
        this.conditionVisual[this.recordKey.simpleIndex].condition[this.recordKey.includeIndex]['role'] = option
        this.conditionVisual[this.recordKey.simpleIndex].condition[this.recordKey.includeIndex]['value'] = data
      } else {
        this.conditionVisual[this.recordKey.simpleIndex].condition[this.recordKey.includeIndex]['department'] = option
        this.conditionVisual[this.recordKey.simpleIndex].condition[this.recordKey.includeIndex]['value'] = data
      }
    },
    handleEdit (record, index) {
      this.loading = true
      this.config = {
        action: 'edit',
        title: this.$t('编辑SLA'),
        data: record,
        index: index
      }
      this.sendNotice = record.sendNotice
      this.customJump = record.customJump
      this.autoHandle = record.autoHandle
      this.customHandle = record.customHandle
      if (record.remindUser) {
        this.remindUser = record.remindUser
      }
      if (record.executionTime === 'flowtimeBefore') {
        this.executionTimeSetting.flowtimeBeforeDay = record.flowtimeBeforeDay
        this.executionTimeSetting.flowtimeBeforeHour = record.flowtimeBeforeHour
        this.executionTimeSetting.flowtimeBeforeMinute = record.flowtimeBeforeMinute
      } else if (record.executionTime === 'flowtimeAfter') {
        this.executionTimeSetting.flowtimeAfterDay = record.flowtimeAfterDay
        this.executionTimeSetting.flowtimeAfterHour = record.flowtimeAfterHour
        this.executionTimeSetting.flowtimeAfterMinute = record.flowtimeAfterMinute
      } else if (record.executionTime === 'flowurgeTimes') {
        this.executionTimeSetting.urgeSymbol = record.urgeSymbol
        this.executionTimeSetting.urgeTimes = record.urgeTimes
      }
      this.runaction = []
      if (record.sendNotice === '1') {
        this.getTemplate()
        this.runaction.push('sendNotice')
      }
      if (record.customJump === '1') {
        this.runaction.push('customJump')
      }
      if (record.customHandle === '1') {
        this.runaction.push('customHandle')
      }
      if (record.autoHandle === '1') {
        this.runaction.push('autoHandle')
      }
      if (record.conditionVisual) {
        record.conditionVisual.forEach((simpleItem, simpleIndex) => {
          if (simpleItem.type === 'field') {
            this.fieldArr.forEach((fieldItem, fieldIndex) => {
              if (simpleItem.alias === fieldItem.alias) {
                fieldItem.settings = JSON.parse(fieldItem.setting)
                simpleItem.src = fieldItem.settings.form.src ? fieldItem.settings.form.src : ''
                simpleItem.formType = fieldItem.formType
                simpleItem.fieldId = fieldItem.fieldId
                simpleItem.form = fieldItem.settings.form
                if (simpleItem.src && fieldItem.formType === 'treeselect') {
                  this.getTreeOption(simpleItem, fieldItem)
                } else if (fieldItem.formType === 'tag' && !this.tagOption.length) {
                  this.getTagOption()
                } else if (simpleItem.src) {
                  this.getOption(simpleItem)
                } else if (fieldItem.formType === 'treeselect') {
                  simpleItem.dataSource = fieldItem.settings.attribute.dataSource
                  this.getTreeOption(simpleItem, fieldItem)
                } else {
                  simpleItem.option = []
                }
                // 根据字段，给出相应条件
                if (['text', 'textarea'].indexOf(fieldItem.formType) !== -1) {
                  simpleItem.condiArr = [
                    { enName: 'eq', cnName: this.$t('等于') },
                    { enName: 'ne', cnName: this.$t('不等于') },
                    { enName: 'cn', cnName: this.$t('包含') },
                    { enName: 'nc', cnName: this.$t('不包含') },
                    { enName: 'bw', cnName: this.$t('开始于') },
                    { enName: 'ew', cnName: this.$t('结束于') },
                    { enName: 'em', cnName: this.$t('为空') },
                    { enName: 'nem', cnName: this.$t('不为空') }]
                } else if (['radio', 'checkbox', 'combobox'].indexOf(fieldItem.formType) !== -1) {
                  simpleItem.condiArr = [
                    { enName: 'eq', cnName: this.$t('等于') },
                    { enName: 'ne', cnName: this.$t('不等于') },
                    { enName: 'em', cnName: this.$t('为空') },
                    { enName: 'nem', cnName: this.$t('不为空') }]
                } else if (['number', 'datetime'].indexOf(fieldItem.formType) !== -1) {
                  simpleItem.condiArr = [
                    { enName: 'eq', cnName: this.$t('等于') },
                    { enName: 'ne', cnName: this.$t('不等于') },
                    { enName: 'gt', cnName: this.$t('大于') },
                    { enName: 'ge', cnName: this.$t('大于等于') },
                    { enName: 'lt', cnName: this.$t('小于') },
                    { enName: 'le', cnName: this.$t('小于等于') },
                    { enName: 'em', cnName: this.$t('为空') },
                    { enName: 'nem', cnName: this.$t('不为空') }]
                } else if (['cascader', 'address', 'treeselect', 'tag'].indexOf(fieldItem.formType) !== -1) {
                  simpleItem.condiArr = [
                    { enName: 'cn', cnName: this.$t('包含') },
                    { enName: 'nc', cnName: this.$t('不包含') },
                    { enName: 'em', cnName: this.$t('为空') },
                    { enName: 'nem', cnName: this.$t('不为空') }]
                }
              }
            })
          } else if (simpleItem.condition && simpleItem.condition.some(item => item.transitionFromVal)) {
            simpleItem.condition.forEach(item => {
              for (const i in this.allWayData) { if (i.includes(item.transitionFromVal)) { item.showWay = this.allWayData[i] } }
            })
          }
        })
        this.conditionVisual = record.conditionVisual
      }
      if (record.logic) {
        this.logic = record.logic
      }
      this.customJumpTransition = record.customJumpTransition
      this.autoHandleWay = record.autoHandleWay
      this.customHandleSetting = record.customHandleSetting
      Object.assign(this.condition.data, this.customHandleSetting)
      this.loading = false
      this.visible = true
    },
    getOption (item) {
      this.axios({
        url: '/admin/search/dictSearch',
        data: { dictCategoryNumber: item.src }
      }).then(res => {
        this.$set(item, 'option', res.result)
      })
    },
    getTagOption () {
      this.axios({
        url: 'admin/tag/tagOption'
      }).then(res => {
        this.tagOption = res.result.option.map(item => {
          const obj = item
          if (!item.children.length) {
            item.disabled = true
          }
          return obj
        })
      })
    },
    onLoadData (treeNode, item, includeItem) {
      const { value } = treeNode.dataRef
      if (item.dataSource === 'addressBook') {
        return new Promise((resolve) => {
          this.axios({
            url: '/admin/address/getAddressChildren',
            data: { parentNumber: value }
          }).then(res => {
            item.option.forEach(item => {
              if (item.value === value && !item.children) {
                const arr = []
                res.result.forEach(arrItem => {
                  const obj = { label: arrItem.name, value: arrItem.number }
                  arr.push(obj)
                })
                this.$set(item, 'children', arr)
              } else if (item.children) {
                item.children.forEach(childItem => {
                  if (childItem.value === value && !childItem.children) {
                    const arr = []
                    res.result.forEach(arrItem => {
                      const obj = { label: arrItem.name, value: arrItem.number }
                      arr.push(obj)
                    })
                    this.$set(childItem, 'children', arr)
                  } else if (childItem.children) {
                    childItem.children.forEach(childrenItem => {
                      if (childrenItem.value === value && !childrenItem.children) {
                        const arr = []
                        res.result.forEach(arrItem => {
                          const obj = { label: arrItem.name, value: arrItem.number, isLeaf: true }
                          arr.push(obj)
                        })
                        this.$set(childrenItem, 'children', arr)
                      }
                    })
                  }
                })
              }
            })
          })
          resolve()
        })
      } else {
        return new Promise((resolve) => {
          this.axios({
            url: 'admin/userTable/getFieldForm',
            data: { fieldId: item.fieldId, value: includeItem.value }
          }).then(res => {
            this.$set(item, 'option', res.result.data.option)
          })
          resolve()
        })
      }
    },
    getTreeOption (simpleItem, item) {
      this.axios({
        url: 'admin/userTable/getFieldForm',
        data: { fieldId: item.fieldId, value: simpleItem.value }
      }).then(res => {
        this.$set(simpleItem, 'option', res.result.data.option)
      })
    },
    handleSubmit () {
      this.form.validateFields((err, values) => {
        if (!err) {
          values.info.updateuser = this.userInfo.username
          const time = Date.parse(new Date())
          values.info.updateTime = this.moment(time).format('YYYY-MM-DD HH:mm:ss')
          if (this.conditionVisual.length > 0 && this.conditionVisual.every(item => item.type === 'notSet')) {
            const obj = this.conditionVisual[0]
            this.conditionVisual = []
            this.conditionVisual.push(obj)
          } else if (this.conditionVisual.length > 1) {
            this.conditionVisual = this.conditionVisual.filter((item, index) => item.type !== 'notSet')
          }
          this.conditionVisual.forEach(condItem => {
            delete condItem.condiArr
            delete condItem.src
            if (condItem.type === 'field') {
              delete condItem.form
              delete condItem.customCode
              delete condItem.option
              delete condItem.fieldType
              delete condItem.fieldId
            } else if (condItem.type === 'custom') {
              delete condItem.alias
              delete condItem.condition
            } else if (condItem.type !== 'custom' && condItem.type !== 'field') {
              delete condItem.alias
              delete condItem.customCode
              if (condItem.type === 'transitionFrom') {
                condItem.condition.forEach(tranItem => {
                  delete tranItem.showWay
                })
              }
            }
          })
          values.info.conditionVisual = this.conditionVisual
          values.info.remindUser = this.remindUser
          values.info.logic = this.logic
          if (this.workflowtype === 'work') {
            values.info.customJump = this.customJump
            values.info.customJumpTransition = this.customJumpTransition
          } else {
            values.info.autoHandle = this.autoHandle
            values.info.autoHandleWay = this.autoHandleWay
          }
          values.info.customHandle = this.customHandle
          values.info.customHandleSetting = this.customHandleSetting
          values.info.sendNotice = this.sendNotice
          values.info.executionTime = this.config.data.executionTime
          Object.assign(values.info, this.executionTimeSetting)
          if (this.config.action === 'add') {
            values.info.id = parseInt(Math.random() * (10000000 - 100000 + 1) + 100000, 10)
            this.slaDataArr.push(values.info)
          } else {
            this.slaDataArr.splice(this.config.index, 1, values.info)
          }
          this.visible = false
        }
      })
    }
  }
}
</script>
