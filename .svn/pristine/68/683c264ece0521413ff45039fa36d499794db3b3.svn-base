import Mock from 'mockjs2'
import { builder, getBody } from '@/mock/util'
const dataList = {
    averageReplyFirst: [{
        averageEndWorkOrder: 0,
        averageReplyFirst: 6487,
        backlogWorkOrder: 2,
        finishedWorkOrder: 3,
        newWorkOrder: 10,
        ranking: 1,
        realName: '张飞',
        userName: 'wangwu1',
        type: 'reply'
    }, {
        averageEndWorkOrder: 0,
        averageReplyFirst: 12752,
        backlogWorkOrder: 2,
        finishedWorkOrder: 3,
        newWorkOrder: 10,
        ranking: 2,
        realName: '大明',
        userName: 'wangwu2',
        type: 'reply'
    }, {
        averageEndWorkOrder: 30,
        averageReplyFirst: 13700,
        backlogWorkOrder: 21,
        finishedWorkOrder: 32,
        newWorkOrder: 10,
        ranking: 3,
        realName: '关羽',
        userName: 'guanyu',
        type: 'reply'
    }, {
        averageEndWorkOrder: 0,
        averageReplyFirst: 13909,
        backlogWorkOrder: 2,
        finishedWorkOrder: 3,
        newWorkOrder: 10,
        ranking: 4,
        realName: '赵云',
        userName: 'zhaoyun',
        type: 'reply'
    }, {
        averageEndWorkOrder: 0,
        averageReplyFirst: 15872,
        backlogWorkOrder: 2,
        finishedWorkOrder: 3,
        newWorkOrder: 10,
        ranking: 5,
        realName: '张姐',
        userName: 'zhangjie',
        type: 'reply'
    }, {
        averageEndWorkOrder: 0,
        averageReplyFirst: 16573,
        backlogWorkOrder: 2,
        finishedWorkOrder: 3,
        newWorkOrder: 10,
        ranking: 6,
        realName: '王陈',
        userName: 'wangchen',
        type: 'reply'
    }],
    homeMonitorRes: {
        backlogWorkOrder: 5,
        finishedWorkOrder: 86,
        averageReplyFirst: 16856,
        averageEndWorkOrder: 24985
    },
    nowBacklog: [{
        averageEndWorkOrder: 0,
        averageReplyFirst: 16,
        backlogWorkOrder: 50,
        finishedWorkOrder: 19,
        newWorkOrder: 27,
        ranking: 1,
        realName: '张三',
        userName: 'zhangsan1',
        type: 'backlog'
    }, {
        averageEndWorkOrder: 10,
        averageReplyFirst: 20,
        backlogWorkOrder: 40,
        finishedWorkOrder: 30,
        newWorkOrder: 80,
        ranking: 2,
        realName: '李四',
        userName: 'lisi1',
        type: 'backlog'
    }, {
        averageEndWorkOrder: 0,
        averageReplyFirst: 0,
        backlogWorkOrder: 30,
        finishedWorkOrder: 3,
        newWorkOrder: 10,
        ranking: 3,
        realName: '王五',
        userName: 'wangwu3',
        type: 'backlog'
    }, {
        averageEndWorkOrder: 0,
        averageReplyFirst: 0,
        backlogWorkOrder: 20,
        finishedWorkOrder: 3,
        newWorkOrder: 10,
        ranking: 4,
        realName: '王一',
        userName: 'wangwu4',
        type: 'backlog'
    }, {
        averageEndWorkOrder: 0,
        averageReplyFirst: 0,
        backlogWorkOrder: 10,
        finishedWorkOrder: 3,
        newWorkOrder: 10,
        ranking: 5,
        realName: '小明',
        userName: 'wangwu5',
        type: 'backlog'
    }, {
        averageEndWorkOrder: 30,
        averageReplyFirst: 20,
        backlogWorkOrder: 9,
        finishedWorkOrder: 32,
        newWorkOrder: 10,
        ranking: 6,
        realName: '小王',
        userName: 'wangwu6',
        type: 'backlog'
    }, {
        averageEndWorkOrder: 0,
        averageReplyFirst: 0,
        backlogWorkOrder: 8,
        finishedWorkOrder: 3,
        newWorkOrder: 10,
        ranking: 7,
        realName: '张哥',
        userName: 'wangwu7',
        type: 'backlog'
    }],
    nowFinished: [{
        averageEndWorkOrder: 0,
        averageReplyFirst: 0,
        backlogWorkOrder: 2,
        finishedWorkOrder: 148,
        newWorkOrder: 10,
        ranking: 1,
        realName: '小李',
        userName: 'wangwu8',
        type: 'finished'
    }, {
        averageEndWorkOrder: 30,
        averageReplyFirst: 20,
        backlogWorkOrder: 21,
        finishedWorkOrder: 132,
        newWorkOrder: 10,
        ranking: 2,
        realName: '小王',
        userName: 'wangwu9',
        type: 'finished'
    }, {
        averageEndWorkOrder: 0,
        averageReplyFirst: 0,
        backlogWorkOrder: 2,
        finishedWorkOrder: 125,
        newWorkOrder: 10,
        ranking: 3,
        realName: '小张',
        userName: 'wangwu11',
        type: 'finished'
    }, {
        averageEndWorkOrder: 0,
        averageReplyFirst: 16,
        backlogWorkOrder: 20,
        finishedWorkOrder: 99,
        newWorkOrder: 27,
        ranking: 4,
        realName: '张三',
        userName: 'zhangsan',
        type: 'finished'
    }, {
        averageEndWorkOrder: 10,
        averageReplyFirst: 20,
        backlogWorkOrder: 30,
        finishedWorkOrder: 80,
        newWorkOrder: 80,
        ranking: 5,
        realName: '李四',
        userName: 'lisi',
        type: 'finished'
    }, {
        averageEndWorkOrder: 0,
        averageReplyFirst: 0,
        backlogWorkOrder: 2,
        finishedWorkOrder: 76,
        newWorkOrder: 10,
        ranking: 6,
        realName: '王五',
        userName: 'wangwu12',
        type: 'finished'
    }, {
        averageEndWorkOrder: 0,
        averageReplyFirst: 0,
        backlogWorkOrder: 2,
        finishedWorkOrder: 50,
        newWorkOrder: 10,
        ranking: 7,
        realName: '王一',
        userName: 'wangwu13',
        type: 'finished'
    }],
    workforceManagement: {}
}
const indexInit = (options) => {
    return builder({
        averageReplyFirst: dataList.averageReplyFirst,
        homeMonitorRes: dataList.homeMonitorRes,
        nowBacklog: dataList.nowBacklog,
        nowFinished: dataList.nowFinished,
        workforceManagement: dataList.workforceManagement
    })
}

const tableData = [...dataList.averageReplyFirst, ...dataList.nowBacklog, ...dataList.nowFinished]
const tableShow = (options) => {
    const parameters = getBody(options)
    const pageNo = parseInt(parameters.pageNo)
    const lastData = tableData.filter(item => item.type === parameters.type)
    return builder({
        pageNo: pageNo,
        totalCount: tableData.length,
        data: lastData
    })
}
Mock.mock(/\/crm\/report\/getHomeMonitoring/, 'post', indexInit)
Mock.mock(/\/crm\/report\/getRanking/, 'post', tableShow)
