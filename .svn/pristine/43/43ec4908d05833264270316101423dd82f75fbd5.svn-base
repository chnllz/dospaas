<template>
  <div>
    <a-form layout="inline" style="display: flex; margin-bottom: 8px">
      <a-row style="width: 100%; display: flex; align-items: center">
        <a-col :span="5"></a-col>
        <a-col :span="6">
          <a-form-item :label="$t('名称')">
            <a-input v-model="queryParam.name" allowClear />
          </a-form-item>
        </a-col>
        <a-col :span="10">
          <a-space>
            <a-button htmlType="submit" type="primary" @click="$refs.table.refresh(true)">{{ $t('搜索') }}</a-button>
            <a-button
              @click="
                () => {
                  queryParam = {}
                  $refs.table.refresh(true)
                }
              "
            >
              {{ $t('重置') }}
            </a-button>
            <a-button v-action:add icon="plus" @click="handleAddData('table_form_list')">
              {{ $t('添加数据窗口') }}
            </a-button>
            <a-button v-action:add icon="plus" @click="handleAddData('table_card_list')">
              {{ $t('添加卡片数据窗口') }}
            </a-button>
          </a-space>
        </a-col>
      </a-row>
    </a-form>
    <s-table
      ref="table"
      size="small"
      rowKey="id"
      :columns="columns"
      :data="loadDataTable"
      :sorter="{ field: 'id', order: 'descend' }"
    >
      <div slot="action" slot-scope="text, record">
        <a :disabled="record.accessLevel === 2" @click="handleEdit(record)">{{ $t('编辑') }}</a>
        <a-divider type="vertical" />
        <a @click="handleCopy(record)">{{ $t('复制') }}</a>
        <a-divider type="vertical" />
        <a :disabled="!!record.accessLevel" @click="handleDelete(record)">{{ $t('删除') }}</a>
        <a-divider type="vertical" />
        <a @click="handleCreateMenu(record)">{{ $t('创建菜单') }}</a>
      </div>
      <template slot="UID" slot-scope="text">
        <span :title="text">{{ text }}</span>
      </template>
    </s-table>
    <tplView-data-menu ref="tplviewDataMenu" @ok="handleOk" />
    <a-modal :title="config.title" :visible="visible" :destroyOnClose="true" @cancel="visible = !visible">
      <a-spin :spinning="loading">
        <a-form :form="form" :labelCol="labelCol" :wrapperCol="wrapperCol">
          <a-form-item :label="$t('数据窗口名称')">
            <a-input
              v-decorator="[
                'info[name]',
                {
                  initialValue: '',
                  rules: [
                    { required: true, message: $t('请输入名称') },
                    { min: 2, max: 20, message: $t('请输入2-20个字符') }
                  ]
                }
              ]"
            />
          </a-form-item>
        </a-form>
      </a-spin>
      <div slot="footer">
        <a-button type="primary" :loading="loading" @click="handleSubmit">{{ $t('保存') }}</a-button>
        <a-button @click="visible = !visible">{{ $t('关闭') }}</a-button>
      </div>
    </a-modal>
  </div>
</template>
<script>
import { listButton, extendButton } from '@/views/admin/Table/DefaultButton'
export default {
  i18n: window.lang('admin'),
  components: {
    TplViewDataMenu: () => import('./TplViewDataMenu')
  },
  props: {
    item: {
      type: Object,
      default () {
        return {}
      },
      required: false
    }
  },
  data () {
    return {
      visible: false,
      loading: false,
      // 搜索参数
      queryParam: {},
      // 表头
      columns: [{
        title: this.$t('操作'),
        dataIndex: 'action',
        width: 210,
        scopedSlots: { customRender: 'action' },
        align: 'center'
      }, {
        title: 'ID',
        dataIndex: 'id',
        sorter: true,
        width: 60
      }, {
        title: 'UID',
        dataIndex: 'uid',
        sorter: true,
        width: 150,
        scopedSlots: { customRender: 'uid' }
      }, {
        title: this.$t('类型'),
        dataIndex: 'variable'
      }, {
        title: this.$t('名称'),
        dataIndex: 'name',
        sorter: true
      }, {
        title: this.$t('备注'),
        dataIndex: 'description'
      }, {
        title: this.$t('最后修改人'),
        dataIndex: 'updateUser',
        sorter: true
      }, {
        title: this.$t('最后修改时间'),
        dataIndex: 'updateTime',
        sorter: true
      }],
      form: this.$form.createForm(this),
      labelCol: { span: 6 },
      wrapperCol: { span: 18 },
      config: {},
      settingData: {}
    }
  },
  methods: {
    loadDataTable (parameter) {
      if (this.item.tableId) {
        return this.axios({
          url: '/admin/template/data',
          data: Object.assign(parameter, this.queryParam, { tableId: this.item.tableId, variable: ['table_form_list', 'table_flow_list', 'table_card_list'] })
        }).then(res => {
          return res.result
        })
      }
    },
    handleAddData (type) {
      let title = ''
      switch (type) {
        case 'table_form_list':
          title = this.$t('普通视图')
          break
        case 'table_flow_list':
          title = this.$t('流程视图')
          break
        case 'table_card_list':
          title = this.$t('卡片视图')
          break
      }
      this.config = {
        Keyid: String(Math.floor(Math.random() * (100000 - 1000 + 1) + 1000)),
        action: 'add',
        title: title,
        submitUrl: '/admin/template/addData',
        url: '/admin/template/editData',
        tableId: this.item.tableId,
        variable: type,
        module: this.item.module,
        item: this.item
      }
      this.axios({
        url: '/admin/template/addData',
        data: {
          action: 'get',
          id: 0,
          tableId: this.item.tableId,
          variable: type
        }
      }).then(res => {
        if (!res.code) {
          this.visible = true
          this.settingData = res.result
        } else {
          this.$message.warning(res.message)
        }
      })
    },
    handleEdit (record) {
      const data = {
        action: 'edit',
        title: record.name,
        url: '/admin/template/editData',
        record: record,
        tableId: this.item.tableId || record.value,
        variable: record.variable,
        module: this.item.module,
        alias: this.item.data ? this.item.data.alias : '',
        item: this.item
      }
      this.$emit('ok', data)
    },
    handleCopy (record) {
      this.config = {
        action: 'copy',
        title: `${this.$t('复制')}: ` + record.name,
        url: '/admin/template/editData',
        submitUrl: '/admin/template/addData',
        record: record,
        tableId: this.item.tableId || record.value,
        variable: record.variable,
        module: this.item.module,
        alias: this.item.data ? this.item.data.alias : '',
        item: this.item
      }
      this.axios({
        url: '/admin/template/editData',
        data: {
          action: 'get',
          id: record.id,
          tableId: this.item.tableId,
          variable: record.variable
        }
      }).then(res => {
        if (!res.code) {
          this.visible = true
          this.settingData = res.result
        } else {
          this.$message.warning(res.message)
        }
      })
    },
    handleSubmit () {
      this.form.validateFields((errors, values) => {
        if (!errors) {
          values.info.value = this.config.tableId
          values.info.module = this.config.module
          values.info.variable = this.config.variable
          values.setting = this.config.action === 'add' ? {
            pageSize: '20',
            sortField: 'id',
            sortOrder: 'descend',
            multiSelect: false,
            drawerPercentWidth: 80,
            drawerType: '0',
            labelWidth: 100,
            lockLeft: 0,
            lockRight: 0,
            pageMode: 'default',
            customColumn: false,
            helpText: false,
            dataSource: '',
            description: '',
            actionColumn: {
              alias: 'action',
              align: 'center',
              display: 'v',
              dataIndex: 'action',
              inlineButtons: [],
              fieldId: 'action',
              maxDisplay: 3,
              actionStyle: '2',
              attribute: '',
              name: '操作',
              sorter: '0',
              sortId: '10',
              listOrder: '10',
              type: 'action',
              id: 'action',
              value: 'action',
              width: '160'
            },
            fieldColumns: [{
              alias: 'id',
              align: 'right',
              attribute: '',
              category: '',
              customTitle: null,
              display: 'v',
              edit: null,
              fieldId: 'id',
              formType: 'text',
              id: 'id',
              index: '1',
              listOrder: '20',
              name: 'ID',
              rule: 'readonly',
              sorter: '1',
              sortId: '20',
              value: 'id',
              width: '60'
            }],
            dataWindowButtons: listButton.filter(item => ['sys_add', 'bar_detail', 'sys_delete'].includes(item.usage)),
            formViewButtons: this.settingData.formViewButtons || extendButton,
            myTemplate: [],
            searchSection: {
              combinationShow: '1',
              labelWidth: 100,
              defaultStatus: '0',
              labelLocation: 'left'
            }
          } : this.settingData.setting
          this.loading = true
          this.axios({
            url: '/admin/template/checkRepeat',
            data: { id: 0, name: values.info.name, type: this.config.variable, tableId: this.config.tableId }
          }).then((res) => {
            if (res.code) {
              this.$message.error(res.message)
              this.loading = false
            } else {
              this.axios({
                url: this.config.submitUrl,
                data: Object.assign(values, { action: 'submit' })
              }).then((res) => {
                this.loading = false
                if (!res.code) {
                  const data = {
                    action: 'edit',
                    title: values.info.name,
                    url: '/admin/template/editData',
                    record: this.config.action === 'add' ? {
                      id: res.result.id,
                      module: this.item.module,
                      name: values.info.name,
                      type: this.config.title,
                      uid: res.result.uid,
                      value: this.item.tableId,
                      variable: this.config.variable
                    } : Object.assign(this.settingData.data, { id: res.result.id, uid: res.result.uid }),
                    tableId: this.item.tableId,
                    variable: values.info.variable,
                    module: this.item.module,
                    alias: this.item.data ? this.item.data.alias : '',
                    item: this.item
                  }
                  this.$emit('refresh', values, res.result.id)
                  this.$emit('ok', data)
                  this.handleOk()
                  this.visible = false
                }
              })
            }
          })
        }
      })
    },
    handleCreateMenu (record) {
      this.$refs.tplviewDataMenu.show({
        title: `${this.$t('创建菜单')}`,
        url: '/admin/menu/getTreeMenu',
        submitUrl: '/admin/template/addMenu',
        record: record
      })
    },
    handleOk () {
      this.$refs.table.refresh()
    },
    handleDelete (record) {
      const that = this
      this.$confirm({
        title: record ? this.$t('您确认要删除该记录吗？') : this.$t('您确认要删除选中的记录吗？'),
        onOk () {
          that.axios({
            url: '/admin/template/delete',
            data: { id: record.id }
          }).then(res => {
            that.$refs.table.refresh()
            that.$emit('refresh', record.id)
          })
        }
      })
    }
  }
}
</script>
