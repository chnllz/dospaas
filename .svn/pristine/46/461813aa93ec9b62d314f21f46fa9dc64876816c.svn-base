<template>
  <a-card>
    <a-spin :spinning="loading">
      <div style="height: calc(100vh - 170px)">
        <a-row>
          <grid-layout
            :layout.sync="layout"
            :col-num="colNum"
            :row-height="30"
            :is-draggable="false"
            :is-resizable="false"
            :vertical-compact="true"
            :use-css-transforms="true"
          >
            <grid-item
              v-for="item in layout"
              :key="item.i"
              :static="item.static"
              :x="item.x"
              :y="item.y"
              :w="item.w"
              :h="item.h"
              :i="item.i"
              class="gridItem"
            >
              <a @click="clickRight(gridData[item.i].src)">
                <div
                  style="
                    display: flex;
                    flex-direction: column;
                    justify-content: space-between;
                    width: 100%;
                    height: 100%;
                  "
                >
                  <div style="display: flex; justify-content: flex-start; padding-left: 15px">
                    <h3 style="padding: 5px">{{ gridData[item.i].productLine }}</h3>
                  </div>
                  <div style="display: flex; justify-content: space-around; width: 100%; font-size: 23px">
                    <h1 style="padding-left: 20px">{{ gridData[item.i].productName }}</h1>
                    <font-awesome-icon
                      v-show="gridData[item.i].icon"
                      :icon="gridData[item.i].icon ? gridData[item.i].icon : 'fa-bell'"
                      :style="{
                        color: gridData[item.i].iconColor,
                        lineHeight: '23px',
                        paddingRight: '20px',
                        marginTop: '13px'
                      }"
                    ></font-awesome-icon>
                  </div>
                  <h3 style="padding-left: 20px">{{ gridData[item.i].productInstruction }}</h3>
                </div>
              </a>
            </grid-item>
          </grid-layout>
        </a-row>
      </div>
    </a-spin>
  </a-card>
</template>
<script>
import VueGridLayout from 'vue-grid-layout'
export default {
  components: {
    GridLayout: VueGridLayout.GridLayout,
    GridItem: VueGridLayout.GridItem
  },
  data () {
    return {
      layout: [],
      colNum: 12,
      gridIndex: 0,
      gridData: [],
      loading: false
    }
  },
  created () {
    this.loading = true
    this.loadData()
  },
  methods: {
    loadData () {
      this.axios({
        url: '/dashboard/view/mockInit'
      }).then(res => {
        this.loading = false
        this.layout = res.result.data.layout
        this.gridData = res.result.data.gridData
      })
    },
    clickRight (src) {
      window.open(src, '_blank')
    }
  }
}
</script>
<style lang="less" scoped>
.gridItem {
  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
  touch-action: none;
}
</style>
