import storage from '@/utils/storage'
import notification from 'ant-design-vue/es/notification'
const app = {
  state: {
    sidebar: true,
    device: 'desktop',
    theme: '',
    layout: '',
    contentWidth: '',
    fixedHeader: false,
    fixSiderbar: false,
    autoHideHeader: false,
    color: null,
    weak: false,
    multiTab: true,
    // 保存doscs系统的config('system')
    setting: {
      // 语言初始化
      lang: 'zh_CN'
    },
    // 打开帮助文档
    showDocument: {
      width: 900,
      visible: false,
      number: ''
    },
    audioPlayData: {
      visible: false,
      sourceUrl: ''
    },
    globalSpin: {
      spinning: false,
      tip: 'Loading...',
      size: 'default'
    }
  },
  mutations: {
    SET_SIDEBAR_TYPE: (state, type) => {
      state.sidebar = type
      storage.set('SIDEBAR_TYPE', type)
    },
    CLOSE_SIDEBAR: (state) => {
      storage.set('SIDEBAR_TYPE', true)
      state.sidebar = false
    },
    TOGGLE_DEVICE: (state, device) => {
      state.device = device
    },
    TOGGLE_THEME: (state, theme) => {
      // setStore('_DEFAULT_THEME', theme)
      storage.set('DEFAULT_THEME', theme)
      state.theme = theme
    },
    TOGGLE_LAYOUT_MODE: (state, layout) => {
      storage.set('DEFAULT_LAYOUT_MODE', layout)
      state.layout = layout
    },
    TOGGLE_FIXED_HEADER: (state, fixed) => {
      storage.set('DEFAULT_FIXED_HEADER', fixed)
      state.fixedHeader = fixed
    },
    TOGGLE_FIXED_SIDERBAR: (state, fixed) => {
      storage.set('DEFAULT_FIXED_SIDEMENU', fixed)
      state.fixSiderbar = fixed
    },
    TOGGLE_FIXED_HEADER_HIDDEN: (state, show) => {
      storage.set('DEFAULT_FIXED_HEADER_HIDDEN', show)
      state.autoHideHeader = show
    },
    TOGGLE_CONTENT_WIDTH: (state, type) => {
      storage.set('DEFAULT_CONTENT_WIDTH_TYPE', type)
      state.contentWidth = type
    },
    TOGGLE_COLOR: (state, color) => {
      storage.set('DEFAULT_COLOR', color)
      state.color = color
    },
    TOGGLE_HEAD_COLOR: (state, color) => {
      storage.set('DEFAULT_HEAD_COLOR', color)
      state.headColor = color
    },
    TOGGLE_WEAK: (state, flag) => {
      storage.set('DEFAULT_COLOR_WEAK', flag)
      state.weak = flag
    },
    TOGGLE_MULTI_TAB: (state, bool) => {
      storage.set('DEFAULT_MULTI_TAB', bool)
      state.multiTab = bool
    },
    SET_SETTING: (state, setting) => {
      state.setting = Object.assign({}, state.setting, setting)
    },
    SHOW_DOCUMENT: (state, obj) => {
      state.showDocument = obj
    },
    SET_GLOBAL_SPIN: (state, obj) => {
      const defaultParam = {
        spinning: false,
        tip: 'Loading...',
        size: 'default'
      }
      if (typeof (obj) === 'boolean') {
        state.globalSpin = Object.assign(defaultParam, { spinning: obj })
      } else {
        state.globalSpin = Object.assign(defaultParam, obj)
      }
    },
    NOTIFICATION: (state, obj) => {
      if (obj.code === 0) {
        notification.success({
          message: '操作成功',
          description: obj.message
        })
      } else if (obj.code < 2000) {
        notification.info({
          message: '系统信息',
          description: obj.message
        })
      } else if (obj.code < 3000) {
        notification.warning({
          message: '系统警告',
          description: obj.message
        })
      } else {
        notification.error({
          message: '系统错误',
          description: obj.message
        })
      }
    },
    SET_WEBSOCKET: (state, obj) => {
      state.webSocket = obj
    }
  },
  actions: {
    setSidebar ({ commit }, type) {
      commit('SET_SIDEBAR_TYPE', type)
    },
    CloseSidebar ({ commit }) {
      commit('CLOSE_SIDEBAR')
    },
    ToggleDevice ({ commit }, device) {
      commit('TOGGLE_DEVICE', device)
    },
    ToggleTheme ({ commit }, theme) {
      commit('TOGGLE_THEME', theme)
    },
    ToggleLayoutMode ({ commit }, mode) {
      commit('TOGGLE_LAYOUT_MODE', mode)
    },
    ToggleFixedHeader ({ commit }, fixedHeader) {
      if (!fixedHeader) {
        commit('TOGGLE_FIXED_HEADER_HIDDEN', false)
      }
      commit('TOGGLE_FIXED_HEADER', fixedHeader)
    },
    ToggleFixSiderbar ({ commit }, fixSiderbar) {
      commit('TOGGLE_FIXED_SIDERBAR', fixSiderbar)
    },
    ToggleFixedHeaderHidden ({ commit }, show) {
      commit('TOGGLE_FIXED_HEADER_HIDDEN', show)
    },
    ToggleContentWidth ({ commit }, type) {
      commit('TOGGLE_CONTENT_WIDTH', type)
    },
    ToggleColor ({ commit }, color) {
      commit('TOGGLE_COLOR', color)
    },
    ToggleHeadColor ({ commit }, color) {
      commit('TOGGLE_HEAD_COLOR', color)
    },
    ToggleWeak ({ commit }, weakFlag) {
      commit('TOGGLE_WEAK', weakFlag)
    },
    ToggleMultiTab ({ commit }, bool) {
      commit('TOGGLE_MULTI_TAB', bool)
    },
    SetSetting ({ commit }, setting) {
      commit('SET_SETTING', setting)
    }
  }
}

export default app
